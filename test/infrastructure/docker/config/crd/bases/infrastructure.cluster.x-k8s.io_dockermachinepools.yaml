---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: dockermachinepools.infrastructure.cluster.x-k8s.io
spec:
  group: infrastructure.cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: DockerMachinePool
    listKind: DockerMachinePoolList
    plural: dockermachinepools
    singular: dockermachinepool
  scope: Namespaced
  versions:
  - name: v1alpha3
    schema:
      openAPIV3Schema:
        description: DockerMachinePool is the Schema for the dockermachinepools API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DockerMachinePoolSpec defines the desired state of DockerMachinePool.
            properties:
              providerID:
                description: ProviderID is the identification ID of the Machine Pool
                type: string
              providerIDList:
                description: ProviderIDList is the list of identification IDs of machine
                  instances managed by this Machine Pool
                items:
                  type: string
                type: array
              template:
                description: Template contains the details used to build a replica
                  machine within the Machine Pool
                properties:
                  customImage:
                    description: CustomImage allows customizing the container image
                      that is used for running the machine
                    type: string
                  extraMounts:
                    description: ExtraMounts describes additional mount points for
                      the node container These may be used to bind a hostPath
                    items:
                      description: Mount specifies a host volume to mount into a container.
                        This is a simplified version of kind v1alpha4.Mount types.
                      properties:
                        containerPath:
                          description: Path of the mount within the container.
                          type: string
                        hostPath:
                          description: Path of the mount on the host. If the hostPath
                            doesn't exist, then runtimes should report error. If the
                            hostpath is a symbolic link, runtimes should follow the
                            symlink and mount the real destination to container.
                          type: string
                        readOnly:
                          description: If set, the mount is read-only.
                          type: boolean
                      type: object
                    type: array
                  preLoadImages:
                    description: PreLoadImages allows to pre-load images in a newly
                      created machine. This can be used to speed up tests by avoiding
                      e.g. to download CNI images on all the containers.
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            description: DockerMachinePoolStatus defines the observed state of DockerMachinePool.
            properties:
              conditions:
                description: Conditions defines current service state of the DockerMachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              instances:
                description: Instances contains the status for each instance in the
                  pool
                items:
                  description: DockerMachinePoolInstanceStatus contains status information
                    about a DockerMachinePool.
                  properties:
                    addresses:
                      description: Addresses contains the associated addresses for
                        the docker machine.
                      items:
                        description: MachineAddress contains information for the node's
                          address.
                        properties:
                          address:
                            description: The machine address.
                            type: string
                          type:
                            description: Machine address type, one of Hostname, ExternalIP
                              or InternalIP.
                            type: string
                        required:
                        - address
                        - type
                        type: object
                      type: array
                    bootstrapped:
                      description: Bootstrapped is true when the kubeadm bootstrapping
                        has been run against this machine
                      type: boolean
                    instanceName:
                      description: InstanceName is the identification of the Machine
                        Instance within the Machine Pool
                      type: string
                    providerID:
                      description: ProviderID is the provider identification of the
                        Machine Pool Instance
                      type: string
                    ready:
                      description: Ready denotes that the machine (docker container)
                        is ready
                      type: boolean
                    version:
                      description: Version defines the Kubernetes version for the
                        Machine Instance
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: The generation observed by the deployment controller.
                format: int64
                type: integer
              ready:
                description: Ready denotes that the machine pool is ready
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Time duration since creation of DockerMachinePool
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha4
    schema:
      openAPIV3Schema:
        description: DockerMachinePool is the Schema for the dockermachinepools API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DockerMachinePoolSpec defines the desired state of DockerMachinePool.
            properties:
              providerID:
                description: ProviderID is the identification ID of the Machine Pool
                type: string
              providerIDList:
                description: ProviderIDList is the list of identification IDs of machine
                  instances managed by this Machine Pool
                items:
                  type: string
                type: array
              template:
                description: Template contains the details used to build a replica
                  machine within the Machine Pool
                properties:
                  customImage:
                    description: CustomImage allows customizing the container image
                      that is used for running the machine
                    type: string
                  extraMounts:
                    description: ExtraMounts describes additional mount points for
                      the node container These may be used to bind a hostPath
                    items:
                      description: Mount specifies a host volume to mount into a container.
                        This is a simplified version of kind v1alpha4.Mount types.
                      properties:
                        containerPath:
                          description: Path of the mount within the container.
                          type: string
                        hostPath:
                          description: Path of the mount on the host. If the hostPath
                            doesn't exist, then runtimes should report error. If the
                            hostpath is a symbolic link, runtimes should follow the
                            symlink and mount the real destination to container.
                          type: string
                        readOnly:
                          description: If set, the mount is read-only.
                          type: boolean
                      type: object
                    type: array
                  preLoadImages:
                    description: PreLoadImages allows to pre-load images in a newly
                      created machine. This can be used to speed up tests by avoiding
                      e.g. to download CNI images on all the containers.
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            description: DockerMachinePoolStatus defines the observed state of DockerMachinePool.
            properties:
              conditions:
                description: Conditions defines current service state of the DockerMachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              instances:
                description: Instances contains the status for each instance in the
                  pool
                items:
                  description: DockerMachinePoolInstanceStatus contains status information
                    about a DockerMachinePool.
                  properties:
                    addresses:
                      description: Addresses contains the associated addresses for
                        the docker machine.
                      items:
                        description: MachineAddress contains information for the node's
                          address.
                        properties:
                          address:
                            description: The machine address.
                            type: string
                          type:
                            description: Machine address type, one of Hostname, ExternalIP
                              or InternalIP.
                            type: string
                        required:
                        - address
                        - type
                        type: object
                      type: array
                    bootstrapped:
                      description: Bootstrapped is true when the kubeadm bootstrapping
                        has been run against this machine
                      type: boolean
                    instanceName:
                      description: InstanceName is the identification of the Machine
                        Instance within the Machine Pool
                      type: string
                    providerID:
                      description: ProviderID is the provider identification of the
                        Machine Pool Instance
                      type: string
                    ready:
                      description: Ready denotes that the machine (docker container)
                        is ready
                      type: boolean
                    version:
                      description: Version defines the Kubernetes version for the
                        Machine Instance
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: The generation observed by the deployment controller.
                format: int64
                type: integer
              ready:
                description: Ready denotes that the machine pool is ready
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Time duration since creation of DockerMachinePool
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: DockerMachinePool is the Schema for the dockermachinepools API.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: DockerMachinePoolSpec defines the desired state of DockerMachinePool.
            properties:
              infrastructureRefList:
                description: InfrastructureRefList are the infrastructure references
                  of machine instances, populated by the provider. This field must
                  contain the infrastructure references of all instances in the machine
                  pool.
                items:
                  description: 'ObjectReference contains enough information to let
                    you inspect or modify the referred object. --- New uses of this
                    type are discouraged because of difficulty describing its usage
                    when embedded in APIs. 1. Ignored fields.  It includes many fields
                    which are not generally honored.  For instance, ResourceVersion
                    and FieldPath are both very rarely valid in actual usage. 2. Invalid
                    usage help.  It is impossible to add specific help for individual
                    usage.  In most embedded usages, there are particular restrictions
                    like, "must refer only to types A and B" or "UID not honored"
                    or "name must be restricted". Those cannot be well described when
                    embedded. 3. Inconsistent validation.  Because the usages are
                    different, the validation rules are different by usage, which
                    makes it hard for users to predict what will happen. 4. The fields
                    are both imprecise and overly precise.  Kind is not a precise
                    mapping to a URL. This can produce ambiguity during interpretation
                    and require a REST mapping.  In most cases, the dependency is
                    on the group,resource tuple and the version of the actual struct
                    is irrelevant. 5. We cannot easily change it.  Because this type
                    is embedded in many locations, updates to this type will affect
                    numerous schemas.  Don''t make new APIs embed an underspecified
                    API type they do not control. Instead of using this type, create
                    a locally provided and used type that is well-focused on your
                    reference. For example, ServiceReferences for admission registration:
                    https://github.com/kubernetes/api/blob/release-1.17/admissionregistration/v1/types.go#L533
                    .'
                  properties:
                    apiVersion:
                      description: API version of the referent.
                      type: string
                    fieldPath:
                      description: 'If referring to a piece of an object instead of
                        an entire object, this string should contain a valid JSON/Go
                        field access statement, such as desiredState.manifest.containers[2].
                        For example, if the object reference is to a container within
                        a pod, this would take on a value like: "spec.containers{name}"
                        (where "name" refers to the name of the container that triggered
                        the event) or if no container name is specified "spec.containers[2]"
                        (container with index 2 in this pod). This syntax is chosen
                        only to have some well-defined way of referencing a part of
                        an object. TODO: this design is not final and this field is
                        subject to change in the future.'
                      type: string
                    kind:
                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                      type: string
                    name:
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                      type: string
                    namespace:
                      description: 'Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/'
                      type: string
                    resourceVersion:
                      description: 'Specific resourceVersion to which this reference
                        is made, if any. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency'
                      type: string
                    uid:
                      description: 'UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids'
                      type: string
                  type: object
                type: array
              providerID:
                description: ProviderID is the identification ID of the Machine Pool
                type: string
              providerIDList:
                description: ProviderIDList is the list of identification IDs of machine
                  instances managed by this Machine Pool
                items:
                  type: string
                type: array
              template:
                description: Template contains the details used to build a replica
                  machine within the Machine Pool
                properties:
                  customImage:
                    description: CustomImage allows customizing the container image
                      that is used for running the machine
                    type: string
                  extraMounts:
                    description: ExtraMounts describes additional mount points for
                      the node container These may be used to bind a hostPath
                    items:
                      description: Mount specifies a host volume to mount into a container.
                        This is a simplified version of kind v1alpha4.Mount types.
                      properties:
                        containerPath:
                          description: Path of the mount within the container.
                          type: string
                        hostPath:
                          description: Path of the mount on the host. If the hostPath
                            doesn't exist, then runtimes should report error. If the
                            hostpath is a symbolic link, runtimes should follow the
                            symlink and mount the real destination to container.
                          type: string
                        readOnly:
                          description: If set, the mount is read-only.
                          type: boolean
                      type: object
                    type: array
                  preLoadImages:
                    description: PreLoadImages allows to pre-load images in a newly
                      created machine. This can be used to speed up tests by avoiding
                      e.g. to download CNI images on all the containers.
                    items:
                      type: string
                    type: array
                type: object
            type: object
          status:
            description: DockerMachinePoolStatus defines the observed state of DockerMachinePool.
            properties:
              conditions:
                description: Conditions defines current service state of the DockerMachinePool.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: Last time the condition transitioned from one status
                        to another. This should be when the underlying condition changed.
                        If that is not known, then using the time when the API field
                        changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: A human readable message indicating details about
                        the transition. This field may be empty.
                      type: string
                    reason:
                      description: The reason for the condition's last transition
                        in CamelCase. The specific API may choose whether or not this
                        field is considered a guaranteed API. This field may not be
                        empty.
                      type: string
                    severity:
                      description: Severity provides an explicit classification of
                        Reason code, so the users or machines can immediately understand
                        the current situation and act accordingly. The Severity field
                        MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              instances:
                description: Instances contains the status for each instance in the
                  pool
                items:
                  description: DockerMachinePoolInstanceStatus contains status information
                    about a DockerMachinePool.
                  properties:
                    addresses:
                      description: Addresses contains the associated addresses for
                        the docker machine.
                      items:
                        description: MachineAddress contains information for the node's
                          address.
                        properties:
                          address:
                            description: The machine address.
                            type: string
                          type:
                            description: Machine address type, one of Hostname, ExternalIP
                              or InternalIP.
                            type: string
                        required:
                        - address
                        - type
                        type: object
                      type: array
                    bootstrapped:
                      description: Bootstrapped is true when the kubeadm bootstrapping
                        has been run against this machine
                      type: boolean
                    instanceName:
                      description: InstanceName is the identification of the Machine
                        Instance within the Machine Pool
                      type: string
                    providerID:
                      description: ProviderID is the provider identification of the
                        Machine Pool Instance
                      type: string
                    ready:
                      description: Ready denotes that the machine (docker container)
                        is ready
                      type: boolean
                    version:
                      description: Version defines the Kubernetes version for the
                        Machine Instance
                      type: string
                  type: object
                type: array
              observedGeneration:
                description: The generation observed by the deployment controller.
                format: int64
                type: integer
              ready:
                description: Ready denotes that the machine pool is ready
                type: boolean
              replicas:
                description: Replicas is the most recently observed number of replicas.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
