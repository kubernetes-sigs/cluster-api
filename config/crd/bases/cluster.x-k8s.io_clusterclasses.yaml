
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: clusterclasses.cluster.x-k8s.io
spec:
  group: cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: ClusterClass
    listKind: ClusterClassList
    plural: clusterclasses
    shortNames:
    - cc
    singular: clusterclass
  scope: Namespaced
  versions:
  - name: v1alpha4
    schema:
      openAPIV3Schema:
        description: ClusterClass is a template which can be used to create managed
          topologies.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ClusterClassSpec describes the desired state of the ClusterClass.
            properties:
              controlPlane:
                description: ControlPlane is a reference to a local struct that holds
                  the details for provisioning the Control Plane for the Cluster.
                properties:
                  ref:
                    description: Ref is a required reference to a custom resource
                      offered by a provider.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                    type: object
                required:
                - ref
                type: object
              infrastructure:
                description: Infrastructure is a reference to a provider-specific
                  template that holds the details for provisioning infrastructure
                  specific cluster for the underlying provider. The underlying provider
                  is responsible for the implementation of the template to an infrastructure
                  cluster.
                properties:
                  ref:
                    description: Ref is a required reference to a custom resource
                      offered by a provider.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      kind:
                        description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                    type: object
                required:
                - ref
                type: object
              workers:
                description: Workers describes the worker nodes for the cluster. It
                  is a collection of node types which can be used to create the worker
                  nodes of the cluster.
                properties:
                  machineDeployments:
                    description: MachineDeployments is a list of machine deployment
                      classes that can be used to create a set of worker nodes.
                    items:
                      description: MachineDeploymentClass serves as a template to
                        define a set of worker nodes of the cluster provisioned using
                        the `ClusterClass`.
                      properties:
                        class:
                          description: Class denotes a type of worker node present
                            in the cluster, this name MUST be unique within a ClusterClass
                            and can be referenced in the Cluster to create a managed
                            MachineDeployment.
                          type: string
                        template:
                          description: Template is a local struct containing a collection
                            of templates for creation of MachineDeployment objects
                            representing a set of worker nodes.
                          properties:
                            bootstrap:
                              description: Bootstrap contains the bootstrap template
                                reference to be used for the creation of worker Machines.
                              properties:
                                ref:
                                  description: Ref is a required reference to a custom
                                    resource offered by a provider.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info:
                                        https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                  type: object
                              required:
                              - ref
                              type: object
                            infrastructure:
                              description: Infrastructure contains the infrastructure
                                template reference to be used for the creation of
                                worker Machines.
                              properties:
                                ref:
                                  description: Ref is a required reference to a custom
                                    resource offered by a provider.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    kind:
                                      description: 'Kind of the referent. More info:
                                        https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info:
                                        https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                      type: string
                                  type: object
                              required:
                              - ref
                              type: object
                            metadata:
                              description: "ObjectMeta is metadata that all persisted
                                resources must have, which includes all objects users
                                must create. This is a copy of customizable fields
                                from metav1.ObjectMeta. \n ObjectMeta is embedded
                                in `Machine.Spec`, `MachineDeployment.Template` and
                                `MachineSet.Template`, which are not top-level Kubernetes
                                objects. Given that metav1.ObjectMeta has lots of
                                special cases and read-only fields which end up in
                                the generated CRD validation, having it as a subset
                                simplifies the API and some issues that can impact
                                user experience. \n During the [upgrade to controller-tools@v2](https://github.com/kubernetes-sigs/cluster-api/pull/1054)
                                for v1alpha2, we noticed a failure would occur running
                                Cluster API test suite against the new CRDs, specifically
                                `spec.metadata.creationTimestamp in body must be of
                                type string: \"null\"`. The investigation showed that
                                `controller-tools@v2` behaves differently than its
                                previous version when handling types from [metav1](k8s.io/apimachinery/pkg/apis/meta/v1)
                                package. \n In more details, we found that embedded
                                (non-top level) types that embedded `metav1.ObjectMeta`
                                had validation properties, including for `creationTimestamp`
                                (metav1.Time). The `metav1.Time` type specifies a
                                custom json marshaller that, when IsZero() is true,
                                returns `null` which breaks validation because the
                                field isn't marked as nullable. \n In future versions,
                                controller-tools@v2 might allow overriding the type
                                and validation for embedded types. When that happens,
                                this hack should be revisited."
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: 'Annotations is an unstructured key
                                    value map stored with a resource that may be set
                                    by external tools to store and retrieve arbitrary
                                    metadata. They are not queryable and should be
                                    preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: 'Map of string keys and values that
                                    can be used to organize and categorize (scope
                                    and select) objects. May match selectors of replication
                                    controllers and services. More info: http://kubernetes.io/docs/user-guide/labels'
                                  type: object
                              type: object
                          required:
                          - bootstrap
                          - infrastructure
                          type: object
                      required:
                      - class
                      - template
                      type: object
                    type: array
                type: object
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
