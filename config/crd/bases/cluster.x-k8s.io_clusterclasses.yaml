---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.2
  name: clusterclasses.cluster.x-k8s.io
spec:
  group: cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: ClusterClass
    listKind: ClusterClassList
    plural: clusterclasses
    shortNames:
    - cc
    singular: clusterclass
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Time duration since creation of ClusterClass
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    deprecated: true
    name: v1alpha4
    schema:
      openAPIV3Schema:
        description: |-
          ClusterClass is a template which can be used to create managed topologies.

          Deprecated: This type will be removed in one of the next releases.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec is the desired state of ClusterClass.
            properties:
              controlPlane:
                description: |-
                  controlPlane is a reference to a local struct that holds the details
                  for provisioning the Control Plane for the Cluster.
                properties:
                  machineInfrastructure:
                    description: |-
                      machineInfrastructure defines the metadata and infrastructure information
                      for control plane machines.

                      This field is supported if and only if the control plane provider template
                      referenced above is Machine based and supports setting replicas.
                    properties:
                      ref:
                        description: |-
                          ref is a required reference to a custom resource
                          offered by a provider.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: |-
                              If referring to a piece of an object instead of an entire object, this string
                              should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container within a pod, this would take on a value like:
                              "spec.containers{name}" (where "name" refers to the name of the container that triggered
                              the event) or if no container name is specified "spec.containers[2]" (container with
                              index 2 in this pod). This syntax is chosen only to have some well-defined way of
                              referencing a part of an object.
                            type: string
                          kind:
                            description: |-
                              Kind of the referent.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            type: string
                          resourceVersion:
                            description: |-
                              Specific resourceVersion to which this reference is made, if any.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            type: string
                          uid:
                            description: |-
                              UID of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - ref
                    type: object
                  metadata:
                    description: |-
                      metadata is the metadata applied to the machines of the ControlPlane.
                      At runtime this metadata is merged with the corresponding metadata from the topology.

                      This field is supported if and only if the control plane provider template
                      referenced is Machine based.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          labels is a map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  ref:
                    description: |-
                      ref is a required reference to a custom resource
                      offered by a provider.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - ref
                type: object
              infrastructure:
                description: |-
                  infrastructure is a reference to a provider-specific template that holds
                  the details for provisioning infrastructure specific cluster
                  for the underlying provider.
                  The underlying provider is responsible for the implementation
                  of the template to an infrastructure cluster.
                properties:
                  ref:
                    description: |-
                      ref is a required reference to a custom resource
                      offered by a provider.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - ref
                type: object
              workers:
                description: |-
                  workers describes the worker nodes for the cluster.
                  It is a collection of node types which can be used to create
                  the worker nodes of the cluster.
                properties:
                  machineDeployments:
                    description: |-
                      machineDeployments is a list of machine deployment classes that can be used to create
                      a set of worker nodes.
                    items:
                      description: |-
                        MachineDeploymentClass serves as a template to define a set of worker nodes of the cluster
                        provisioned using the `ClusterClass`.
                      properties:
                        class:
                          description: |-
                            class denotes a type of worker node present in the cluster,
                            this name MUST be unique within a ClusterClass and can be referenced
                            in the Cluster to create a managed MachineDeployment.
                          type: string
                        template:
                          description: |-
                            template is a local struct containing a collection of templates for creation of
                            MachineDeployment objects representing a set of worker nodes.
                          properties:
                            bootstrap:
                              description: |-
                                bootstrap contains the bootstrap template reference to be used
                                for the creation of worker Machines.
                              properties:
                                ref:
                                  description: |-
                                    ref is a required reference to a custom resource
                                    offered by a provider.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: |-
                                        If referring to a piece of an object instead of an entire object, this string
                                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a container within a pod, this would take on a value like:
                                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                        the event) or if no container name is specified "spec.containers[2]" (container with
                                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                        referencing a part of an object.
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the referent.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                      type: string
                                    resourceVersion:
                                      description: |-
                                        Specific resourceVersion to which this reference is made, if any.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                      type: string
                                    uid:
                                      description: |-
                                        UID of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - ref
                              type: object
                            infrastructure:
                              description: |-
                                infrastructure contains the infrastructure template reference to be used
                                for the creation of worker Machines.
                              properties:
                                ref:
                                  description: |-
                                    ref is a required reference to a custom resource
                                    offered by a provider.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: |-
                                        If referring to a piece of an object instead of an entire object, this string
                                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a container within a pod, this would take on a value like:
                                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                        the event) or if no container name is specified "spec.containers[2]" (container with
                                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                        referencing a part of an object.
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the referent.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                      type: string
                                    resourceVersion:
                                      description: |-
                                        Specific resourceVersion to which this reference is made, if any.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                      type: string
                                    uid:
                                      description: |-
                                        UID of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - ref
                              type: object
                            metadata:
                              description: |-
                                metadata is the metadata applied to the machines of the MachineDeployment.
                                At runtime this metadata is merged with the corresponding metadata from the topology.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    annotations is an unstructured key value map stored with a resource that may be
                                    set by external tools to store and retrieve arbitrary metadata. They are not
                                    queryable and should be preserved when modifying objects.
                                    More info: http://kubernetes.io/docs/user-guide/annotations
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    labels is a map of string keys and values that can be used to organize and categorize
                                    (scope and select) objects. May match selectors of replication controllers
                                    and services.
                                    More info: http://kubernetes.io/docs/user-guide/labels
                                  type: object
                              type: object
                          required:
                          - bootstrap
                          - infrastructure
                          type: object
                      required:
                      - class
                      - template
                      type: object
                    type: array
                type: object
            type: object
        type: object
    served: false
    storage: false
    subresources: {}
  - additionalPrinterColumns:
    - description: Time duration since creation of ClusterClass
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ClusterClass is a template which can be used to create managed
          topologies.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec is the desired state of ClusterClass.
            properties:
              availabilityGates:
                description: |-
                  availabilityGates specifies additional conditions to include when evaluating Cluster Available condition.

                  NOTE: this field is considered only for computing v1beta2 conditions.
                  NOTE: If a Cluster is using this ClusterClass, and this Cluster defines a custom list of availabilityGates,
                  such list overrides availabilityGates defined in this field.
                items:
                  description: ClusterAvailabilityGate contains the type of a Cluster
                    condition to be used as availability gate.
                  properties:
                    conditionType:
                      description: |-
                        conditionType refers to a condition with matching type in the Cluster's condition list.
                        If the conditions doesn't exist, it will be treated as unknown.
                        Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as availability gates.
                      maxLength: 316
                      minLength: 1
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                    polarity:
                      description: |-
                        polarity of the conditionType specified in this availabilityGate.
                        Valid values are Positive, Negative and omitted.
                        When omitted, the default behaviour will be Positive.
                        A positive polarity means that the condition should report a true status under normal conditions.
                        A negative polarity means that the condition should report a false status under normal conditions.
                      enum:
                      - Positive
                      - Negative
                      type: string
                  required:
                  - conditionType
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-list-map-keys:
                - conditionType
                x-kubernetes-list-type: map
              controlPlane:
                description: |-
                  controlPlane is a reference to a local struct that holds the details
                  for provisioning the Control Plane for the Cluster.
                properties:
                  machineHealthCheck:
                    description: |-
                      machineHealthCheck defines a MachineHealthCheck for this ControlPlaneClass.
                      This field is supported if and only if the ControlPlane provider template
                      referenced above is Machine based and supports setting replicas.
                    properties:
                      maxUnhealthy:
                        anyOf:
                        - type: integer
                        - type: string
                        description: |-
                          maxUnhealthy specifies the maximum number of unhealthy machines allowed.
                          Any further remediation is only allowed if at most "maxUnhealthy" machines selected by
                          "selector" are not healthy.
                        x-kubernetes-int-or-string: true
                      nodeStartupTimeout:
                        description: |-
                          nodeStartupTimeout allows to set the maximum time for MachineHealthCheck
                          to consider a Machine unhealthy if a corresponding Node isn't associated
                          through a `Spec.ProviderID` field.

                          The duration set in this field is compared to the greatest of:
                          - Cluster's infrastructure ready condition timestamp (if and when available)
                          - Control Plane's initialized condition timestamp (if and when available)
                          - Machine's infrastructure ready condition timestamp (if and when available)
                          - Machine's metadata creation timestamp

                          Defaults to 10 minutes.
                          If you wish to disable this feature, set the value explicitly to 0.
                        type: string
                      remediationTemplate:
                        description: |-
                          remediationTemplate is a reference to a remediation template
                          provided by an infrastructure provider.

                          This field is completely optional, when filled, the MachineHealthCheck controller
                          creates a new object from the template referenced and hands off remediation of the machine to
                          a controller that lives outside of Cluster API.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: |-
                              If referring to a piece of an object instead of an entire object, this string
                              should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container within a pod, this would take on a value like:
                              "spec.containers{name}" (where "name" refers to the name of the container that triggered
                              the event) or if no container name is specified "spec.containers[2]" (container with
                              index 2 in this pod). This syntax is chosen only to have some well-defined way of
                              referencing a part of an object.
                            type: string
                          kind:
                            description: |-
                              Kind of the referent.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            type: string
                          resourceVersion:
                            description: |-
                              Specific resourceVersion to which this reference is made, if any.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            type: string
                          uid:
                            description: |-
                              UID of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                      unhealthyConditions:
                        description: |-
                          unhealthyConditions contains a list of the conditions that determine
                          whether a node is considered unhealthy. The conditions are combined in a
                          logical OR, i.e. if any of the conditions is met, the node is unhealthy.
                        items:
                          description: |-
                            UnhealthyCondition represents a Node condition type and value with a timeout
                            specified as a duration.  When the named condition has been in the given
                            status for at least the timeout value, a node is considered unhealthy.
                          properties:
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              minLength: 1
                              type: string
                            timeout:
                              description: |-
                                timeout is the duration that a node must be in a given status for,
                                after which the node is considered unhealthy.
                                For example, with a value of "1h", the node must match the status
                                for at least 1 hour before being considered unhealthy.
                              type: string
                            type:
                              description: type of Node condition
                              minLength: 1
                              type: string
                          required:
                          - status
                          - timeout
                          - type
                          type: object
                        maxItems: 100
                        type: array
                      unhealthyRange:
                        description: |-
                          unhealthyRange specifies the range of unhealthy machines allowed.
                          Any further remediation is only allowed if the number of machines selected by "selector" as not healthy
                          is within the range of "unhealthyRange". Takes precedence over maxUnhealthy.
                          Eg. "[3-5]" - This means that remediation will be allowed only when:
                          (a) there are at least 3 unhealthy machines (and)
                          (b) there are at most 5 unhealthy machines
                        maxLength: 32
                        minLength: 1
                        pattern: ^\[[0-9]+-[0-9]+\]$
                        type: string
                    type: object
                  machineInfrastructure:
                    description: |-
                      machineInfrastructure defines the metadata and infrastructure information
                      for control plane machines.

                      This field is supported if and only if the control plane provider template
                      referenced above is Machine based and supports setting replicas.
                    properties:
                      ref:
                        description: |-
                          ref is a required reference to a custom resource
                          offered by a provider.
                        properties:
                          apiVersion:
                            description: API version of the referent.
                            type: string
                          fieldPath:
                            description: |-
                              If referring to a piece of an object instead of an entire object, this string
                              should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                              For example, if the object reference is to a container within a pod, this would take on a value like:
                              "spec.containers{name}" (where "name" refers to the name of the container that triggered
                              the event) or if no container name is specified "spec.containers[2]" (container with
                              index 2 in this pod). This syntax is chosen only to have some well-defined way of
                              referencing a part of an object.
                            type: string
                          kind:
                            description: |-
                              Kind of the referent.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                            type: string
                          name:
                            description: |-
                              Name of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            type: string
                          namespace:
                            description: |-
                              Namespace of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                            type: string
                          resourceVersion:
                            description: |-
                              Specific resourceVersion to which this reference is made, if any.
                              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                            type: string
                          uid:
                            description: |-
                              UID of the referent.
                              More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                            type: string
                        type: object
                        x-kubernetes-map-type: atomic
                    required:
                    - ref
                    type: object
                  metadata:
                    description: |-
                      metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane
                      if the ControlPlaneTemplate referenced is machine based. If not, it is applied only to the
                      ControlPlane.
                      At runtime this metadata is merged with the corresponding metadata from the topology.

                      This field is supported if and only if the control plane provider template
                      referenced is Machine based.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          annotations is an unstructured key value map stored with a resource that may be
                          set by external tools to store and retrieve arbitrary metadata. They are not
                          queryable and should be preserved when modifying objects.
                          More info: http://kubernetes.io/docs/user-guide/annotations
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          labels is a map of string keys and values that can be used to organize and categorize
                          (scope and select) objects. May match selectors of replication controllers
                          and services.
                          More info: http://kubernetes.io/docs/user-guide/labels
                        type: object
                    type: object
                  namingStrategy:
                    description: namingStrategy allows changing the naming pattern
                      used when creating the control plane provider object.
                    properties:
                      template:
                        description: |-
                          template defines the template to use for generating the name of the ControlPlane object.
                          If not defined, it will fallback to `{{ .cluster.name }}-{{ .random }}`.
                          If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will
                          get concatenated with a random suffix of length 5.
                          The templating mechanism provides the following arguments:
                          * `.cluster.name`: The name of the cluster object.
                          * `.random`: A random alphanumeric string, without vowels, of length 5.
                        maxLength: 1024
                        minLength: 1
                        type: string
                    type: object
                  nodeDeletionTimeout:
                    description: |-
                      nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                      hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                      Defaults to 10 seconds.
                      NOTE: This value can be overridden while defining a Cluster.Topology.
                    type: string
                  nodeDrainTimeout:
                    description: |-
                      nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                      The default value is 0, meaning that the node can be drained without any time limitations.
                      NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                      NOTE: This value can be overridden while defining a Cluster.Topology.
                    type: string
                  nodeVolumeDetachTimeout:
                    description: |-
                      nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                      to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                      NOTE: This value can be overridden while defining a Cluster.Topology.
                    type: string
                  readinessGates:
                    description: |-
                      readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                      This field can be used e.g. to instruct the machine controller to include in the computation for Machine's ready
                      computation a condition, managed by an external controllers, reporting the status of special software/hardware installed on the Machine.

                      NOTE: This field is considered only for computing v1beta2 conditions.
                      NOTE: If a Cluster defines a custom list of readinessGates for the control plane,
                      such list overrides readinessGates defined in this field.
                      NOTE: Specific control plane provider implementations might automatically extend the list of readinessGates;
                      e.g. the kubeadm control provider adds ReadinessGates for the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.
                    items:
                      description: MachineReadinessGate contains the type of a Machine
                        condition to be used as a readiness gate.
                      properties:
                        conditionType:
                          description: |-
                            conditionType refers to a condition with matching type in the Machine's condition list.
                            If the conditions doesn't exist, it will be treated as unknown.
                            Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                          maxLength: 316
                          minLength: 1
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                        polarity:
                          description: |-
                            polarity of the conditionType specified in this readinessGate.
                            Valid values are Positive, Negative and omitted.
                            When omitted, the default behaviour will be Positive.
                            A positive polarity means that the condition should report a true status under normal conditions.
                            A negative polarity means that the condition should report a false status under normal conditions.
                          enum:
                          - Positive
                          - Negative
                          type: string
                      required:
                      - conditionType
                      type: object
                    maxItems: 32
                    type: array
                    x-kubernetes-list-map-keys:
                    - conditionType
                    x-kubernetes-list-type: map
                  ref:
                    description: |-
                      ref is a required reference to a custom resource
                      offered by a provider.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - ref
                type: object
              infrastructure:
                description: |-
                  infrastructure is a reference to a provider-specific template that holds
                  the details for provisioning infrastructure specific cluster
                  for the underlying provider.
                  The underlying provider is responsible for the implementation
                  of the template to an infrastructure cluster.
                properties:
                  ref:
                    description: |-
                      ref is a required reference to a custom resource
                      offered by a provider.
                    properties:
                      apiVersion:
                        description: API version of the referent.
                        type: string
                      fieldPath:
                        description: |-
                          If referring to a piece of an object instead of an entire object, this string
                          should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                          For example, if the object reference is to a container within a pod, this would take on a value like:
                          "spec.containers{name}" (where "name" refers to the name of the container that triggered
                          the event) or if no container name is specified "spec.containers[2]" (container with
                          index 2 in this pod). This syntax is chosen only to have some well-defined way of
                          referencing a part of an object.
                        type: string
                      kind:
                        description: |-
                          Kind of the referent.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                        type: string
                      name:
                        description: |-
                          Name of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        type: string
                      namespace:
                        description: |-
                          Namespace of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                        type: string
                      resourceVersion:
                        description: |-
                          Specific resourceVersion to which this reference is made, if any.
                          More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      uid:
                        description: |-
                          UID of the referent.
                          More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                        type: string
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - ref
                type: object
              infrastructureNamingStrategy:
                description: infrastructureNamingStrategy allows changing the naming
                  pattern used when creating the infrastructure object.
                properties:
                  template:
                    description: |-
                      template defines the template to use for generating the name of the Infrastructure object.
                      If not defined, it will fallback to `{{ .cluster.name }}-{{ .random }}`.
                      If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will
                      get concatenated with a random suffix of length 5.
                      The templating mechanism provides the following arguments:
                      * `.cluster.name`: The name of the cluster object.
                      * `.random`: A random alphanumeric string, without vowels, of length 5.
                    maxLength: 1024
                    minLength: 1
                    type: string
                type: object
              patches:
                description: |-
                  patches defines the patches which are applied to customize
                  referenced templates of a ClusterClass.
                  Note: Patches will be applied in the order of the array.
                items:
                  description: ClusterClassPatch defines a patch which is applied
                    to customize the referenced templates.
                  properties:
                    definitions:
                      description: |-
                        definitions define inline patches.
                        Note: Patches will be applied in the order of the array.
                        Note: Exactly one of Definitions or External must be set.
                      items:
                        description: PatchDefinition defines a patch which is applied
                          to customize the referenced templates.
                        properties:
                          jsonPatches:
                            description: |-
                              jsonPatches defines the patches which should be applied on the templates
                              matching the selector.
                              Note: Patches will be applied in the order of the array.
                            items:
                              description: JSONPatch defines a JSON patch.
                              properties:
                                op:
                                  description: |-
                                    op defines the operation of the patch.
                                    Note: Only `add`, `replace` and `remove` are supported.
                                  enum:
                                  - add
                                  - replace
                                  - remove
                                  type: string
                                path:
                                  description: |-
                                    path defines the path of the patch.
                                    Note: Only the spec of a template can be patched, thus the path has to start with /spec/.
                                    Note: For now the only allowed array modifications are `append` and `prepend`, i.e.:
                                    * for op: `add`: only index 0 (prepend) and - (append) are allowed
                                    * for op: `replace` or `remove`: no indexes are allowed
                                  maxLength: 512
                                  minLength: 1
                                  type: string
                                value:
                                  description: |-
                                    value defines the value of the patch.
                                    Note: Either Value or ValueFrom is required for add and replace
                                    operations. Only one of them is allowed to be set at the same time.
                                    Note: We have to use apiextensionsv1.JSON instead of our JSON type,
                                    because controller-tools has a hard-coded schema for apiextensionsv1.JSON
                                    which cannot be produced by another type (unset type field).
                                    Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                                  x-kubernetes-preserve-unknown-fields: true
                                valueFrom:
                                  description: |-
                                    valueFrom defines the value of the patch.
                                    Note: Either Value or ValueFrom is required for add and replace
                                    operations. Only one of them is allowed to be set at the same time.
                                  properties:
                                    template:
                                      description: |-
                                        template is the Go template to be used to calculate the value.
                                        A template can reference variables defined in .spec.variables and builtin variables.
                                        Note: The template must evaluate to a valid YAML or JSON value.
                                      maxLength: 10240
                                      minLength: 1
                                      type: string
                                    variable:
                                      description: |-
                                        variable is the variable to be used as value.
                                        Variable can be one of the variables defined in .spec.variables or a builtin variable.
                                      maxLength: 256
                                      minLength: 1
                                      type: string
                                  type: object
                              required:
                              - op
                              - path
                              type: object
                            maxItems: 100
                            type: array
                          selector:
                            description: selector defines on which templates the patch
                              should be applied.
                            properties:
                              apiVersion:
                                description: apiVersion filters templates by apiVersion.
                                maxLength: 512
                                minLength: 1
                                type: string
                              kind:
                                description: kind filters templates by kind.
                                maxLength: 256
                                minLength: 1
                                type: string
                              matchResources:
                                description: matchResources selects templates based
                                  on where they are referenced.
                                properties:
                                  controlPlane:
                                    description: |-
                                      controlPlane selects templates referenced in .spec.ControlPlane.
                                      Note: this will match the controlPlane and also the controlPlane
                                      machineInfrastructure (depending on the kind and apiVersion).
                                    type: boolean
                                  infrastructureCluster:
                                    description: infrastructureCluster selects templates
                                      referenced in .spec.infrastructure.
                                    type: boolean
                                  machineDeploymentClass:
                                    description: |-
                                      machineDeploymentClass selects templates referenced in specific MachineDeploymentClasses in
                                      .spec.workers.machineDeployments.
                                    properties:
                                      names:
                                        description: names selects templates by class
                                          names.
                                        items:
                                          maxLength: 256
                                          minLength: 1
                                          type: string
                                        maxItems: 100
                                        type: array
                                    type: object
                                  machinePoolClass:
                                    description: |-
                                      machinePoolClass selects templates referenced in specific MachinePoolClasses in
                                      .spec.workers.machinePools.
                                    properties:
                                      names:
                                        description: names selects templates by class
                                          names.
                                        items:
                                          maxLength: 256
                                          minLength: 1
                                          type: string
                                        maxItems: 100
                                        type: array
                                    type: object
                                type: object
                            required:
                            - apiVersion
                            - kind
                            - matchResources
                            type: object
                        required:
                        - jsonPatches
                        - selector
                        type: object
                      maxItems: 100
                      type: array
                    description:
                      description: description is a human-readable description of
                        this patch.
                      maxLength: 1024
                      minLength: 1
                      type: string
                    enabledIf:
                      description: |-
                        enabledIf is a Go template to be used to calculate if a patch should be enabled.
                        It can reference variables defined in .spec.variables and builtin variables.
                        The patch will be enabled if the template evaluates to `true`, otherwise it will
                        be disabled.
                        If EnabledIf is not set, the patch will be enabled per default.
                      maxLength: 256
                      minLength: 1
                      type: string
                    external:
                      description: |-
                        external defines an external patch.
                        Note: Exactly one of Definitions or External must be set.
                      properties:
                        discoverVariablesExtension:
                          description: discoverVariablesExtension references an extension
                            which is called to discover variables.
                          maxLength: 512
                          minLength: 1
                          type: string
                        generateExtension:
                          description: generateExtension references an extension which
                            is called to generate patches.
                          maxLength: 512
                          minLength: 1
                          type: string
                        settings:
                          additionalProperties:
                            type: string
                          description: |-
                            settings defines key value pairs to be passed to the extensions.
                            Values defined here take precedence over the values defined in the
                            corresponding ExtensionConfig.
                          type: object
                        validateExtension:
                          description: validateExtension references an extension which
                            is called to validate the topology.
                          maxLength: 512
                          minLength: 1
                          type: string
                      type: object
                    name:
                      description: name of the patch.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 1000
                type: array
              variables:
                description: |-
                  variables defines the variables which can be configured
                  in the Cluster topology and are then used in patches.
                items:
                  description: |-
                    ClusterClassVariable defines a variable which can
                    be configured in the Cluster topology and used in patches.
                  properties:
                    metadata:
                      description: |-
                        metadata is the metadata of a variable.
                        It can be used to add additional data for higher level tools to
                        a ClusterClassVariable.

                        Deprecated: This field is deprecated and is going to be removed in the next apiVersion. Please use XMetadata in JSONSchemaProps instead.
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          description: |-
                            annotations is an unstructured key value map that can be used to store and
                            retrieve arbitrary metadata.
                            They are not queryable.
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          description: |-
                            labels is a map of string keys and values that can be used to organize and categorize
                            (scope and select) variables.
                          type: object
                      type: object
                    name:
                      description: name of the variable.
                      maxLength: 256
                      minLength: 1
                      type: string
                    required:
                      description: |-
                        required specifies if the variable is required.
                        Note: this applies to the variable as a whole and thus the
                        top-level object defined in the schema. If nested fields are
                        required, this will be specified inside the schema.
                      type: boolean
                    schema:
                      description: schema defines the schema of the variable.
                      properties:
                        openAPIV3Schema:
                          description: |-
                            openAPIV3Schema defines the schema of a variable via OpenAPI v3
                            schema. The schema is a subset of the schema used in
                            Kubernetes CRDs.
                          properties:
                            additionalProperties:
                              description: |-
                                additionalProperties specifies the schema of values in a map (keys are always strings).
                                NOTE: Can only be set if type is object.
                                NOTE: AdditionalProperties is mutually exclusive with Properties.
                                NOTE: This field uses PreserveUnknownFields and Schemaless,
                                because recursive validation is not possible.
                              x-kubernetes-preserve-unknown-fields: true
                            allOf:
                              description: |-
                                allOf specifies that the variable must validate against all of the subschemas in the array.
                                NOTE: This field uses PreserveUnknownFields and Schemaless,
                                because recursive validation is not possible.
                              x-kubernetes-preserve-unknown-fields: true
                            anyOf:
                              description: |-
                                anyOf specifies that the variable must validate against one or more of the subschemas in the array.
                                NOTE: This field uses PreserveUnknownFields and Schemaless,
                                because recursive validation is not possible.
                              x-kubernetes-preserve-unknown-fields: true
                            default:
                              description: |-
                                default is the default value of the variable.
                                NOTE: Can be set for all types.
                              x-kubernetes-preserve-unknown-fields: true
                            description:
                              description: description is a human-readable description
                                of this variable.
                              maxLength: 4096
                              minLength: 1
                              type: string
                            enum:
                              description: |-
                                enum is the list of valid values of the variable.
                                NOTE: Can be set for all types.
                              items:
                                x-kubernetes-preserve-unknown-fields: true
                              maxItems: 100
                              type: array
                            example:
                              description: example is an example for this variable.
                              x-kubernetes-preserve-unknown-fields: true
                            exclusiveMaximum:
                              description: |-
                                exclusiveMaximum specifies if the Maximum is exclusive.
                                NOTE: Can only be set if type is integer or number.
                              type: boolean
                            exclusiveMinimum:
                              description: |-
                                exclusiveMinimum specifies if the Minimum is exclusive.
                                NOTE: Can only be set if type is integer or number.
                              type: boolean
                            format:
                              description: |-
                                format is an OpenAPI v3 format string. Unknown formats are ignored.
                                For a list of supported formats please see: (of the k8s.io/apiextensions-apiserver version we're currently using)
                                https://github.com/kubernetes/apiextensions-apiserver/blob/master/pkg/apiserver/validation/formats.go
                                NOTE: Can only be set if type is string.
                              maxLength: 32
                              minLength: 1
                              type: string
                            items:
                              description: |-
                                items specifies fields of an array.
                                NOTE: Can only be set if type is array.
                                NOTE: This field uses PreserveUnknownFields and Schemaless,
                                because recursive validation is not possible.
                              x-kubernetes-preserve-unknown-fields: true
                            maxItems:
                              description: |-
                                maxItems is the max length of an array variable.
                                NOTE: Can only be set if type is array.
                              format: int64
                              type: integer
                            maxLength:
                              description: |-
                                maxLength is the max length of a string variable.
                                NOTE: Can only be set if type is string.
                              format: int64
                              type: integer
                            maxProperties:
                              description: |-
                                maxProperties is the maximum amount of entries in a map or properties in an object.
                                NOTE: Can only be set if type is object.
                              format: int64
                              type: integer
                            maximum:
                              description: |-
                                maximum is the maximum of an integer or number variable.
                                If ExclusiveMaximum is false, the variable is valid if it is lower than, or equal to, the value of Maximum.
                                If ExclusiveMaximum is true, the variable is valid if it is strictly lower than the value of Maximum.
                                NOTE: Can only be set if type is integer or number.
                              format: int64
                              type: integer
                            minItems:
                              description: |-
                                minItems is the min length of an array variable.
                                NOTE: Can only be set if type is array.
                              format: int64
                              type: integer
                            minLength:
                              description: |-
                                minLength is the min length of a string variable.
                                NOTE: Can only be set if type is string.
                              format: int64
                              type: integer
                            minProperties:
                              description: |-
                                minProperties is the minimum amount of entries in a map or properties in an object.
                                NOTE: Can only be set if type is object.
                              format: int64
                              type: integer
                            minimum:
                              description: |-
                                minimum is the minimum of an integer or number variable.
                                If ExclusiveMinimum is false, the variable is valid if it is greater than, or equal to, the value of Minimum.
                                If ExclusiveMinimum is true, the variable is valid if it is strictly greater than the value of Minimum.
                                NOTE: Can only be set if type is integer or number.
                              format: int64
                              type: integer
                            not:
                              description: |-
                                not specifies that the variable must not validate against the subschema.
                                NOTE: This field uses PreserveUnknownFields and Schemaless,
                                because recursive validation is not possible.
                              x-kubernetes-preserve-unknown-fields: true
                            oneOf:
                              description: |-
                                oneOf specifies that the variable must validate against exactly one of the subschemas in the array.
                                NOTE: This field uses PreserveUnknownFields and Schemaless,
                                because recursive validation is not possible.
                              x-kubernetes-preserve-unknown-fields: true
                            pattern:
                              description: |-
                                pattern is the regex which a string variable must match.
                                NOTE: Can only be set if type is string.
                              maxLength: 512
                              minLength: 1
                              type: string
                            properties:
                              description: |-
                                properties specifies fields of an object.
                                NOTE: Can only be set if type is object.
                                NOTE: Properties is mutually exclusive with AdditionalProperties.
                                NOTE: This field uses PreserveUnknownFields and Schemaless,
                                because recursive validation is not possible.
                              x-kubernetes-preserve-unknown-fields: true
                            required:
                              description: |-
                                required specifies which fields of an object are required.
                                NOTE: Can only be set if type is object.
                              items:
                                maxLength: 256
                                minLength: 1
                                type: string
                              maxItems: 1000
                              type: array
                            type:
                              description: |-
                                type is the type of the variable.
                                Valid values are: object, array, string, integer, number or boolean.
                              enum:
                              - object
                              - array
                              - string
                              - integer
                              - number
                              - boolean
                              type: string
                            uniqueItems:
                              description: |-
                                uniqueItems specifies if items in an array must be unique.
                                NOTE: Can only be set if type is array.
                              type: boolean
                            x-kubernetes-int-or-string:
                              description: |-
                                x-kubernetes-int-or-string specifies that this value is
                                either an integer or a string. If this is true, an empty
                                type is allowed and type as child of anyOf is permitted
                                if following one of the following patterns:

                                1) anyOf:
                                   - type: integer
                                   - type: string
                                2) allOf:
                                   - anyOf:
                                     - type: integer
                                     - type: string
                                   - ... zero or more
                              type: boolean
                            x-kubernetes-preserve-unknown-fields:
                              description: |-
                                x-kubernetes-preserve-unknown-fields allows setting fields in a variable object
                                which are not defined in the variable schema. This affects fields recursively,
                                except if nested properties or additionalProperties are specified in the schema.
                              type: boolean
                            x-kubernetes-validations:
                              description: x-kubernetes-validations describes a list
                                of validation rules written in the CEL expression
                                language.
                              items:
                                description: ValidationRule describes a validation
                                  rule written in the CEL expression language.
                                properties:
                                  fieldPath:
                                    description: |-
                                      fieldPath represents the field path returned when the validation fails.
                                      It must be a relative JSON path (i.e. with array notation) scoped to the location of this x-kubernetes-validations extension in the schema and refer to an existing field.
                                      e.g. when validation checks if a specific attribute `foo` under a map `testMap`, the fieldPath could be set to `.testMap.foo`
                                      If the validation checks two lists must have unique attributes, the fieldPath could be set to either of the list: e.g. `.testList`
                                      It does not support list numeric index.
                                      It supports child operation to refer to an existing field currently. Refer to [JSONPath support in Kubernetes](https://kubernetes.io/docs/reference/kubectl/jsonpath/) for more info.
                                      Numeric index of array is not supported.
                                      For field name which contains special characters, use `['specialName']` to refer the field name.
                                      e.g. for attribute `foo.34$` appears in a list `testList`, the fieldPath could be set to `.testList['foo.34$']`
                                    maxLength: 512
                                    minLength: 1
                                    type: string
                                  message:
                                    description: |-
                                      message represents the message displayed when validation fails. The message is required if the Rule contains
                                      line breaks. The message must not contain line breaks.
                                      If unset, the message is "failed rule: {Rule}".
                                      e.g. "must be a URL with the host matching spec.host"
                                    maxLength: 512
                                    minLength: 1
                                    type: string
                                  messageExpression:
                                    description: |-
                                      messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails.
                                      Since messageExpression is used as a failure message, it must evaluate to a string.
                                      If both message and messageExpression are present on a rule, then messageExpression will be used if validation
                                      fails. If messageExpression results in a runtime error, the validation failure message is produced
                                      as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string
                                      that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset.
                                      messageExpression has access to all the same variables as the rule; the only difference is the return type.
                                      Example:
                                      "x must be less than max ("+string(self.max)+")"
                                    maxLength: 1024
                                    minLength: 1
                                    type: string
                                  reason:
                                    default: FieldValueInvalid
                                    description: |-
                                      reason provides a machine-readable validation failure reason that is returned to the caller when a request fails this validation rule.
                                      The currently supported reasons are: "FieldValueInvalid", "FieldValueForbidden", "FieldValueRequired", "FieldValueDuplicate".
                                      If not set, default to use "FieldValueInvalid".
                                      All future added reasons must be accepted by clients when reading this value and unknown reasons should be treated as FieldValueInvalid.
                                    enum:
                                    - FieldValueInvalid
                                    - FieldValueForbidden
                                    - FieldValueRequired
                                    - FieldValueDuplicate
                                    type: string
                                  rule:
                                    description: "rule represents the expression which
                                      will be evaluated by CEL.\nref: https://github.com/google/cel-spec\nThe
                                      Rule is scoped to the location of the x-kubernetes-validations
                                      extension in the schema.\nThe `self` variable
                                      in the CEL expression is bound to the scoped
                                      value.\nIf the Rule is scoped to an object with
                                      properties, the accessible properties of the
                                      object are field selectable\nvia `self.field`
                                      and field presence can be checked via `has(self.field)`.\nIf
                                      the Rule is scoped to an object with additionalProperties
                                      (i.e. a map) the value of the map\nare accessible
                                      via `self[mapKey]`, map containment can be checked
                                      via `mapKey in self` and all entries of the
                                      map\nare accessible via CEL macros and functions
                                      such as `self.all(...)`.\nIf the Rule is scoped
                                      to an array, the elements of the array are accessible
                                      via `self[i]` and also by macros and\nfunctions.\nIf
                                      the Rule is scoped to a scalar, `self` is bound
                                      to the scalar value.\nExamples:\n- Rule scoped
                                      to a map of objects: {\"rule\": \"self.components['Widget'].priority
                                      < 10\"}\n- Rule scoped to a list of integers:
                                      {\"rule\": \"self.values.all(value, value >=
                                      0 && value < 100)\"}\n- Rule scoped to a string
                                      value: {\"rule\": \"self.startsWith('kube')\"}\n\nUnknown
                                      data preserved in custom resources via x-kubernetes-preserve-unknown-fields
                                      is not accessible in CEL\nexpressions. This
                                      includes:\n- Unknown field values that are preserved
                                      by object schemas with x-kubernetes-preserve-unknown-fields.\n-
                                      Object properties where the property schema
                                      is of an \"unknown type\". An \"unknown type\"
                                      is recursively defined as:\n  - A schema with
                                      no type and x-kubernetes-preserve-unknown-fields
                                      set to true\n  - An array where the items schema
                                      is of an \"unknown type\"\n  - An object where
                                      the additionalProperties schema is of an \"unknown
                                      type\"\n\nOnly property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*`
                                      are accessible.\nAccessible property names are
                                      escaped according to the following rules when
                                      accessed in the expression:\n- '__' escapes
                                      to '__underscores__'\n- '.' escapes to '__dot__'\n-
                                      '-' escapes to '__dash__'\n- '/' escapes to
                                      '__slash__'\n- Property names that exactly match
                                      a CEL RESERVED keyword escape to '__{keyword}__'.
                                      The keywords are:\n\t  \"true\", \"false\",
                                      \"null\", \"in\", \"as\", \"break\", \"const\",
                                      \"continue\", \"else\", \"for\", \"function\",
                                      \"if\",\n\t  \"import\", \"let\", \"loop\",
                                      \"package\", \"namespace\", \"return\".\nExamples:\n
                                      \ - Rule accessing a property named \"namespace\":
                                      {\"rule\": \"self.__namespace__ > 0\"}\n  -
                                      Rule accessing a property named \"x-prop\":
                                      {\"rule\": \"self.x__dash__prop > 0\"}\n  -
                                      Rule accessing a property named \"redact__d\":
                                      {\"rule\": \"self.redact__underscores__d > 0\"}\n\nIf
                                      `rule` makes use of the `oldSelf` variable it
                                      is implicitly a\n`transition rule`.\n\nBy default,
                                      the `oldSelf` variable is the same type as `self`.\n\nTransition
                                      rules by default are applied only on UPDATE
                                      requests and are\nskipped if an old value could
                                      not be found."
                                    maxLength: 4096
                                    minLength: 1
                                    type: string
                                required:
                                - rule
                                type: object
                              maxItems: 100
                              type: array
                              x-kubernetes-list-map-keys:
                              - rule
                              x-kubernetes-list-type: map
                            x-metadata:
                              description: |-
                                x-metadata is the metadata of a variable or a nested field within a variable.
                                It can be used to add additional data for higher level tools.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    annotations is an unstructured key value map that can be used to store and
                                    retrieve arbitrary metadata.
                                    They are not queryable.
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    labels is a map of string keys and values that can be used to organize and categorize
                                    (scope and select) variables.
                                  type: object
                              type: object
                          type: object
                      required:
                      - openAPIV3Schema
                      type: object
                  required:
                  - name
                  - required
                  - schema
                  type: object
                maxItems: 1000
                type: array
              workers:
                description: |-
                  workers describes the worker nodes for the cluster.
                  It is a collection of node types which can be used to create
                  the worker nodes of the cluster.
                properties:
                  machineDeployments:
                    description: |-
                      machineDeployments is a list of machine deployment classes that can be used to create
                      a set of worker nodes.
                    items:
                      description: |-
                        MachineDeploymentClass serves as a template to define a set of worker nodes of the cluster
                        provisioned using the `ClusterClass`.
                      properties:
                        class:
                          description: |-
                            class denotes a type of worker node present in the cluster,
                            this name MUST be unique within a ClusterClass and can be referenced
                            in the Cluster to create a managed MachineDeployment.
                          maxLength: 256
                          minLength: 1
                          type: string
                        failureDomain:
                          description: |-
                            failureDomain is the failure domain the machines will be created in.
                            Must match a key in the FailureDomains map stored on the cluster object.
                            NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
                          maxLength: 256
                          minLength: 1
                          type: string
                        machineHealthCheck:
                          description: machineHealthCheck defines a MachineHealthCheck
                            for this MachineDeploymentClass.
                          properties:
                            maxUnhealthy:
                              anyOf:
                              - type: integer
                              - type: string
                              description: |-
                                maxUnhealthy specifies the maximum number of unhealthy machines allowed.
                                Any further remediation is only allowed if at most "maxUnhealthy" machines selected by
                                "selector" are not healthy.
                              x-kubernetes-int-or-string: true
                            nodeStartupTimeout:
                              description: |-
                                nodeStartupTimeout allows to set the maximum time for MachineHealthCheck
                                to consider a Machine unhealthy if a corresponding Node isn't associated
                                through a `Spec.ProviderID` field.

                                The duration set in this field is compared to the greatest of:
                                - Cluster's infrastructure ready condition timestamp (if and when available)
                                - Control Plane's initialized condition timestamp (if and when available)
                                - Machine's infrastructure ready condition timestamp (if and when available)
                                - Machine's metadata creation timestamp

                                Defaults to 10 minutes.
                                If you wish to disable this feature, set the value explicitly to 0.
                              type: string
                            remediationTemplate:
                              description: |-
                                remediationTemplate is a reference to a remediation template
                                provided by an infrastructure provider.

                                This field is completely optional, when filled, the MachineHealthCheck controller
                                creates a new object from the template referenced and hands off remediation of the machine to
                                a controller that lives outside of Cluster API.
                              properties:
                                apiVersion:
                                  description: API version of the referent.
                                  type: string
                                fieldPath:
                                  description: |-
                                    If referring to a piece of an object instead of an entire object, this string
                                    should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                    For example, if the object reference is to a container within a pod, this would take on a value like:
                                    "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                    the event) or if no container name is specified "spec.containers[2]" (container with
                                    index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                    referencing a part of an object.
                                  type: string
                                kind:
                                  description: |-
                                    Kind of the referent.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                  type: string
                                name:
                                  description: |-
                                    Name of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                  type: string
                                namespace:
                                  description: |-
                                    Namespace of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                  type: string
                                resourceVersion:
                                  description: |-
                                    Specific resourceVersion to which this reference is made, if any.
                                    More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                  type: string
                                uid:
                                  description: |-
                                    UID of the referent.
                                    More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                  type: string
                              type: object
                              x-kubernetes-map-type: atomic
                            unhealthyConditions:
                              description: |-
                                unhealthyConditions contains a list of the conditions that determine
                                whether a node is considered unhealthy. The conditions are combined in a
                                logical OR, i.e. if any of the conditions is met, the node is unhealthy.
                              items:
                                description: |-
                                  UnhealthyCondition represents a Node condition type and value with a timeout
                                  specified as a duration.  When the named condition has been in the given
                                  status for at least the timeout value, a node is considered unhealthy.
                                properties:
                                  status:
                                    description: status of the condition, one of True,
                                      False, Unknown.
                                    minLength: 1
                                    type: string
                                  timeout:
                                    description: |-
                                      timeout is the duration that a node must be in a given status for,
                                      after which the node is considered unhealthy.
                                      For example, with a value of "1h", the node must match the status
                                      for at least 1 hour before being considered unhealthy.
                                    type: string
                                  type:
                                    description: type of Node condition
                                    minLength: 1
                                    type: string
                                required:
                                - status
                                - timeout
                                - type
                                type: object
                              maxItems: 100
                              type: array
                            unhealthyRange:
                              description: |-
                                unhealthyRange specifies the range of unhealthy machines allowed.
                                Any further remediation is only allowed if the number of machines selected by "selector" as not healthy
                                is within the range of "unhealthyRange". Takes precedence over maxUnhealthy.
                                Eg. "[3-5]" - This means that remediation will be allowed only when:
                                (a) there are at least 3 unhealthy machines (and)
                                (b) there are at most 5 unhealthy machines
                              maxLength: 32
                              minLength: 1
                              pattern: ^\[[0-9]+-[0-9]+\]$
                              type: string
                          type: object
                        minReadySeconds:
                          description: |-
                            minReadySeconds is the minimum number of seconds for which a newly created machine should
                            be ready.
                            Defaults to 0 (machine will be considered available as soon as it
                            is ready)
                            NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
                          format: int32
                          type: integer
                        namingStrategy:
                          description: namingStrategy allows changing the naming pattern
                            used when creating the MachineDeployment.
                          properties:
                            template:
                              description: |-
                                template defines the template to use for generating the name of the MachineDeployment object.
                                If not defined, it will fallback to `{{ .cluster.name }}-{{ .machineDeployment.topologyName }}-{{ .random }}`.
                                If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will
                                get concatenated with a random suffix of length 5.
                                The templating mechanism provides the following arguments:
                                * `.cluster.name`: The name of the cluster object.
                                * `.random`: A random alphanumeric string, without vowels, of length 5.
                                * `.machineDeployment.topologyName`: The name of the MachineDeployment topology (Cluster.spec.topology.workers.machineDeployments[].name).
                              maxLength: 1024
                              minLength: 1
                              type: string
                          type: object
                        nodeDeletionTimeout:
                          description: |-
                            nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                            hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                            Defaults to 10 seconds.
                            NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
                          type: string
                        nodeDrainTimeout:
                          description: |-
                            nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                            The default value is 0, meaning that the node can be drained without any time limitations.
                            NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                            NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
                          type: string
                        nodeVolumeDetachTimeout:
                          description: |-
                            nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                            to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                            NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
                          type: string
                        readinessGates:
                          description: |-
                            readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                            This field can be used e.g. to instruct the machine controller to include in the computation for Machine's ready
                            computation a condition, managed by an external controllers, reporting the status of special software/hardware installed on the Machine.

                            NOTE: This field is considered only for computing v1beta2 conditions.
                            NOTE: If a Cluster defines a custom list of readinessGates for a MachineDeployment using this MachineDeploymentClass,
                            such list overrides readinessGates defined in this field.
                          items:
                            description: MachineReadinessGate contains the type of
                              a Machine condition to be used as a readiness gate.
                            properties:
                              conditionType:
                                description: |-
                                  conditionType refers to a condition with matching type in the Machine's condition list.
                                  If the conditions doesn't exist, it will be treated as unknown.
                                  Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                                maxLength: 316
                                minLength: 1
                                pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                type: string
                              polarity:
                                description: |-
                                  polarity of the conditionType specified in this readinessGate.
                                  Valid values are Positive, Negative and omitted.
                                  When omitted, the default behaviour will be Positive.
                                  A positive polarity means that the condition should report a true status under normal conditions.
                                  A negative polarity means that the condition should report a false status under normal conditions.
                                enum:
                                - Positive
                                - Negative
                                type: string
                            required:
                            - conditionType
                            type: object
                          maxItems: 32
                          type: array
                          x-kubernetes-list-map-keys:
                          - conditionType
                          x-kubernetes-list-type: map
                        strategy:
                          description: |-
                            strategy is the deployment strategy to use to replace existing machines with
                            new ones.
                            NOTE: This value can be overridden while defining a Cluster.Topology using this MachineDeploymentClass.
                          properties:
                            remediation:
                              description: |-
                                remediation controls the strategy of remediating unhealthy machines
                                and how remediating operations should occur during the lifecycle of the dependant MachineSets.
                              properties:
                                maxInFlight:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    maxInFlight determines how many in flight remediations should happen at the same time.

                                    Remediation only happens on the MachineSet with the most current revision, while
                                    older MachineSets (usually present during rollout operations) aren't allowed to remediate.

                                    Note: In general (independent of remediations), unhealthy machines are always
                                    prioritized during scale down operations over healthy ones.

                                    MaxInFlight can be set to a fixed number or a percentage.
                                    Example: when this is set to 20%, the MachineSet controller deletes at most 20% of
                                    the desired replicas.

                                    If not set, remediation is limited to all machines (bounded by replicas)
                                    under the active MachineSet's management.
                                  x-kubernetes-int-or-string: true
                              type: object
                            rollingUpdate:
                              description: |-
                                rollingUpdate is the rolling update config params. Present only if
                                MachineDeploymentStrategyType = RollingUpdate.
                              properties:
                                deletePolicy:
                                  description: |-
                                    deletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling.
                                    Valid values are "Random, "Newest", "Oldest"
                                    When no value is supplied, the default DeletePolicy of MachineSet is used
                                  enum:
                                  - Random
                                  - Newest
                                  - Oldest
                                  type: string
                                maxSurge:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    maxSurge is the maximum number of machines that can be scheduled above the
                                    desired number of machines.
                                    Value can be an absolute number (ex: 5) or a percentage of
                                    desired machines (ex: 10%).
                                    This can not be 0 if MaxUnavailable is 0.
                                    Absolute number is calculated from percentage by rounding up.
                                    Defaults to 1.
                                    Example: when this is set to 30%, the new MachineSet can be scaled
                                    up immediately when the rolling update starts, such that the total
                                    number of old and new machines do not exceed 130% of desired
                                    machines. Once old machines have been killed, new MachineSet can
                                    be scaled up further, ensuring that total number of machines running
                                    at any time during the update is at most 130% of desired machines.
                                  x-kubernetes-int-or-string: true
                                maxUnavailable:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    maxUnavailable is the maximum number of machines that can be unavailable during the update.
                                    Value can be an absolute number (ex: 5) or a percentage of desired
                                    machines (ex: 10%).
                                    Absolute number is calculated from percentage by rounding down.
                                    This can not be 0 if MaxSurge is 0.
                                    Defaults to 0.
                                    Example: when this is set to 30%, the old MachineSet can be scaled
                                    down to 70% of desired machines immediately when the rolling update
                                    starts. Once new machines are ready, old MachineSet can be scaled
                                    down further, followed by scaling up the new MachineSet, ensuring
                                    that the total number of machines available at all times
                                    during the update is at least 70% of desired machines.
                                  x-kubernetes-int-or-string: true
                              type: object
                            type:
                              description: |-
                                type of deployment. Allowed values are RollingUpdate and OnDelete.
                                The default is RollingUpdate.
                              enum:
                              - RollingUpdate
                              - OnDelete
                              type: string
                          type: object
                        template:
                          description: |-
                            template is a local struct containing a collection of templates for creation of
                            MachineDeployment objects representing a set of worker nodes.
                          properties:
                            bootstrap:
                              description: |-
                                bootstrap contains the bootstrap template reference to be used
                                for the creation of worker Machines.
                              properties:
                                ref:
                                  description: |-
                                    ref is a required reference to a custom resource
                                    offered by a provider.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: |-
                                        If referring to a piece of an object instead of an entire object, this string
                                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a container within a pod, this would take on a value like:
                                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                        the event) or if no container name is specified "spec.containers[2]" (container with
                                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                        referencing a part of an object.
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the referent.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                      type: string
                                    resourceVersion:
                                      description: |-
                                        Specific resourceVersion to which this reference is made, if any.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                      type: string
                                    uid:
                                      description: |-
                                        UID of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - ref
                              type: object
                            infrastructure:
                              description: |-
                                infrastructure contains the infrastructure template reference to be used
                                for the creation of worker Machines.
                              properties:
                                ref:
                                  description: |-
                                    ref is a required reference to a custom resource
                                    offered by a provider.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: |-
                                        If referring to a piece of an object instead of an entire object, this string
                                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a container within a pod, this would take on a value like:
                                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                        the event) or if no container name is specified "spec.containers[2]" (container with
                                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                        referencing a part of an object.
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the referent.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                      type: string
                                    resourceVersion:
                                      description: |-
                                        Specific resourceVersion to which this reference is made, if any.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                      type: string
                                    uid:
                                      description: |-
                                        UID of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - ref
                              type: object
                            metadata:
                              description: |-
                                metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment.
                                At runtime this metadata is merged with the corresponding metadata from the topology.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    annotations is an unstructured key value map stored with a resource that may be
                                    set by external tools to store and retrieve arbitrary metadata. They are not
                                    queryable and should be preserved when modifying objects.
                                    More info: http://kubernetes.io/docs/user-guide/annotations
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    labels is a map of string keys and values that can be used to organize and categorize
                                    (scope and select) objects. May match selectors of replication controllers
                                    and services.
                                    More info: http://kubernetes.io/docs/user-guide/labels
                                  type: object
                              type: object
                          required:
                          - bootstrap
                          - infrastructure
                          type: object
                      required:
                      - class
                      - template
                      type: object
                    maxItems: 100
                    type: array
                    x-kubernetes-list-map-keys:
                    - class
                    x-kubernetes-list-type: map
                  machinePools:
                    description: |-
                      machinePools is a list of machine pool classes that can be used to create
                      a set of worker nodes.
                    items:
                      description: |-
                        MachinePoolClass serves as a template to define a pool of worker nodes of the cluster
                        provisioned using `ClusterClass`.
                      properties:
                        class:
                          description: |-
                            class denotes a type of machine pool present in the cluster,
                            this name MUST be unique within a ClusterClass and can be referenced
                            in the Cluster to create a managed MachinePool.
                          maxLength: 256
                          minLength: 1
                          type: string
                        failureDomains:
                          description: |-
                            failureDomains is the list of failure domains the MachinePool should be attached to.
                            Must match a key in the FailureDomains map stored on the cluster object.
                            NOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.
                          items:
                            maxLength: 256
                            minLength: 1
                            type: string
                          maxItems: 100
                          type: array
                        minReadySeconds:
                          description: |-
                            minReadySeconds is the minimum number of seconds for which a newly created machine pool should
                            be ready.
                            Defaults to 0 (machine will be considered available as soon as it
                            is ready)
                            NOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.
                          format: int32
                          type: integer
                        namingStrategy:
                          description: namingStrategy allows changing the naming pattern
                            used when creating the MachinePool.
                          properties:
                            template:
                              description: |-
                                template defines the template to use for generating the name of the MachinePool object.
                                If not defined, it will fallback to `{{ .cluster.name }}-{{ .machinePool.topologyName }}-{{ .random }}`.
                                If the templated string exceeds 63 characters, it will be trimmed to 58 characters and will
                                get concatenated with a random suffix of length 5.
                                The templating mechanism provides the following arguments:
                                * `.cluster.name`: The name of the cluster object.
                                * `.random`: A random alphanumeric string, without vowels, of length 5.
                                * `.machinePool.topologyName`: The name of the MachinePool topology (Cluster.spec.topology.workers.machinePools[].name).
                              maxLength: 1024
                              minLength: 1
                              type: string
                          type: object
                        nodeDeletionTimeout:
                          description: |-
                            nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                            hosts after the Machine Pool is marked for deletion. A duration of 0 will retry deletion indefinitely.
                            Defaults to 10 seconds.
                            NOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.
                          type: string
                        nodeDrainTimeout:
                          description: |-
                            nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                            The default value is 0, meaning that the node can be drained without any time limitations.
                            NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                            NOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.
                          type: string
                        nodeVolumeDetachTimeout:
                          description: |-
                            nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                            to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                            NOTE: This value can be overridden while defining a Cluster.Topology using this MachinePoolClass.
                          type: string
                        template:
                          description: |-
                            template is a local struct containing a collection of templates for creation of
                            MachinePools objects representing a pool of worker nodes.
                          properties:
                            bootstrap:
                              description: |-
                                bootstrap contains the bootstrap template reference to be used
                                for the creation of the Machines in the MachinePool.
                              properties:
                                ref:
                                  description: |-
                                    ref is a required reference to a custom resource
                                    offered by a provider.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: |-
                                        If referring to a piece of an object instead of an entire object, this string
                                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a container within a pod, this would take on a value like:
                                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                        the event) or if no container name is specified "spec.containers[2]" (container with
                                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                        referencing a part of an object.
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the referent.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                      type: string
                                    resourceVersion:
                                      description: |-
                                        Specific resourceVersion to which this reference is made, if any.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                      type: string
                                    uid:
                                      description: |-
                                        UID of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - ref
                              type: object
                            infrastructure:
                              description: |-
                                infrastructure contains the infrastructure template reference to be used
                                for the creation of the MachinePool.
                              properties:
                                ref:
                                  description: |-
                                    ref is a required reference to a custom resource
                                    offered by a provider.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: |-
                                        If referring to a piece of an object instead of an entire object, this string
                                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a container within a pod, this would take on a value like:
                                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                        the event) or if no container name is specified "spec.containers[2]" (container with
                                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                        referencing a part of an object.
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the referent.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                      type: string
                                    resourceVersion:
                                      description: |-
                                        Specific resourceVersion to which this reference is made, if any.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                      type: string
                                    uid:
                                      description: |-
                                        UID of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                              required:
                              - ref
                              type: object
                            metadata:
                              description: |-
                                metadata is the metadata applied to the MachinePool.
                                At runtime this metadata is merged with the corresponding metadata from the topology.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    annotations is an unstructured key value map stored with a resource that may be
                                    set by external tools to store and retrieve arbitrary metadata. They are not
                                    queryable and should be preserved when modifying objects.
                                    More info: http://kubernetes.io/docs/user-guide/annotations
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    labels is a map of string keys and values that can be used to organize and categorize
                                    (scope and select) objects. May match selectors of replication controllers
                                    and services.
                                    More info: http://kubernetes.io/docs/user-guide/labels
                                  type: object
                              type: object
                          required:
                          - bootstrap
                          - infrastructure
                          type: object
                      required:
                      - class
                      - template
                      type: object
                    maxItems: 100
                    type: array
                    x-kubernetes-list-map-keys:
                    - class
                    x-kubernetes-list-type: map
                type: object
            type: object
          status:
            description: status is the observed state of ClusterClass.
            properties:
              conditions:
                description: conditions defines current observed state of the ClusterClass.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      maxLength: 32
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              observedGeneration:
                description: observedGeneration is the latest generation observed
                  by the controller.
                format: int64
                type: integer
              v1beta2:
                description: v1beta2 groups all the fields that will be added or modified
                  in ClusterClass's status with the V1Beta2 version.
                properties:
                  conditions:
                    description: |-
                      conditions represents the observations of a ClusterClass's current state.
                      Known condition types are VariablesReady, RefVersionsUpToDate, Paused.
                    items:
                      description: Condition contains details for one aspect of the
                        current state of this API Resource.
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    maxItems: 32
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                type: object
              variables:
                description: variables is a list of ClusterClassStatusVariable that
                  are defined for the ClusterClass.
                items:
                  description: ClusterClassStatusVariable defines a variable which
                    appears in the status of a ClusterClass.
                  properties:
                    definitions:
                      description: definitions is a list of definitions for a variable.
                      items:
                        description: ClusterClassStatusVariableDefinition defines
                          a variable which appears in the status of a ClusterClass.
                        properties:
                          from:
                            description: |-
                              from specifies the origin of the variable definition.
                              This will be `inline` for variables defined in the ClusterClass or the name of a patch defined in the ClusterClass
                              for variables discovered from a DiscoverVariables runtime extensions.
                            maxLength: 256
                            minLength: 1
                            type: string
                          metadata:
                            description: |-
                              metadata is the metadata of a variable.
                              It can be used to add additional data for higher level tools to
                              a ClusterClassVariable.

                              Deprecated: This field is deprecated and is going to be removed in the next apiVersion.
                            properties:
                              annotations:
                                additionalProperties:
                                  type: string
                                description: |-
                                  annotations is an unstructured key value map that can be used to store and
                                  retrieve arbitrary metadata.
                                  They are not queryable.
                                type: object
                              labels:
                                additionalProperties:
                                  type: string
                                description: |-
                                  labels is a map of string keys and values that can be used to organize and categorize
                                  (scope and select) variables.
                                type: object
                            type: object
                          required:
                            description: |-
                              required specifies if the variable is required.
                              Note: this applies to the variable as a whole and thus the
                              top-level object defined in the schema. If nested fields are
                              required, this will be specified inside the schema.
                            type: boolean
                          schema:
                            description: schema defines the schema of the variable.
                            properties:
                              openAPIV3Schema:
                                description: |-
                                  openAPIV3Schema defines the schema of a variable via OpenAPI v3
                                  schema. The schema is a subset of the schema used in
                                  Kubernetes CRDs.
                                properties:
                                  additionalProperties:
                                    description: |-
                                      additionalProperties specifies the schema of values in a map (keys are always strings).
                                      NOTE: Can only be set if type is object.
                                      NOTE: AdditionalProperties is mutually exclusive with Properties.
                                      NOTE: This field uses PreserveUnknownFields and Schemaless,
                                      because recursive validation is not possible.
                                    x-kubernetes-preserve-unknown-fields: true
                                  allOf:
                                    description: |-
                                      allOf specifies that the variable must validate against all of the subschemas in the array.
                                      NOTE: This field uses PreserveUnknownFields and Schemaless,
                                      because recursive validation is not possible.
                                    x-kubernetes-preserve-unknown-fields: true
                                  anyOf:
                                    description: |-
                                      anyOf specifies that the variable must validate against one or more of the subschemas in the array.
                                      NOTE: This field uses PreserveUnknownFields and Schemaless,
                                      because recursive validation is not possible.
                                    x-kubernetes-preserve-unknown-fields: true
                                  default:
                                    description: |-
                                      default is the default value of the variable.
                                      NOTE: Can be set for all types.
                                    x-kubernetes-preserve-unknown-fields: true
                                  description:
                                    description: description is a human-readable description
                                      of this variable.
                                    maxLength: 4096
                                    minLength: 1
                                    type: string
                                  enum:
                                    description: |-
                                      enum is the list of valid values of the variable.
                                      NOTE: Can be set for all types.
                                    items:
                                      x-kubernetes-preserve-unknown-fields: true
                                    maxItems: 100
                                    type: array
                                  example:
                                    description: example is an example for this variable.
                                    x-kubernetes-preserve-unknown-fields: true
                                  exclusiveMaximum:
                                    description: |-
                                      exclusiveMaximum specifies if the Maximum is exclusive.
                                      NOTE: Can only be set if type is integer or number.
                                    type: boolean
                                  exclusiveMinimum:
                                    description: |-
                                      exclusiveMinimum specifies if the Minimum is exclusive.
                                      NOTE: Can only be set if type is integer or number.
                                    type: boolean
                                  format:
                                    description: |-
                                      format is an OpenAPI v3 format string. Unknown formats are ignored.
                                      For a list of supported formats please see: (of the k8s.io/apiextensions-apiserver version we're currently using)
                                      https://github.com/kubernetes/apiextensions-apiserver/blob/master/pkg/apiserver/validation/formats.go
                                      NOTE: Can only be set if type is string.
                                    maxLength: 32
                                    minLength: 1
                                    type: string
                                  items:
                                    description: |-
                                      items specifies fields of an array.
                                      NOTE: Can only be set if type is array.
                                      NOTE: This field uses PreserveUnknownFields and Schemaless,
                                      because recursive validation is not possible.
                                    x-kubernetes-preserve-unknown-fields: true
                                  maxItems:
                                    description: |-
                                      maxItems is the max length of an array variable.
                                      NOTE: Can only be set if type is array.
                                    format: int64
                                    type: integer
                                  maxLength:
                                    description: |-
                                      maxLength is the max length of a string variable.
                                      NOTE: Can only be set if type is string.
                                    format: int64
                                    type: integer
                                  maxProperties:
                                    description: |-
                                      maxProperties is the maximum amount of entries in a map or properties in an object.
                                      NOTE: Can only be set if type is object.
                                    format: int64
                                    type: integer
                                  maximum:
                                    description: |-
                                      maximum is the maximum of an integer or number variable.
                                      If ExclusiveMaximum is false, the variable is valid if it is lower than, or equal to, the value of Maximum.
                                      If ExclusiveMaximum is true, the variable is valid if it is strictly lower than the value of Maximum.
                                      NOTE: Can only be set if type is integer or number.
                                    format: int64
                                    type: integer
                                  minItems:
                                    description: |-
                                      minItems is the min length of an array variable.
                                      NOTE: Can only be set if type is array.
                                    format: int64
                                    type: integer
                                  minLength:
                                    description: |-
                                      minLength is the min length of a string variable.
                                      NOTE: Can only be set if type is string.
                                    format: int64
                                    type: integer
                                  minProperties:
                                    description: |-
                                      minProperties is the minimum amount of entries in a map or properties in an object.
                                      NOTE: Can only be set if type is object.
                                    format: int64
                                    type: integer
                                  minimum:
                                    description: |-
                                      minimum is the minimum of an integer or number variable.
                                      If ExclusiveMinimum is false, the variable is valid if it is greater than, or equal to, the value of Minimum.
                                      If ExclusiveMinimum is true, the variable is valid if it is strictly greater than the value of Minimum.
                                      NOTE: Can only be set if type is integer or number.
                                    format: int64
                                    type: integer
                                  not:
                                    description: |-
                                      not specifies that the variable must not validate against the subschema.
                                      NOTE: This field uses PreserveUnknownFields and Schemaless,
                                      because recursive validation is not possible.
                                    x-kubernetes-preserve-unknown-fields: true
                                  oneOf:
                                    description: |-
                                      oneOf specifies that the variable must validate against exactly one of the subschemas in the array.
                                      NOTE: This field uses PreserveUnknownFields and Schemaless,
                                      because recursive validation is not possible.
                                    x-kubernetes-preserve-unknown-fields: true
                                  pattern:
                                    description: |-
                                      pattern is the regex which a string variable must match.
                                      NOTE: Can only be set if type is string.
                                    maxLength: 512
                                    minLength: 1
                                    type: string
                                  properties:
                                    description: |-
                                      properties specifies fields of an object.
                                      NOTE: Can only be set if type is object.
                                      NOTE: Properties is mutually exclusive with AdditionalProperties.
                                      NOTE: This field uses PreserveUnknownFields and Schemaless,
                                      because recursive validation is not possible.
                                    x-kubernetes-preserve-unknown-fields: true
                                  required:
                                    description: |-
                                      required specifies which fields of an object are required.
                                      NOTE: Can only be set if type is object.
                                    items:
                                      maxLength: 256
                                      minLength: 1
                                      type: string
                                    maxItems: 1000
                                    type: array
                                  type:
                                    description: |-
                                      type is the type of the variable.
                                      Valid values are: object, array, string, integer, number or boolean.
                                    enum:
                                    - object
                                    - array
                                    - string
                                    - integer
                                    - number
                                    - boolean
                                    type: string
                                  uniqueItems:
                                    description: |-
                                      uniqueItems specifies if items in an array must be unique.
                                      NOTE: Can only be set if type is array.
                                    type: boolean
                                  x-kubernetes-int-or-string:
                                    description: |-
                                      x-kubernetes-int-or-string specifies that this value is
                                      either an integer or a string. If this is true, an empty
                                      type is allowed and type as child of anyOf is permitted
                                      if following one of the following patterns:

                                      1) anyOf:
                                         - type: integer
                                         - type: string
                                      2) allOf:
                                         - anyOf:
                                           - type: integer
                                           - type: string
                                         - ... zero or more
                                    type: boolean
                                  x-kubernetes-preserve-unknown-fields:
                                    description: |-
                                      x-kubernetes-preserve-unknown-fields allows setting fields in a variable object
                                      which are not defined in the variable schema. This affects fields recursively,
                                      except if nested properties or additionalProperties are specified in the schema.
                                    type: boolean
                                  x-kubernetes-validations:
                                    description: x-kubernetes-validations describes
                                      a list of validation rules written in the CEL
                                      expression language.
                                    items:
                                      description: ValidationRule describes a validation
                                        rule written in the CEL expression language.
                                      properties:
                                        fieldPath:
                                          description: |-
                                            fieldPath represents the field path returned when the validation fails.
                                            It must be a relative JSON path (i.e. with array notation) scoped to the location of this x-kubernetes-validations extension in the schema and refer to an existing field.
                                            e.g. when validation checks if a specific attribute `foo` under a map `testMap`, the fieldPath could be set to `.testMap.foo`
                                            If the validation checks two lists must have unique attributes, the fieldPath could be set to either of the list: e.g. `.testList`
                                            It does not support list numeric index.
                                            It supports child operation to refer to an existing field currently. Refer to [JSONPath support in Kubernetes](https://kubernetes.io/docs/reference/kubectl/jsonpath/) for more info.
                                            Numeric index of array is not supported.
                                            For field name which contains special characters, use `['specialName']` to refer the field name.
                                            e.g. for attribute `foo.34$` appears in a list `testList`, the fieldPath could be set to `.testList['foo.34$']`
                                          maxLength: 512
                                          minLength: 1
                                          type: string
                                        message:
                                          description: |-
                                            message represents the message displayed when validation fails. The message is required if the Rule contains
                                            line breaks. The message must not contain line breaks.
                                            If unset, the message is "failed rule: {Rule}".
                                            e.g. "must be a URL with the host matching spec.host"
                                          maxLength: 512
                                          minLength: 1
                                          type: string
                                        messageExpression:
                                          description: |-
                                            messageExpression declares a CEL expression that evaluates to the validation failure message that is returned when this rule fails.
                                            Since messageExpression is used as a failure message, it must evaluate to a string.
                                            If both message and messageExpression are present on a rule, then messageExpression will be used if validation
                                            fails. If messageExpression results in a runtime error, the validation failure message is produced
                                            as if the messageExpression field were unset. If messageExpression evaluates to an empty string, a string with only spaces, or a string
                                            that contains line breaks, then the validation failure message will also be produced as if the messageExpression field were unset.
                                            messageExpression has access to all the same variables as the rule; the only difference is the return type.
                                            Example:
                                            "x must be less than max ("+string(self.max)+")"
                                          maxLength: 1024
                                          minLength: 1
                                          type: string
                                        reason:
                                          default: FieldValueInvalid
                                          description: |-
                                            reason provides a machine-readable validation failure reason that is returned to the caller when a request fails this validation rule.
                                            The currently supported reasons are: "FieldValueInvalid", "FieldValueForbidden", "FieldValueRequired", "FieldValueDuplicate".
                                            If not set, default to use "FieldValueInvalid".
                                            All future added reasons must be accepted by clients when reading this value and unknown reasons should be treated as FieldValueInvalid.
                                          enum:
                                          - FieldValueInvalid
                                          - FieldValueForbidden
                                          - FieldValueRequired
                                          - FieldValueDuplicate
                                          type: string
                                        rule:
                                          description: "rule represents the expression
                                            which will be evaluated by CEL.\nref:
                                            https://github.com/google/cel-spec\nThe
                                            Rule is scoped to the location of the
                                            x-kubernetes-validations extension in
                                            the schema.\nThe `self` variable in the
                                            CEL expression is bound to the scoped
                                            value.\nIf the Rule is scoped to an object
                                            with properties, the accessible properties
                                            of the object are field selectable\nvia
                                            `self.field` and field presence can be
                                            checked via `has(self.field)`.\nIf the
                                            Rule is scoped to an object with additionalProperties
                                            (i.e. a map) the value of the map\nare
                                            accessible via `self[mapKey]`, map containment
                                            can be checked via `mapKey in self` and
                                            all entries of the map\nare accessible
                                            via CEL macros and functions such as `self.all(...)`.\nIf
                                            the Rule is scoped to an array, the elements
                                            of the array are accessible via `self[i]`
                                            and also by macros and\nfunctions.\nIf
                                            the Rule is scoped to a scalar, `self`
                                            is bound to the scalar value.\nExamples:\n-
                                            Rule scoped to a map of objects: {\"rule\":
                                            \"self.components['Widget'].priority <
                                            10\"}\n- Rule scoped to a list of integers:
                                            {\"rule\": \"self.values.all(value, value
                                            >= 0 && value < 100)\"}\n- Rule scoped
                                            to a string value: {\"rule\": \"self.startsWith('kube')\"}\n\nUnknown
                                            data preserved in custom resources via
                                            x-kubernetes-preserve-unknown-fields is
                                            not accessible in CEL\nexpressions. This
                                            includes:\n- Unknown field values that
                                            are preserved by object schemas with x-kubernetes-preserve-unknown-fields.\n-
                                            Object properties where the property schema
                                            is of an \"unknown type\". An \"unknown
                                            type\" is recursively defined as:\n  -
                                            A schema with no type and x-kubernetes-preserve-unknown-fields
                                            set to true\n  - An array where the items
                                            schema is of an \"unknown type\"\n  -
                                            An object where the additionalProperties
                                            schema is of an \"unknown type\"\n\nOnly
                                            property names of the form `[a-zA-Z_.-/][a-zA-Z0-9_.-/]*`
                                            are accessible.\nAccessible property names
                                            are escaped according to the following
                                            rules when accessed in the expression:\n-
                                            '__' escapes to '__underscores__'\n- '.'
                                            escapes to '__dot__'\n- '-' escapes to
                                            '__dash__'\n- '/' escapes to '__slash__'\n-
                                            Property names that exactly match a CEL
                                            RESERVED keyword escape to '__{keyword}__'.
                                            The keywords are:\n\t  \"true\", \"false\",
                                            \"null\", \"in\", \"as\", \"break\", \"const\",
                                            \"continue\", \"else\", \"for\", \"function\",
                                            \"if\",\n\t  \"import\", \"let\", \"loop\",
                                            \"package\", \"namespace\", \"return\".\nExamples:\n
                                            \ - Rule accessing a property named \"namespace\":
                                            {\"rule\": \"self.__namespace__ > 0\"}\n
                                            \ - Rule accessing a property named \"x-prop\":
                                            {\"rule\": \"self.x__dash__prop > 0\"}\n
                                            \ - Rule accessing a property named \"redact__d\":
                                            {\"rule\": \"self.redact__underscores__d
                                            > 0\"}\n\nIf `rule` makes use of the `oldSelf`
                                            variable it is implicitly a\n`transition
                                            rule`.\n\nBy default, the `oldSelf` variable
                                            is the same type as `self`.\n\nTransition
                                            rules by default are applied only on UPDATE
                                            requests and are\nskipped if an old value
                                            could not be found."
                                          maxLength: 4096
                                          minLength: 1
                                          type: string
                                      required:
                                      - rule
                                      type: object
                                    maxItems: 100
                                    type: array
                                    x-kubernetes-list-map-keys:
                                    - rule
                                    x-kubernetes-list-type: map
                                  x-metadata:
                                    description: |-
                                      x-metadata is the metadata of a variable or a nested field within a variable.
                                      It can be used to add additional data for higher level tools.
                                    properties:
                                      annotations:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          annotations is an unstructured key value map that can be used to store and
                                          retrieve arbitrary metadata.
                                          They are not queryable.
                                        type: object
                                      labels:
                                        additionalProperties:
                                          type: string
                                        description: |-
                                          labels is a map of string keys and values that can be used to organize and categorize
                                          (scope and select) variables.
                                        type: object
                                    type: object
                                type: object
                            required:
                            - openAPIV3Schema
                            type: object
                        required:
                        - from
                        - required
                        - schema
                        type: object
                      maxItems: 100
                      type: array
                    definitionsConflict:
                      description: definitionsConflict specifies whether or not there
                        are conflicting definitions for a single variable name.
                      type: boolean
                    name:
                      description: name is the name of the variable.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - definitions
                  - name
                  type: object
                maxItems: 1000
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
