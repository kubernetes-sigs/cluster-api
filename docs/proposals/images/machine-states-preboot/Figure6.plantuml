@startuml
title Figure 6: User creates a machine with kubeadm bootstrapper


' -- GROUPS START ---

box #lightgreen
participant "API Server"
end box

box #lightsalmon
participant "AWS Infrastructure Controller"
end box

' -- GROUPS END ---

entity AWS

note over "AWS Infrastructure Controller": Watches AWSInfrastructureConfig\nand Machine events with mapFunc

"API Server"-->>"AWS Infrastructure Controller": Machine updated

"AWS Infrastructure Controller"-> "AWS Infrastructure Controller": Enqueues AWSInfrastructureConfig Reconcile

"AWS Infrastructure Controller"-> "AWS Infrastructure Controller": AWSInfrastructureConfig Controller Reconcile
activate "AWS Infrastructure Controller"

note over "AWS Infrastructure Controller": - ✅ AWSInfrastructureConfig.OwnerReferences \ncontains a Machine

"AWS Infrastructure Controller"->"API Server": Get Machine
"AWS Infrastructure Controller"<<--"API Server": Response

"AWS Infrastructure Controller"->"API Server": Get Cluster
"AWS Infrastructure Controller"<<--"API Server": Response

note over "AWS Infrastructure Controller": - ✅ Machine.Status.Phase is "Provisioning" \n- ✅ Machine.Spec.Bootstrap.Data is populated (not <nil>)\n- ✅ AWS supports user-data\n- ✅ AWSInfrastructureConfig is valid\n- ✅ AWSInfrastructureConfig.Status.Ready is false

"AWS Infrastructure Controller"-> "AWS Infrastructure Controller": Copy Machine.Spec.Bootstrap.Data to *ec2.RunInstancesInput

"AWS Infrastructure Controller"-> AWS: RunInstances(*ec2.RunInstancesInput)
"AWS Infrastructure Controller"<<--AWS: Response

"AWS Infrastructure Controller"-> "AWS Infrastructure Controller":Set AWSInfrastructureConfig.Status.Ready = true

"AWS Infrastructure Controller"->"API Server": Update AWSInfrastructureConfig
"AWS Infrastructure Controller"<<--"API Server": Response

hide footbox
@enduml
