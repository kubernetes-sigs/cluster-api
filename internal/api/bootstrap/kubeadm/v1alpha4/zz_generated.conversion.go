//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha4

import (
	unsafe "unsafe"

	corev1 "k8s.io/api/core/v1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1beta2 "sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2"
	corev1alpha4 "sigs.k8s.io/cluster-api/internal/api/core/v1alpha4"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*APIEndpoint)(nil), (*v1beta2.APIEndpoint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_APIEndpoint_To_v1beta2_APIEndpoint(a.(*APIEndpoint), b.(*v1beta2.APIEndpoint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.APIEndpoint)(nil), (*APIEndpoint)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_APIEndpoint_To_v1alpha4_APIEndpoint(a.(*v1beta2.APIEndpoint), b.(*APIEndpoint), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*BootstrapTokenDiscovery)(nil), (*v1beta2.BootstrapTokenDiscovery)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_BootstrapTokenDiscovery_To_v1beta2_BootstrapTokenDiscovery(a.(*BootstrapTokenDiscovery), b.(*v1beta2.BootstrapTokenDiscovery), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.BootstrapTokenDiscovery)(nil), (*BootstrapTokenDiscovery)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_BootstrapTokenDiscovery_To_v1alpha4_BootstrapTokenDiscovery(a.(*v1beta2.BootstrapTokenDiscovery), b.(*BootstrapTokenDiscovery), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*BootstrapTokenString)(nil), (*v1beta2.BootstrapTokenString)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_BootstrapTokenString_To_v1beta2_BootstrapTokenString(a.(*BootstrapTokenString), b.(*v1beta2.BootstrapTokenString), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.BootstrapTokenString)(nil), (*BootstrapTokenString)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_BootstrapTokenString_To_v1alpha4_BootstrapTokenString(a.(*v1beta2.BootstrapTokenString), b.(*BootstrapTokenString), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DiskSetup)(nil), (*v1beta2.DiskSetup)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_DiskSetup_To_v1beta2_DiskSetup(a.(*DiskSetup), b.(*v1beta2.DiskSetup), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.DiskSetup)(nil), (*DiskSetup)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_DiskSetup_To_v1alpha4_DiskSetup(a.(*v1beta2.DiskSetup), b.(*DiskSetup), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ExternalEtcd)(nil), (*v1beta2.ExternalEtcd)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_ExternalEtcd_To_v1beta2_ExternalEtcd(a.(*ExternalEtcd), b.(*v1beta2.ExternalEtcd), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.ExternalEtcd)(nil), (*ExternalEtcd)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ExternalEtcd_To_v1alpha4_ExternalEtcd(a.(*v1beta2.ExternalEtcd), b.(*ExternalEtcd), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FileDiscovery)(nil), (*v1beta2.FileDiscovery)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_FileDiscovery_To_v1beta2_FileDiscovery(a.(*FileDiscovery), b.(*v1beta2.FileDiscovery), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*FileSource)(nil), (*v1beta2.FileSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_FileSource_To_v1beta2_FileSource(a.(*FileSource), b.(*v1beta2.FileSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.FileSource)(nil), (*FileSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FileSource_To_v1alpha4_FileSource(a.(*v1beta2.FileSource), b.(*FileSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Filesystem)(nil), (*v1beta2.Filesystem)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_Filesystem_To_v1beta2_Filesystem(a.(*Filesystem), b.(*v1beta2.Filesystem), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.Filesystem)(nil), (*Filesystem)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_Filesystem_To_v1alpha4_Filesystem(a.(*v1beta2.Filesystem), b.(*Filesystem), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*HostPathMount)(nil), (*v1beta2.HostPathMount)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_HostPathMount_To_v1beta2_HostPathMount(a.(*HostPathMount), b.(*v1beta2.HostPathMount), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.HostPathMount)(nil), (*HostPathMount)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_HostPathMount_To_v1alpha4_HostPathMount(a.(*v1beta2.HostPathMount), b.(*HostPathMount), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*JoinControlPlane)(nil), (*v1beta2.JoinControlPlane)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_JoinControlPlane_To_v1beta2_JoinControlPlane(a.(*JoinControlPlane), b.(*v1beta2.JoinControlPlane), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.JoinControlPlane)(nil), (*JoinControlPlane)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_JoinControlPlane_To_v1alpha4_JoinControlPlane(a.(*v1beta2.JoinControlPlane), b.(*JoinControlPlane), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeadmConfig)(nil), (*v1beta2.KubeadmConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_KubeadmConfig_To_v1beta2_KubeadmConfig(a.(*KubeadmConfig), b.(*v1beta2.KubeadmConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.KubeadmConfig)(nil), (*KubeadmConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_KubeadmConfig_To_v1alpha4_KubeadmConfig(a.(*v1beta2.KubeadmConfig), b.(*KubeadmConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeadmConfigList)(nil), (*v1beta2.KubeadmConfigList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_KubeadmConfigList_To_v1beta2_KubeadmConfigList(a.(*KubeadmConfigList), b.(*v1beta2.KubeadmConfigList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.KubeadmConfigList)(nil), (*KubeadmConfigList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_KubeadmConfigList_To_v1alpha4_KubeadmConfigList(a.(*v1beta2.KubeadmConfigList), b.(*KubeadmConfigList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeadmConfigTemplate)(nil), (*v1beta2.KubeadmConfigTemplate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_KubeadmConfigTemplate_To_v1beta2_KubeadmConfigTemplate(a.(*KubeadmConfigTemplate), b.(*v1beta2.KubeadmConfigTemplate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.KubeadmConfigTemplate)(nil), (*KubeadmConfigTemplate)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_KubeadmConfigTemplate_To_v1alpha4_KubeadmConfigTemplate(a.(*v1beta2.KubeadmConfigTemplate), b.(*KubeadmConfigTemplate), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeadmConfigTemplateList)(nil), (*v1beta2.KubeadmConfigTemplateList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_KubeadmConfigTemplateList_To_v1beta2_KubeadmConfigTemplateList(a.(*KubeadmConfigTemplateList), b.(*v1beta2.KubeadmConfigTemplateList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.KubeadmConfigTemplateList)(nil), (*KubeadmConfigTemplateList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_KubeadmConfigTemplateList_To_v1alpha4_KubeadmConfigTemplateList(a.(*v1beta2.KubeadmConfigTemplateList), b.(*KubeadmConfigTemplateList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeadmConfigTemplateResource)(nil), (*v1beta2.KubeadmConfigTemplateResource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_KubeadmConfigTemplateResource_To_v1beta2_KubeadmConfigTemplateResource(a.(*KubeadmConfigTemplateResource), b.(*v1beta2.KubeadmConfigTemplateResource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*KubeadmConfigTemplateSpec)(nil), (*v1beta2.KubeadmConfigTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_KubeadmConfigTemplateSpec_To_v1beta2_KubeadmConfigTemplateSpec(a.(*KubeadmConfigTemplateSpec), b.(*v1beta2.KubeadmConfigTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.KubeadmConfigTemplateSpec)(nil), (*KubeadmConfigTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_KubeadmConfigTemplateSpec_To_v1alpha4_KubeadmConfigTemplateSpec(a.(*v1beta2.KubeadmConfigTemplateSpec), b.(*KubeadmConfigTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*NTP)(nil), (*v1beta2.NTP)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_NTP_To_v1beta2_NTP(a.(*NTP), b.(*v1beta2.NTP), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.NTP)(nil), (*NTP)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_NTP_To_v1alpha4_NTP(a.(*v1beta2.NTP), b.(*NTP), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Partition)(nil), (*v1beta2.Partition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_Partition_To_v1beta2_Partition(a.(*Partition), b.(*v1beta2.Partition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.Partition)(nil), (*Partition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_Partition_To_v1alpha4_Partition(a.(*v1beta2.Partition), b.(*Partition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*SecretFileSource)(nil), (*v1beta2.SecretFileSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_SecretFileSource_To_v1beta2_SecretFileSource(a.(*SecretFileSource), b.(*v1beta2.SecretFileSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.SecretFileSource)(nil), (*SecretFileSource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_SecretFileSource_To_v1alpha4_SecretFileSource(a.(*v1beta2.SecretFileSource), b.(*SecretFileSource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*User)(nil), (*v1beta2.User)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_User_To_v1beta2_User(a.(*User), b.(*v1beta2.User), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.Condition)(nil), (*corev1alpha4.Condition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Condition_To_v1alpha4_Condition(a.(*v1.Condition), b.(*corev1alpha4.Condition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*APIServer)(nil), (*v1beta2.APIServer)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_APIServer_To_v1beta2_APIServer(a.(*APIServer), b.(*v1beta2.APIServer), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*BootstrapToken)(nil), (*v1beta2.BootstrapToken)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_BootstrapToken_To_v1beta2_BootstrapToken(a.(*BootstrapToken), b.(*v1beta2.BootstrapToken), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ClusterConfiguration)(nil), (*v1beta2.ClusterConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_ClusterConfiguration_To_v1beta2_ClusterConfiguration(a.(*ClusterConfiguration), b.(*v1beta2.ClusterConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*corev1alpha4.Condition)(nil), (*v1.Condition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_Condition_To_v1_Condition(a.(*corev1alpha4.Condition), b.(*v1.Condition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ControlPlaneComponent)(nil), (*v1beta2.ControllerManager)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_ControlPlaneComponent_To_v1beta2_ControllerManager(a.(*ControlPlaneComponent), b.(*v1beta2.ControllerManager), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ControlPlaneComponent)(nil), (*v1beta2.Scheduler)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_ControlPlaneComponent_To_v1beta2_Scheduler(a.(*ControlPlaneComponent), b.(*v1beta2.Scheduler), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*DNS)(nil), (*v1beta2.DNS)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_DNS_To_v1beta2_DNS(a.(*DNS), b.(*v1beta2.DNS), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*Discovery)(nil), (*v1beta2.Discovery)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_Discovery_To_v1beta2_Discovery(a.(*Discovery), b.(*v1beta2.Discovery), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*Etcd)(nil), (*v1beta2.Etcd)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_Etcd_To_v1beta2_Etcd(a.(*Etcd), b.(*v1beta2.Etcd), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*File)(nil), (*v1beta2.File)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_File_To_v1beta2_File(a.(*File), b.(*v1beta2.File), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*InitConfiguration)(nil), (*v1beta2.InitConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_InitConfiguration_To_v1beta2_InitConfiguration(a.(*InitConfiguration), b.(*v1beta2.InitConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*JoinConfiguration)(nil), (*v1beta2.JoinConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_JoinConfiguration_To_v1beta2_JoinConfiguration(a.(*JoinConfiguration), b.(*v1beta2.JoinConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*KubeadmConfigSpec)(nil), (*v1beta2.KubeadmConfigSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_KubeadmConfigSpec_To_v1beta2_KubeadmConfigSpec(a.(*KubeadmConfigSpec), b.(*v1beta2.KubeadmConfigSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*KubeadmConfigStatus)(nil), (*v1beta2.KubeadmConfigStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_KubeadmConfigStatus_To_v1beta2_KubeadmConfigStatus(a.(*KubeadmConfigStatus), b.(*v1beta2.KubeadmConfigStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*LocalEtcd)(nil), (*v1beta2.LocalEtcd)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_LocalEtcd_To_v1beta2_LocalEtcd(a.(*LocalEtcd), b.(*v1beta2.LocalEtcd), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*NodeRegistrationOptions)(nil), (*v1beta2.NodeRegistrationOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha4_NodeRegistrationOptions_To_v1beta2_NodeRegistrationOptions(a.(*NodeRegistrationOptions), b.(*v1beta2.NodeRegistrationOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.APIServer)(nil), (*APIServer)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_APIServer_To_v1alpha4_APIServer(a.(*v1beta2.APIServer), b.(*APIServer), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.BootstrapToken)(nil), (*BootstrapToken)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_BootstrapToken_To_v1alpha4_BootstrapToken(a.(*v1beta2.BootstrapToken), b.(*BootstrapToken), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.ClusterConfiguration)(nil), (*ClusterConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ClusterConfiguration_To_v1alpha4_ClusterConfiguration(a.(*v1beta2.ClusterConfiguration), b.(*ClusterConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.ControllerManager)(nil), (*ControlPlaneComponent)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ControllerManager_To_v1alpha4_ControlPlaneComponent(a.(*v1beta2.ControllerManager), b.(*ControlPlaneComponent), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.DNS)(nil), (*DNS)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_DNS_To_v1alpha4_DNS(a.(*v1beta2.DNS), b.(*DNS), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.Discovery)(nil), (*Discovery)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_Discovery_To_v1alpha4_Discovery(a.(*v1beta2.Discovery), b.(*Discovery), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.Etcd)(nil), (*Etcd)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_Etcd_To_v1alpha4_Etcd(a.(*v1beta2.Etcd), b.(*Etcd), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.FileDiscovery)(nil), (*FileDiscovery)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_FileDiscovery_To_v1alpha4_FileDiscovery(a.(*v1beta2.FileDiscovery), b.(*FileDiscovery), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.File)(nil), (*File)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_File_To_v1alpha4_File(a.(*v1beta2.File), b.(*File), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.InitConfiguration)(nil), (*InitConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_InitConfiguration_To_v1alpha4_InitConfiguration(a.(*v1beta2.InitConfiguration), b.(*InitConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.JoinConfiguration)(nil), (*JoinConfiguration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_JoinConfiguration_To_v1alpha4_JoinConfiguration(a.(*v1beta2.JoinConfiguration), b.(*JoinConfiguration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.KubeadmConfigSpec)(nil), (*KubeadmConfigSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_KubeadmConfigSpec_To_v1alpha4_KubeadmConfigSpec(a.(*v1beta2.KubeadmConfigSpec), b.(*KubeadmConfigSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.KubeadmConfigStatus)(nil), (*KubeadmConfigStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_KubeadmConfigStatus_To_v1alpha4_KubeadmConfigStatus(a.(*v1beta2.KubeadmConfigStatus), b.(*KubeadmConfigStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.KubeadmConfigTemplateResource)(nil), (*KubeadmConfigTemplateResource)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_KubeadmConfigTemplateResource_To_v1alpha4_KubeadmConfigTemplateResource(a.(*v1beta2.KubeadmConfigTemplateResource), b.(*KubeadmConfigTemplateResource), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.LocalEtcd)(nil), (*LocalEtcd)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_LocalEtcd_To_v1alpha4_LocalEtcd(a.(*v1beta2.LocalEtcd), b.(*LocalEtcd), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.NodeRegistrationOptions)(nil), (*NodeRegistrationOptions)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_NodeRegistrationOptions_To_v1alpha4_NodeRegistrationOptions(a.(*v1beta2.NodeRegistrationOptions), b.(*NodeRegistrationOptions), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.Scheduler)(nil), (*ControlPlaneComponent)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_Scheduler_To_v1alpha4_ControlPlaneComponent(a.(*v1beta2.Scheduler), b.(*ControlPlaneComponent), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.User)(nil), (*User)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_User_To_v1alpha4_User(a.(*v1beta2.User), b.(*User), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha4_APIEndpoint_To_v1beta2_APIEndpoint(in *APIEndpoint, out *v1beta2.APIEndpoint, s conversion.Scope) error {
	out.AdvertiseAddress = in.AdvertiseAddress
	out.BindPort = in.BindPort
	return nil
}

// Convert_v1alpha4_APIEndpoint_To_v1beta2_APIEndpoint is an autogenerated conversion function.
func Convert_v1alpha4_APIEndpoint_To_v1beta2_APIEndpoint(in *APIEndpoint, out *v1beta2.APIEndpoint, s conversion.Scope) error {
	return autoConvert_v1alpha4_APIEndpoint_To_v1beta2_APIEndpoint(in, out, s)
}

func autoConvert_v1beta2_APIEndpoint_To_v1alpha4_APIEndpoint(in *v1beta2.APIEndpoint, out *APIEndpoint, s conversion.Scope) error {
	out.AdvertiseAddress = in.AdvertiseAddress
	out.BindPort = in.BindPort
	return nil
}

// Convert_v1beta2_APIEndpoint_To_v1alpha4_APIEndpoint is an autogenerated conversion function.
func Convert_v1beta2_APIEndpoint_To_v1alpha4_APIEndpoint(in *v1beta2.APIEndpoint, out *APIEndpoint, s conversion.Scope) error {
	return autoConvert_v1beta2_APIEndpoint_To_v1alpha4_APIEndpoint(in, out, s)
}

func autoConvert_v1alpha4_APIServer_To_v1beta2_APIServer(in *APIServer, out *v1beta2.APIServer, s conversion.Scope) error {
	// WARNING: in.ControlPlaneComponent requires manual conversion: does not exist in peer-type
	out.CertSANs = *(*[]string)(unsafe.Pointer(&in.CertSANs))
	// WARNING: in.TimeoutForControlPlane requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta2_APIServer_To_v1alpha4_APIServer(in *v1beta2.APIServer, out *APIServer, s conversion.Scope) error {
	// WARNING: in.ExtraArgs requires manual conversion: does not exist in peer-type
	// WARNING: in.ExtraVolumes requires manual conversion: does not exist in peer-type
	// WARNING: in.ExtraEnvs requires manual conversion: does not exist in peer-type
	out.CertSANs = *(*[]string)(unsafe.Pointer(&in.CertSANs))
	return nil
}

func autoConvert_v1alpha4_BootstrapToken_To_v1beta2_BootstrapToken(in *BootstrapToken, out *v1beta2.BootstrapToken, s conversion.Scope) error {
	out.Token = (*v1beta2.BootstrapTokenString)(unsafe.Pointer(in.Token))
	out.Description = in.Description
	// WARNING: in.TTL requires manual conversion: does not exist in peer-type
	// WARNING: in.Expires requires manual conversion: inconvertible types (*k8s.io/apimachinery/pkg/apis/meta/v1.Time vs k8s.io/apimachinery/pkg/apis/meta/v1.Time)
	out.Usages = *(*[]string)(unsafe.Pointer(&in.Usages))
	out.Groups = *(*[]string)(unsafe.Pointer(&in.Groups))
	return nil
}

func autoConvert_v1beta2_BootstrapToken_To_v1alpha4_BootstrapToken(in *v1beta2.BootstrapToken, out *BootstrapToken, s conversion.Scope) error {
	out.Token = (*BootstrapTokenString)(unsafe.Pointer(in.Token))
	out.Description = in.Description
	// WARNING: in.TTLSeconds requires manual conversion: does not exist in peer-type
	// WARNING: in.Expires requires manual conversion: inconvertible types (k8s.io/apimachinery/pkg/apis/meta/v1.Time vs *k8s.io/apimachinery/pkg/apis/meta/v1.Time)
	out.Usages = *(*[]string)(unsafe.Pointer(&in.Usages))
	out.Groups = *(*[]string)(unsafe.Pointer(&in.Groups))
	return nil
}

func autoConvert_v1alpha4_BootstrapTokenDiscovery_To_v1beta2_BootstrapTokenDiscovery(in *BootstrapTokenDiscovery, out *v1beta2.BootstrapTokenDiscovery, s conversion.Scope) error {
	out.Token = in.Token
	out.APIServerEndpoint = in.APIServerEndpoint
	out.CACertHashes = *(*[]string)(unsafe.Pointer(&in.CACertHashes))
	if err := v1.Convert_bool_To_Pointer_bool(&in.UnsafeSkipCAVerification, &out.UnsafeSkipCAVerification, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha4_BootstrapTokenDiscovery_To_v1beta2_BootstrapTokenDiscovery is an autogenerated conversion function.
func Convert_v1alpha4_BootstrapTokenDiscovery_To_v1beta2_BootstrapTokenDiscovery(in *BootstrapTokenDiscovery, out *v1beta2.BootstrapTokenDiscovery, s conversion.Scope) error {
	return autoConvert_v1alpha4_BootstrapTokenDiscovery_To_v1beta2_BootstrapTokenDiscovery(in, out, s)
}

func autoConvert_v1beta2_BootstrapTokenDiscovery_To_v1alpha4_BootstrapTokenDiscovery(in *v1beta2.BootstrapTokenDiscovery, out *BootstrapTokenDiscovery, s conversion.Scope) error {
	out.Token = in.Token
	out.APIServerEndpoint = in.APIServerEndpoint
	out.CACertHashes = *(*[]string)(unsafe.Pointer(&in.CACertHashes))
	if err := v1.Convert_Pointer_bool_To_bool(&in.UnsafeSkipCAVerification, &out.UnsafeSkipCAVerification, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta2_BootstrapTokenDiscovery_To_v1alpha4_BootstrapTokenDiscovery is an autogenerated conversion function.
func Convert_v1beta2_BootstrapTokenDiscovery_To_v1alpha4_BootstrapTokenDiscovery(in *v1beta2.BootstrapTokenDiscovery, out *BootstrapTokenDiscovery, s conversion.Scope) error {
	return autoConvert_v1beta2_BootstrapTokenDiscovery_To_v1alpha4_BootstrapTokenDiscovery(in, out, s)
}

func autoConvert_v1alpha4_BootstrapTokenString_To_v1beta2_BootstrapTokenString(in *BootstrapTokenString, out *v1beta2.BootstrapTokenString, s conversion.Scope) error {
	out.ID = in.ID
	out.Secret = in.Secret
	return nil
}

// Convert_v1alpha4_BootstrapTokenString_To_v1beta2_BootstrapTokenString is an autogenerated conversion function.
func Convert_v1alpha4_BootstrapTokenString_To_v1beta2_BootstrapTokenString(in *BootstrapTokenString, out *v1beta2.BootstrapTokenString, s conversion.Scope) error {
	return autoConvert_v1alpha4_BootstrapTokenString_To_v1beta2_BootstrapTokenString(in, out, s)
}

func autoConvert_v1beta2_BootstrapTokenString_To_v1alpha4_BootstrapTokenString(in *v1beta2.BootstrapTokenString, out *BootstrapTokenString, s conversion.Scope) error {
	out.ID = in.ID
	out.Secret = in.Secret
	return nil
}

// Convert_v1beta2_BootstrapTokenString_To_v1alpha4_BootstrapTokenString is an autogenerated conversion function.
func Convert_v1beta2_BootstrapTokenString_To_v1alpha4_BootstrapTokenString(in *v1beta2.BootstrapTokenString, out *BootstrapTokenString, s conversion.Scope) error {
	return autoConvert_v1beta2_BootstrapTokenString_To_v1alpha4_BootstrapTokenString(in, out, s)
}

func autoConvert_v1alpha4_ClusterConfiguration_To_v1beta2_ClusterConfiguration(in *ClusterConfiguration, out *v1beta2.ClusterConfiguration, s conversion.Scope) error {
	// WARNING: in.TypeMeta requires manual conversion: does not exist in peer-type
	if err := Convert_v1alpha4_Etcd_To_v1beta2_Etcd(&in.Etcd, &out.Etcd, s); err != nil {
		return err
	}
	// WARNING: in.Networking requires manual conversion: does not exist in peer-type
	// WARNING: in.KubernetesVersion requires manual conversion: does not exist in peer-type
	out.ControlPlaneEndpoint = in.ControlPlaneEndpoint
	if err := Convert_v1alpha4_APIServer_To_v1beta2_APIServer(&in.APIServer, &out.APIServer, s); err != nil {
		return err
	}
	if err := Convert_v1alpha4_ControlPlaneComponent_To_v1beta2_ControllerManager(&in.ControllerManager, &out.ControllerManager, s); err != nil {
		return err
	}
	if err := Convert_v1alpha4_ControlPlaneComponent_To_v1beta2_Scheduler(&in.Scheduler, &out.Scheduler, s); err != nil {
		return err
	}
	if err := Convert_v1alpha4_DNS_To_v1beta2_DNS(&in.DNS, &out.DNS, s); err != nil {
		return err
	}
	out.CertificatesDir = in.CertificatesDir
	out.ImageRepository = in.ImageRepository
	out.FeatureGates = *(*map[string]bool)(unsafe.Pointer(&in.FeatureGates))
	// WARNING: in.ClusterName requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta2_ClusterConfiguration_To_v1alpha4_ClusterConfiguration(in *v1beta2.ClusterConfiguration, out *ClusterConfiguration, s conversion.Scope) error {
	if err := Convert_v1beta2_Etcd_To_v1alpha4_Etcd(&in.Etcd, &out.Etcd, s); err != nil {
		return err
	}
	out.ControlPlaneEndpoint = in.ControlPlaneEndpoint
	if err := Convert_v1beta2_APIServer_To_v1alpha4_APIServer(&in.APIServer, &out.APIServer, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_ControllerManager_To_v1alpha4_ControlPlaneComponent(&in.ControllerManager, &out.ControllerManager, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_Scheduler_To_v1alpha4_ControlPlaneComponent(&in.Scheduler, &out.Scheduler, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_DNS_To_v1alpha4_DNS(&in.DNS, &out.DNS, s); err != nil {
		return err
	}
	out.CertificatesDir = in.CertificatesDir
	out.ImageRepository = in.ImageRepository
	out.FeatureGates = *(*map[string]bool)(unsafe.Pointer(&in.FeatureGates))
	// WARNING: in.CertificateValidityPeriodDays requires manual conversion: does not exist in peer-type
	// WARNING: in.CACertificateValidityPeriodDays requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha4_DNS_To_v1beta2_DNS(in *DNS, out *v1beta2.DNS, s conversion.Scope) error {
	// WARNING: in.ImageMeta requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta2_DNS_To_v1alpha4_DNS(in *v1beta2.DNS, out *DNS, s conversion.Scope) error {
	// WARNING: in.ImageRepository requires manual conversion: does not exist in peer-type
	// WARNING: in.ImageTag requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha4_Discovery_To_v1beta2_Discovery(in *Discovery, out *v1beta2.Discovery, s conversion.Scope) error {
	// WARNING: in.BootstrapToken requires manual conversion: inconvertible types (*sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.BootstrapTokenDiscovery vs sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.BootstrapTokenDiscovery)
	// WARNING: in.File requires manual conversion: inconvertible types (*sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.FileDiscovery vs sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.FileDiscovery)
	out.TLSBootstrapToken = in.TLSBootstrapToken
	// WARNING: in.Timeout requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta2_Discovery_To_v1alpha4_Discovery(in *v1beta2.Discovery, out *Discovery, s conversion.Scope) error {
	// WARNING: in.BootstrapToken requires manual conversion: inconvertible types (sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.BootstrapTokenDiscovery vs *sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.BootstrapTokenDiscovery)
	// WARNING: in.File requires manual conversion: inconvertible types (sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.FileDiscovery vs *sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.FileDiscovery)
	out.TLSBootstrapToken = in.TLSBootstrapToken
	return nil
}

func autoConvert_v1alpha4_DiskSetup_To_v1beta2_DiskSetup(in *DiskSetup, out *v1beta2.DiskSetup, s conversion.Scope) error {
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]v1beta2.Partition, len(*in))
		for i := range *in {
			if err := Convert_v1alpha4_Partition_To_v1beta2_Partition(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Partitions = nil
	}
	if in.Filesystems != nil {
		in, out := &in.Filesystems, &out.Filesystems
		*out = make([]v1beta2.Filesystem, len(*in))
		for i := range *in {
			if err := Convert_v1alpha4_Filesystem_To_v1beta2_Filesystem(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Filesystems = nil
	}
	return nil
}

// Convert_v1alpha4_DiskSetup_To_v1beta2_DiskSetup is an autogenerated conversion function.
func Convert_v1alpha4_DiskSetup_To_v1beta2_DiskSetup(in *DiskSetup, out *v1beta2.DiskSetup, s conversion.Scope) error {
	return autoConvert_v1alpha4_DiskSetup_To_v1beta2_DiskSetup(in, out, s)
}

func autoConvert_v1beta2_DiskSetup_To_v1alpha4_DiskSetup(in *v1beta2.DiskSetup, out *DiskSetup, s conversion.Scope) error {
	if in.Partitions != nil {
		in, out := &in.Partitions, &out.Partitions
		*out = make([]Partition, len(*in))
		for i := range *in {
			if err := Convert_v1beta2_Partition_To_v1alpha4_Partition(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Partitions = nil
	}
	if in.Filesystems != nil {
		in, out := &in.Filesystems, &out.Filesystems
		*out = make([]Filesystem, len(*in))
		for i := range *in {
			if err := Convert_v1beta2_Filesystem_To_v1alpha4_Filesystem(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Filesystems = nil
	}
	return nil
}

// Convert_v1beta2_DiskSetup_To_v1alpha4_DiskSetup is an autogenerated conversion function.
func Convert_v1beta2_DiskSetup_To_v1alpha4_DiskSetup(in *v1beta2.DiskSetup, out *DiskSetup, s conversion.Scope) error {
	return autoConvert_v1beta2_DiskSetup_To_v1alpha4_DiskSetup(in, out, s)
}

func autoConvert_v1alpha4_Etcd_To_v1beta2_Etcd(in *Etcd, out *v1beta2.Etcd, s conversion.Scope) error {
	// WARNING: in.Local requires manual conversion: inconvertible types (*sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.LocalEtcd vs sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.LocalEtcd)
	// WARNING: in.External requires manual conversion: inconvertible types (*sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.ExternalEtcd vs sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.ExternalEtcd)
	return nil
}

func autoConvert_v1beta2_Etcd_To_v1alpha4_Etcd(in *v1beta2.Etcd, out *Etcd, s conversion.Scope) error {
	// WARNING: in.Local requires manual conversion: inconvertible types (sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.LocalEtcd vs *sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.LocalEtcd)
	// WARNING: in.External requires manual conversion: inconvertible types (sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.ExternalEtcd vs *sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.ExternalEtcd)
	return nil
}

func autoConvert_v1alpha4_ExternalEtcd_To_v1beta2_ExternalEtcd(in *ExternalEtcd, out *v1beta2.ExternalEtcd, s conversion.Scope) error {
	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
	out.CAFile = in.CAFile
	out.CertFile = in.CertFile
	out.KeyFile = in.KeyFile
	return nil
}

// Convert_v1alpha4_ExternalEtcd_To_v1beta2_ExternalEtcd is an autogenerated conversion function.
func Convert_v1alpha4_ExternalEtcd_To_v1beta2_ExternalEtcd(in *ExternalEtcd, out *v1beta2.ExternalEtcd, s conversion.Scope) error {
	return autoConvert_v1alpha4_ExternalEtcd_To_v1beta2_ExternalEtcd(in, out, s)
}

func autoConvert_v1beta2_ExternalEtcd_To_v1alpha4_ExternalEtcd(in *v1beta2.ExternalEtcd, out *ExternalEtcd, s conversion.Scope) error {
	out.Endpoints = *(*[]string)(unsafe.Pointer(&in.Endpoints))
	out.CAFile = in.CAFile
	out.CertFile = in.CertFile
	out.KeyFile = in.KeyFile
	return nil
}

// Convert_v1beta2_ExternalEtcd_To_v1alpha4_ExternalEtcd is an autogenerated conversion function.
func Convert_v1beta2_ExternalEtcd_To_v1alpha4_ExternalEtcd(in *v1beta2.ExternalEtcd, out *ExternalEtcd, s conversion.Scope) error {
	return autoConvert_v1beta2_ExternalEtcd_To_v1alpha4_ExternalEtcd(in, out, s)
}

func autoConvert_v1alpha4_File_To_v1beta2_File(in *File, out *v1beta2.File, s conversion.Scope) error {
	out.Path = in.Path
	out.Owner = in.Owner
	out.Permissions = in.Permissions
	out.Encoding = v1beta2.Encoding(in.Encoding)
	out.Content = in.Content
	// WARNING: in.ContentFrom requires manual conversion: inconvertible types (*sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.FileSource vs sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.FileSource)
	return nil
}

func autoConvert_v1beta2_File_To_v1alpha4_File(in *v1beta2.File, out *File, s conversion.Scope) error {
	out.Path = in.Path
	out.Owner = in.Owner
	out.Permissions = in.Permissions
	out.Encoding = Encoding(in.Encoding)
	// WARNING: in.Append requires manual conversion: does not exist in peer-type
	out.Content = in.Content
	// WARNING: in.ContentFrom requires manual conversion: inconvertible types (sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.FileSource vs *sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.FileSource)
	return nil
}

func autoConvert_v1alpha4_FileDiscovery_To_v1beta2_FileDiscovery(in *FileDiscovery, out *v1beta2.FileDiscovery, s conversion.Scope) error {
	out.KubeConfigPath = in.KubeConfigPath
	return nil
}

// Convert_v1alpha4_FileDiscovery_To_v1beta2_FileDiscovery is an autogenerated conversion function.
func Convert_v1alpha4_FileDiscovery_To_v1beta2_FileDiscovery(in *FileDiscovery, out *v1beta2.FileDiscovery, s conversion.Scope) error {
	return autoConvert_v1alpha4_FileDiscovery_To_v1beta2_FileDiscovery(in, out, s)
}

func autoConvert_v1beta2_FileDiscovery_To_v1alpha4_FileDiscovery(in *v1beta2.FileDiscovery, out *FileDiscovery, s conversion.Scope) error {
	out.KubeConfigPath = in.KubeConfigPath
	// WARNING: in.KubeConfig requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha4_FileSource_To_v1beta2_FileSource(in *FileSource, out *v1beta2.FileSource, s conversion.Scope) error {
	if err := Convert_v1alpha4_SecretFileSource_To_v1beta2_SecretFileSource(&in.Secret, &out.Secret, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha4_FileSource_To_v1beta2_FileSource is an autogenerated conversion function.
func Convert_v1alpha4_FileSource_To_v1beta2_FileSource(in *FileSource, out *v1beta2.FileSource, s conversion.Scope) error {
	return autoConvert_v1alpha4_FileSource_To_v1beta2_FileSource(in, out, s)
}

func autoConvert_v1beta2_FileSource_To_v1alpha4_FileSource(in *v1beta2.FileSource, out *FileSource, s conversion.Scope) error {
	if err := Convert_v1beta2_SecretFileSource_To_v1alpha4_SecretFileSource(&in.Secret, &out.Secret, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta2_FileSource_To_v1alpha4_FileSource is an autogenerated conversion function.
func Convert_v1beta2_FileSource_To_v1alpha4_FileSource(in *v1beta2.FileSource, out *FileSource, s conversion.Scope) error {
	return autoConvert_v1beta2_FileSource_To_v1alpha4_FileSource(in, out, s)
}

func autoConvert_v1alpha4_Filesystem_To_v1beta2_Filesystem(in *Filesystem, out *v1beta2.Filesystem, s conversion.Scope) error {
	out.Device = in.Device
	out.Filesystem = in.Filesystem
	out.Label = in.Label
	if err := v1.Convert_Pointer_string_To_string(&in.Partition, &out.Partition, s); err != nil {
		return err
	}
	out.Overwrite = (*bool)(unsafe.Pointer(in.Overwrite))
	if err := v1.Convert_Pointer_string_To_string(&in.ReplaceFS, &out.ReplaceFS, s); err != nil {
		return err
	}
	out.ExtraOpts = *(*[]string)(unsafe.Pointer(&in.ExtraOpts))
	return nil
}

// Convert_v1alpha4_Filesystem_To_v1beta2_Filesystem is an autogenerated conversion function.
func Convert_v1alpha4_Filesystem_To_v1beta2_Filesystem(in *Filesystem, out *v1beta2.Filesystem, s conversion.Scope) error {
	return autoConvert_v1alpha4_Filesystem_To_v1beta2_Filesystem(in, out, s)
}

func autoConvert_v1beta2_Filesystem_To_v1alpha4_Filesystem(in *v1beta2.Filesystem, out *Filesystem, s conversion.Scope) error {
	out.Device = in.Device
	out.Filesystem = in.Filesystem
	out.Label = in.Label
	if err := v1.Convert_string_To_Pointer_string(&in.Partition, &out.Partition, s); err != nil {
		return err
	}
	out.Overwrite = (*bool)(unsafe.Pointer(in.Overwrite))
	if err := v1.Convert_string_To_Pointer_string(&in.ReplaceFS, &out.ReplaceFS, s); err != nil {
		return err
	}
	out.ExtraOpts = *(*[]string)(unsafe.Pointer(&in.ExtraOpts))
	return nil
}

// Convert_v1beta2_Filesystem_To_v1alpha4_Filesystem is an autogenerated conversion function.
func Convert_v1beta2_Filesystem_To_v1alpha4_Filesystem(in *v1beta2.Filesystem, out *Filesystem, s conversion.Scope) error {
	return autoConvert_v1beta2_Filesystem_To_v1alpha4_Filesystem(in, out, s)
}

func autoConvert_v1alpha4_HostPathMount_To_v1beta2_HostPathMount(in *HostPathMount, out *v1beta2.HostPathMount, s conversion.Scope) error {
	out.Name = in.Name
	out.HostPath = in.HostPath
	out.MountPath = in.MountPath
	if err := v1.Convert_bool_To_Pointer_bool(&in.ReadOnly, &out.ReadOnly, s); err != nil {
		return err
	}
	out.PathType = corev1.HostPathType(in.PathType)
	return nil
}

// Convert_v1alpha4_HostPathMount_To_v1beta2_HostPathMount is an autogenerated conversion function.
func Convert_v1alpha4_HostPathMount_To_v1beta2_HostPathMount(in *HostPathMount, out *v1beta2.HostPathMount, s conversion.Scope) error {
	return autoConvert_v1alpha4_HostPathMount_To_v1beta2_HostPathMount(in, out, s)
}

func autoConvert_v1beta2_HostPathMount_To_v1alpha4_HostPathMount(in *v1beta2.HostPathMount, out *HostPathMount, s conversion.Scope) error {
	out.Name = in.Name
	out.HostPath = in.HostPath
	out.MountPath = in.MountPath
	if err := v1.Convert_Pointer_bool_To_bool(&in.ReadOnly, &out.ReadOnly, s); err != nil {
		return err
	}
	out.PathType = corev1.HostPathType(in.PathType)
	return nil
}

// Convert_v1beta2_HostPathMount_To_v1alpha4_HostPathMount is an autogenerated conversion function.
func Convert_v1beta2_HostPathMount_To_v1alpha4_HostPathMount(in *v1beta2.HostPathMount, out *HostPathMount, s conversion.Scope) error {
	return autoConvert_v1beta2_HostPathMount_To_v1alpha4_HostPathMount(in, out, s)
}

func autoConvert_v1alpha4_InitConfiguration_To_v1beta2_InitConfiguration(in *InitConfiguration, out *v1beta2.InitConfiguration, s conversion.Scope) error {
	// WARNING: in.TypeMeta requires manual conversion: does not exist in peer-type
	if in.BootstrapTokens != nil {
		in, out := &in.BootstrapTokens, &out.BootstrapTokens
		*out = make([]v1beta2.BootstrapToken, len(*in))
		for i := range *in {
			if err := Convert_v1alpha4_BootstrapToken_To_v1beta2_BootstrapToken(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.BootstrapTokens = nil
	}
	if err := Convert_v1alpha4_NodeRegistrationOptions_To_v1beta2_NodeRegistrationOptions(&in.NodeRegistration, &out.NodeRegistration, s); err != nil {
		return err
	}
	if err := Convert_v1alpha4_APIEndpoint_To_v1beta2_APIEndpoint(&in.LocalAPIEndpoint, &out.LocalAPIEndpoint, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta2_InitConfiguration_To_v1alpha4_InitConfiguration(in *v1beta2.InitConfiguration, out *InitConfiguration, s conversion.Scope) error {
	if in.BootstrapTokens != nil {
		in, out := &in.BootstrapTokens, &out.BootstrapTokens
		*out = make([]BootstrapToken, len(*in))
		for i := range *in {
			if err := Convert_v1beta2_BootstrapToken_To_v1alpha4_BootstrapToken(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.BootstrapTokens = nil
	}
	if err := Convert_v1beta2_NodeRegistrationOptions_To_v1alpha4_NodeRegistrationOptions(&in.NodeRegistration, &out.NodeRegistration, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_APIEndpoint_To_v1alpha4_APIEndpoint(&in.LocalAPIEndpoint, &out.LocalAPIEndpoint, s); err != nil {
		return err
	}
	// WARNING: in.SkipPhases requires manual conversion: does not exist in peer-type
	// WARNING: in.Patches requires manual conversion: does not exist in peer-type
	// WARNING: in.Timeouts requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha4_JoinConfiguration_To_v1beta2_JoinConfiguration(in *JoinConfiguration, out *v1beta2.JoinConfiguration, s conversion.Scope) error {
	// WARNING: in.TypeMeta requires manual conversion: does not exist in peer-type
	if err := Convert_v1alpha4_NodeRegistrationOptions_To_v1beta2_NodeRegistrationOptions(&in.NodeRegistration, &out.NodeRegistration, s); err != nil {
		return err
	}
	out.CACertPath = in.CACertPath
	if err := Convert_v1alpha4_Discovery_To_v1beta2_Discovery(&in.Discovery, &out.Discovery, s); err != nil {
		return err
	}
	out.ControlPlane = (*v1beta2.JoinControlPlane)(unsafe.Pointer(in.ControlPlane))
	return nil
}

func autoConvert_v1beta2_JoinConfiguration_To_v1alpha4_JoinConfiguration(in *v1beta2.JoinConfiguration, out *JoinConfiguration, s conversion.Scope) error {
	if err := Convert_v1beta2_NodeRegistrationOptions_To_v1alpha4_NodeRegistrationOptions(&in.NodeRegistration, &out.NodeRegistration, s); err != nil {
		return err
	}
	out.CACertPath = in.CACertPath
	if err := Convert_v1beta2_Discovery_To_v1alpha4_Discovery(&in.Discovery, &out.Discovery, s); err != nil {
		return err
	}
	out.ControlPlane = (*JoinControlPlane)(unsafe.Pointer(in.ControlPlane))
	// WARNING: in.SkipPhases requires manual conversion: does not exist in peer-type
	// WARNING: in.Patches requires manual conversion: does not exist in peer-type
	// WARNING: in.Timeouts requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha4_JoinControlPlane_To_v1beta2_JoinControlPlane(in *JoinControlPlane, out *v1beta2.JoinControlPlane, s conversion.Scope) error {
	if err := Convert_v1alpha4_APIEndpoint_To_v1beta2_APIEndpoint(&in.LocalAPIEndpoint, &out.LocalAPIEndpoint, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha4_JoinControlPlane_To_v1beta2_JoinControlPlane is an autogenerated conversion function.
func Convert_v1alpha4_JoinControlPlane_To_v1beta2_JoinControlPlane(in *JoinControlPlane, out *v1beta2.JoinControlPlane, s conversion.Scope) error {
	return autoConvert_v1alpha4_JoinControlPlane_To_v1beta2_JoinControlPlane(in, out, s)
}

func autoConvert_v1beta2_JoinControlPlane_To_v1alpha4_JoinControlPlane(in *v1beta2.JoinControlPlane, out *JoinControlPlane, s conversion.Scope) error {
	if err := Convert_v1beta2_APIEndpoint_To_v1alpha4_APIEndpoint(&in.LocalAPIEndpoint, &out.LocalAPIEndpoint, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta2_JoinControlPlane_To_v1alpha4_JoinControlPlane is an autogenerated conversion function.
func Convert_v1beta2_JoinControlPlane_To_v1alpha4_JoinControlPlane(in *v1beta2.JoinControlPlane, out *JoinControlPlane, s conversion.Scope) error {
	return autoConvert_v1beta2_JoinControlPlane_To_v1alpha4_JoinControlPlane(in, out, s)
}

func autoConvert_v1alpha4_KubeadmConfig_To_v1beta2_KubeadmConfig(in *KubeadmConfig, out *v1beta2.KubeadmConfig, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha4_KubeadmConfigSpec_To_v1beta2_KubeadmConfigSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha4_KubeadmConfigStatus_To_v1beta2_KubeadmConfigStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha4_KubeadmConfig_To_v1beta2_KubeadmConfig is an autogenerated conversion function.
func Convert_v1alpha4_KubeadmConfig_To_v1beta2_KubeadmConfig(in *KubeadmConfig, out *v1beta2.KubeadmConfig, s conversion.Scope) error {
	return autoConvert_v1alpha4_KubeadmConfig_To_v1beta2_KubeadmConfig(in, out, s)
}

func autoConvert_v1beta2_KubeadmConfig_To_v1alpha4_KubeadmConfig(in *v1beta2.KubeadmConfig, out *KubeadmConfig, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta2_KubeadmConfigSpec_To_v1alpha4_KubeadmConfigSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_KubeadmConfigStatus_To_v1alpha4_KubeadmConfigStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta2_KubeadmConfig_To_v1alpha4_KubeadmConfig is an autogenerated conversion function.
func Convert_v1beta2_KubeadmConfig_To_v1alpha4_KubeadmConfig(in *v1beta2.KubeadmConfig, out *KubeadmConfig, s conversion.Scope) error {
	return autoConvert_v1beta2_KubeadmConfig_To_v1alpha4_KubeadmConfig(in, out, s)
}

func autoConvert_v1alpha4_KubeadmConfigList_To_v1beta2_KubeadmConfigList(in *KubeadmConfigList, out *v1beta2.KubeadmConfigList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1beta2.KubeadmConfig, len(*in))
		for i := range *in {
			if err := Convert_v1alpha4_KubeadmConfig_To_v1beta2_KubeadmConfig(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha4_KubeadmConfigList_To_v1beta2_KubeadmConfigList is an autogenerated conversion function.
func Convert_v1alpha4_KubeadmConfigList_To_v1beta2_KubeadmConfigList(in *KubeadmConfigList, out *v1beta2.KubeadmConfigList, s conversion.Scope) error {
	return autoConvert_v1alpha4_KubeadmConfigList_To_v1beta2_KubeadmConfigList(in, out, s)
}

func autoConvert_v1beta2_KubeadmConfigList_To_v1alpha4_KubeadmConfigList(in *v1beta2.KubeadmConfigList, out *KubeadmConfigList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KubeadmConfig, len(*in))
		for i := range *in {
			if err := Convert_v1beta2_KubeadmConfig_To_v1alpha4_KubeadmConfig(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta2_KubeadmConfigList_To_v1alpha4_KubeadmConfigList is an autogenerated conversion function.
func Convert_v1beta2_KubeadmConfigList_To_v1alpha4_KubeadmConfigList(in *v1beta2.KubeadmConfigList, out *KubeadmConfigList, s conversion.Scope) error {
	return autoConvert_v1beta2_KubeadmConfigList_To_v1alpha4_KubeadmConfigList(in, out, s)
}

func autoConvert_v1alpha4_KubeadmConfigSpec_To_v1beta2_KubeadmConfigSpec(in *KubeadmConfigSpec, out *v1beta2.KubeadmConfigSpec, s conversion.Scope) error {
	// WARNING: in.ClusterConfiguration requires manual conversion: inconvertible types (*sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.ClusterConfiguration vs sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.ClusterConfiguration)
	// WARNING: in.InitConfiguration requires manual conversion: inconvertible types (*sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.InitConfiguration vs sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.InitConfiguration)
	// WARNING: in.JoinConfiguration requires manual conversion: inconvertible types (*sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.JoinConfiguration vs sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.JoinConfiguration)
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = make([]v1beta2.File, len(*in))
		for i := range *in {
			if err := Convert_v1alpha4_File_To_v1beta2_File(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Files = nil
	}
	// WARNING: in.DiskSetup requires manual conversion: inconvertible types (*sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.DiskSetup vs sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.DiskSetup)
	out.Mounts = *(*[]v1beta2.MountPoints)(unsafe.Pointer(&in.Mounts))
	out.PreKubeadmCommands = *(*[]string)(unsafe.Pointer(&in.PreKubeadmCommands))
	out.PostKubeadmCommands = *(*[]string)(unsafe.Pointer(&in.PostKubeadmCommands))
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]v1beta2.User, len(*in))
		for i := range *in {
			if err := Convert_v1alpha4_User_To_v1beta2_User(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Users = nil
	}
	// WARNING: in.NTP requires manual conversion: inconvertible types (*sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.NTP vs sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.NTP)
	out.Format = v1beta2.Format(in.Format)
	out.Verbosity = (*int32)(unsafe.Pointer(in.Verbosity))
	// WARNING: in.UseExperimentalRetryJoin requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta2_KubeadmConfigSpec_To_v1alpha4_KubeadmConfigSpec(in *v1beta2.KubeadmConfigSpec, out *KubeadmConfigSpec, s conversion.Scope) error {
	// WARNING: in.ClusterConfiguration requires manual conversion: inconvertible types (sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.ClusterConfiguration vs *sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.ClusterConfiguration)
	// WARNING: in.InitConfiguration requires manual conversion: inconvertible types (sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.InitConfiguration vs *sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.InitConfiguration)
	// WARNING: in.JoinConfiguration requires manual conversion: inconvertible types (sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.JoinConfiguration vs *sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.JoinConfiguration)
	if in.Files != nil {
		in, out := &in.Files, &out.Files
		*out = make([]File, len(*in))
		for i := range *in {
			if err := Convert_v1beta2_File_To_v1alpha4_File(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Files = nil
	}
	// WARNING: in.DiskSetup requires manual conversion: inconvertible types (sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.DiskSetup vs *sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.DiskSetup)
	out.Mounts = *(*[]MountPoints)(unsafe.Pointer(&in.Mounts))
	// WARNING: in.BootCommands requires manual conversion: does not exist in peer-type
	out.PreKubeadmCommands = *(*[]string)(unsafe.Pointer(&in.PreKubeadmCommands))
	out.PostKubeadmCommands = *(*[]string)(unsafe.Pointer(&in.PostKubeadmCommands))
	if in.Users != nil {
		in, out := &in.Users, &out.Users
		*out = make([]User, len(*in))
		for i := range *in {
			if err := Convert_v1beta2_User_To_v1alpha4_User(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Users = nil
	}
	// WARNING: in.NTP requires manual conversion: inconvertible types (sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.NTP vs *sigs.k8s.io/cluster-api/internal/api/bootstrap/kubeadm/v1alpha4.NTP)
	out.Format = Format(in.Format)
	out.Verbosity = (*int32)(unsafe.Pointer(in.Verbosity))
	// WARNING: in.Ignition requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha4_KubeadmConfigStatus_To_v1beta2_KubeadmConfigStatus(in *KubeadmConfigStatus, out *v1beta2.KubeadmConfigStatus, s conversion.Scope) error {
	// WARNING: in.Ready requires manual conversion: does not exist in peer-type
	if err := v1.Convert_Pointer_string_To_string(&in.DataSecretName, &out.DataSecretName, s); err != nil {
		return err
	}
	// WARNING: in.FailureReason requires manual conversion: does not exist in peer-type
	// WARNING: in.FailureMessage requires manual conversion: does not exist in peer-type
	out.ObservedGeneration = in.ObservedGeneration
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			if err := Convert_v1alpha4_Condition_To_v1_Condition(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Conditions = nil
	}
	return nil
}

func autoConvert_v1beta2_KubeadmConfigStatus_To_v1alpha4_KubeadmConfigStatus(in *v1beta2.KubeadmConfigStatus, out *KubeadmConfigStatus, s conversion.Scope) error {
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(corev1alpha4.Conditions, len(*in))
		for i := range *in {
			if err := Convert_v1_Condition_To_v1alpha4_Condition(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Conditions = nil
	}
	// WARNING: in.Initialization requires manual conversion: does not exist in peer-type
	if err := v1.Convert_string_To_Pointer_string(&in.DataSecretName, &out.DataSecretName, s); err != nil {
		return err
	}
	out.ObservedGeneration = in.ObservedGeneration
	// WARNING: in.Deprecated requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha4_KubeadmConfigTemplate_To_v1beta2_KubeadmConfigTemplate(in *KubeadmConfigTemplate, out *v1beta2.KubeadmConfigTemplate, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha4_KubeadmConfigTemplateSpec_To_v1beta2_KubeadmConfigTemplateSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha4_KubeadmConfigTemplate_To_v1beta2_KubeadmConfigTemplate is an autogenerated conversion function.
func Convert_v1alpha4_KubeadmConfigTemplate_To_v1beta2_KubeadmConfigTemplate(in *KubeadmConfigTemplate, out *v1beta2.KubeadmConfigTemplate, s conversion.Scope) error {
	return autoConvert_v1alpha4_KubeadmConfigTemplate_To_v1beta2_KubeadmConfigTemplate(in, out, s)
}

func autoConvert_v1beta2_KubeadmConfigTemplate_To_v1alpha4_KubeadmConfigTemplate(in *v1beta2.KubeadmConfigTemplate, out *KubeadmConfigTemplate, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta2_KubeadmConfigTemplateSpec_To_v1alpha4_KubeadmConfigTemplateSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta2_KubeadmConfigTemplate_To_v1alpha4_KubeadmConfigTemplate is an autogenerated conversion function.
func Convert_v1beta2_KubeadmConfigTemplate_To_v1alpha4_KubeadmConfigTemplate(in *v1beta2.KubeadmConfigTemplate, out *KubeadmConfigTemplate, s conversion.Scope) error {
	return autoConvert_v1beta2_KubeadmConfigTemplate_To_v1alpha4_KubeadmConfigTemplate(in, out, s)
}

func autoConvert_v1alpha4_KubeadmConfigTemplateList_To_v1beta2_KubeadmConfigTemplateList(in *KubeadmConfigTemplateList, out *v1beta2.KubeadmConfigTemplateList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1beta2.KubeadmConfigTemplate, len(*in))
		for i := range *in {
			if err := Convert_v1alpha4_KubeadmConfigTemplate_To_v1beta2_KubeadmConfigTemplate(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha4_KubeadmConfigTemplateList_To_v1beta2_KubeadmConfigTemplateList is an autogenerated conversion function.
func Convert_v1alpha4_KubeadmConfigTemplateList_To_v1beta2_KubeadmConfigTemplateList(in *KubeadmConfigTemplateList, out *v1beta2.KubeadmConfigTemplateList, s conversion.Scope) error {
	return autoConvert_v1alpha4_KubeadmConfigTemplateList_To_v1beta2_KubeadmConfigTemplateList(in, out, s)
}

func autoConvert_v1beta2_KubeadmConfigTemplateList_To_v1alpha4_KubeadmConfigTemplateList(in *v1beta2.KubeadmConfigTemplateList, out *KubeadmConfigTemplateList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]KubeadmConfigTemplate, len(*in))
		for i := range *in {
			if err := Convert_v1beta2_KubeadmConfigTemplate_To_v1alpha4_KubeadmConfigTemplate(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta2_KubeadmConfigTemplateList_To_v1alpha4_KubeadmConfigTemplateList is an autogenerated conversion function.
func Convert_v1beta2_KubeadmConfigTemplateList_To_v1alpha4_KubeadmConfigTemplateList(in *v1beta2.KubeadmConfigTemplateList, out *KubeadmConfigTemplateList, s conversion.Scope) error {
	return autoConvert_v1beta2_KubeadmConfigTemplateList_To_v1alpha4_KubeadmConfigTemplateList(in, out, s)
}

func autoConvert_v1alpha4_KubeadmConfigTemplateResource_To_v1beta2_KubeadmConfigTemplateResource(in *KubeadmConfigTemplateResource, out *v1beta2.KubeadmConfigTemplateResource, s conversion.Scope) error {
	if err := Convert_v1alpha4_KubeadmConfigSpec_To_v1beta2_KubeadmConfigSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha4_KubeadmConfigTemplateResource_To_v1beta2_KubeadmConfigTemplateResource is an autogenerated conversion function.
func Convert_v1alpha4_KubeadmConfigTemplateResource_To_v1beta2_KubeadmConfigTemplateResource(in *KubeadmConfigTemplateResource, out *v1beta2.KubeadmConfigTemplateResource, s conversion.Scope) error {
	return autoConvert_v1alpha4_KubeadmConfigTemplateResource_To_v1beta2_KubeadmConfigTemplateResource(in, out, s)
}

func autoConvert_v1beta2_KubeadmConfigTemplateResource_To_v1alpha4_KubeadmConfigTemplateResource(in *v1beta2.KubeadmConfigTemplateResource, out *KubeadmConfigTemplateResource, s conversion.Scope) error {
	// WARNING: in.ObjectMeta requires manual conversion: does not exist in peer-type
	if err := Convert_v1beta2_KubeadmConfigSpec_To_v1alpha4_KubeadmConfigSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha4_KubeadmConfigTemplateSpec_To_v1beta2_KubeadmConfigTemplateSpec(in *KubeadmConfigTemplateSpec, out *v1beta2.KubeadmConfigTemplateSpec, s conversion.Scope) error {
	if err := Convert_v1alpha4_KubeadmConfigTemplateResource_To_v1beta2_KubeadmConfigTemplateResource(&in.Template, &out.Template, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha4_KubeadmConfigTemplateSpec_To_v1beta2_KubeadmConfigTemplateSpec is an autogenerated conversion function.
func Convert_v1alpha4_KubeadmConfigTemplateSpec_To_v1beta2_KubeadmConfigTemplateSpec(in *KubeadmConfigTemplateSpec, out *v1beta2.KubeadmConfigTemplateSpec, s conversion.Scope) error {
	return autoConvert_v1alpha4_KubeadmConfigTemplateSpec_To_v1beta2_KubeadmConfigTemplateSpec(in, out, s)
}

func autoConvert_v1beta2_KubeadmConfigTemplateSpec_To_v1alpha4_KubeadmConfigTemplateSpec(in *v1beta2.KubeadmConfigTemplateSpec, out *KubeadmConfigTemplateSpec, s conversion.Scope) error {
	if err := Convert_v1beta2_KubeadmConfigTemplateResource_To_v1alpha4_KubeadmConfigTemplateResource(&in.Template, &out.Template, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta2_KubeadmConfigTemplateSpec_To_v1alpha4_KubeadmConfigTemplateSpec is an autogenerated conversion function.
func Convert_v1beta2_KubeadmConfigTemplateSpec_To_v1alpha4_KubeadmConfigTemplateSpec(in *v1beta2.KubeadmConfigTemplateSpec, out *KubeadmConfigTemplateSpec, s conversion.Scope) error {
	return autoConvert_v1beta2_KubeadmConfigTemplateSpec_To_v1alpha4_KubeadmConfigTemplateSpec(in, out, s)
}

func autoConvert_v1alpha4_LocalEtcd_To_v1beta2_LocalEtcd(in *LocalEtcd, out *v1beta2.LocalEtcd, s conversion.Scope) error {
	// WARNING: in.ImageMeta requires manual conversion: does not exist in peer-type
	out.DataDir = in.DataDir
	// WARNING: in.ExtraArgs requires manual conversion: inconvertible types (map[string]string vs []sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.Arg)
	out.ServerCertSANs = *(*[]string)(unsafe.Pointer(&in.ServerCertSANs))
	out.PeerCertSANs = *(*[]string)(unsafe.Pointer(&in.PeerCertSANs))
	return nil
}

func autoConvert_v1beta2_LocalEtcd_To_v1alpha4_LocalEtcd(in *v1beta2.LocalEtcd, out *LocalEtcd, s conversion.Scope) error {
	// WARNING: in.ImageRepository requires manual conversion: does not exist in peer-type
	// WARNING: in.ImageTag requires manual conversion: does not exist in peer-type
	out.DataDir = in.DataDir
	// WARNING: in.ExtraArgs requires manual conversion: inconvertible types ([]sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.Arg vs map[string]string)
	// WARNING: in.ExtraEnvs requires manual conversion: does not exist in peer-type
	out.ServerCertSANs = *(*[]string)(unsafe.Pointer(&in.ServerCertSANs))
	out.PeerCertSANs = *(*[]string)(unsafe.Pointer(&in.PeerCertSANs))
	return nil
}

func autoConvert_v1alpha4_NTP_To_v1beta2_NTP(in *NTP, out *v1beta2.NTP, s conversion.Scope) error {
	out.Servers = *(*[]string)(unsafe.Pointer(&in.Servers))
	out.Enabled = (*bool)(unsafe.Pointer(in.Enabled))
	return nil
}

// Convert_v1alpha4_NTP_To_v1beta2_NTP is an autogenerated conversion function.
func Convert_v1alpha4_NTP_To_v1beta2_NTP(in *NTP, out *v1beta2.NTP, s conversion.Scope) error {
	return autoConvert_v1alpha4_NTP_To_v1beta2_NTP(in, out, s)
}

func autoConvert_v1beta2_NTP_To_v1alpha4_NTP(in *v1beta2.NTP, out *NTP, s conversion.Scope) error {
	out.Servers = *(*[]string)(unsafe.Pointer(&in.Servers))
	out.Enabled = (*bool)(unsafe.Pointer(in.Enabled))
	return nil
}

// Convert_v1beta2_NTP_To_v1alpha4_NTP is an autogenerated conversion function.
func Convert_v1beta2_NTP_To_v1alpha4_NTP(in *v1beta2.NTP, out *NTP, s conversion.Scope) error {
	return autoConvert_v1beta2_NTP_To_v1alpha4_NTP(in, out, s)
}

func autoConvert_v1alpha4_NodeRegistrationOptions_To_v1beta2_NodeRegistrationOptions(in *NodeRegistrationOptions, out *v1beta2.NodeRegistrationOptions, s conversion.Scope) error {
	out.Name = in.Name
	out.CRISocket = in.CRISocket
	// WARNING: in.Taints requires manual conversion: inconvertible types ([]k8s.io/api/core/v1.Taint vs *[]k8s.io/api/core/v1.Taint)
	// WARNING: in.KubeletExtraArgs requires manual conversion: inconvertible types (map[string]string vs []sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.Arg)
	out.IgnorePreflightErrors = *(*[]string)(unsafe.Pointer(&in.IgnorePreflightErrors))
	return nil
}

func autoConvert_v1beta2_NodeRegistrationOptions_To_v1alpha4_NodeRegistrationOptions(in *v1beta2.NodeRegistrationOptions, out *NodeRegistrationOptions, s conversion.Scope) error {
	out.Name = in.Name
	out.CRISocket = in.CRISocket
	// WARNING: in.Taints requires manual conversion: inconvertible types (*[]k8s.io/api/core/v1.Taint vs []k8s.io/api/core/v1.Taint)
	// WARNING: in.KubeletExtraArgs requires manual conversion: inconvertible types ([]sigs.k8s.io/cluster-api/api/bootstrap/kubeadm/v1beta2.Arg vs map[string]string)
	out.IgnorePreflightErrors = *(*[]string)(unsafe.Pointer(&in.IgnorePreflightErrors))
	// WARNING: in.ImagePullPolicy requires manual conversion: does not exist in peer-type
	// WARNING: in.ImagePullSerial requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha4_Partition_To_v1beta2_Partition(in *Partition, out *v1beta2.Partition, s conversion.Scope) error {
	out.Device = in.Device
	out.Layout = in.Layout
	out.Overwrite = (*bool)(unsafe.Pointer(in.Overwrite))
	if err := v1.Convert_Pointer_string_To_string(&in.TableType, &out.TableType, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha4_Partition_To_v1beta2_Partition is an autogenerated conversion function.
func Convert_v1alpha4_Partition_To_v1beta2_Partition(in *Partition, out *v1beta2.Partition, s conversion.Scope) error {
	return autoConvert_v1alpha4_Partition_To_v1beta2_Partition(in, out, s)
}

func autoConvert_v1beta2_Partition_To_v1alpha4_Partition(in *v1beta2.Partition, out *Partition, s conversion.Scope) error {
	out.Device = in.Device
	out.Layout = in.Layout
	out.Overwrite = (*bool)(unsafe.Pointer(in.Overwrite))
	if err := v1.Convert_string_To_Pointer_string(&in.TableType, &out.TableType, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta2_Partition_To_v1alpha4_Partition is an autogenerated conversion function.
func Convert_v1beta2_Partition_To_v1alpha4_Partition(in *v1beta2.Partition, out *Partition, s conversion.Scope) error {
	return autoConvert_v1beta2_Partition_To_v1alpha4_Partition(in, out, s)
}

func autoConvert_v1alpha4_SecretFileSource_To_v1beta2_SecretFileSource(in *SecretFileSource, out *v1beta2.SecretFileSource, s conversion.Scope) error {
	out.Name = in.Name
	out.Key = in.Key
	return nil
}

// Convert_v1alpha4_SecretFileSource_To_v1beta2_SecretFileSource is an autogenerated conversion function.
func Convert_v1alpha4_SecretFileSource_To_v1beta2_SecretFileSource(in *SecretFileSource, out *v1beta2.SecretFileSource, s conversion.Scope) error {
	return autoConvert_v1alpha4_SecretFileSource_To_v1beta2_SecretFileSource(in, out, s)
}

func autoConvert_v1beta2_SecretFileSource_To_v1alpha4_SecretFileSource(in *v1beta2.SecretFileSource, out *SecretFileSource, s conversion.Scope) error {
	out.Name = in.Name
	out.Key = in.Key
	return nil
}

// Convert_v1beta2_SecretFileSource_To_v1alpha4_SecretFileSource is an autogenerated conversion function.
func Convert_v1beta2_SecretFileSource_To_v1alpha4_SecretFileSource(in *v1beta2.SecretFileSource, out *SecretFileSource, s conversion.Scope) error {
	return autoConvert_v1beta2_SecretFileSource_To_v1alpha4_SecretFileSource(in, out, s)
}

func autoConvert_v1alpha4_User_To_v1beta2_User(in *User, out *v1beta2.User, s conversion.Scope) error {
	out.Name = in.Name
	if err := v1.Convert_Pointer_string_To_string(&in.Gecos, &out.Gecos, s); err != nil {
		return err
	}
	if err := v1.Convert_Pointer_string_To_string(&in.Groups, &out.Groups, s); err != nil {
		return err
	}
	if err := v1.Convert_Pointer_string_To_string(&in.HomeDir, &out.HomeDir, s); err != nil {
		return err
	}
	out.Inactive = (*bool)(unsafe.Pointer(in.Inactive))
	if err := v1.Convert_Pointer_string_To_string(&in.Shell, &out.Shell, s); err != nil {
		return err
	}
	if err := v1.Convert_Pointer_string_To_string(&in.Passwd, &out.Passwd, s); err != nil {
		return err
	}
	if err := v1.Convert_Pointer_string_To_string(&in.PrimaryGroup, &out.PrimaryGroup, s); err != nil {
		return err
	}
	out.LockPassword = (*bool)(unsafe.Pointer(in.LockPassword))
	if err := v1.Convert_Pointer_string_To_string(&in.Sudo, &out.Sudo, s); err != nil {
		return err
	}
	out.SSHAuthorizedKeys = *(*[]string)(unsafe.Pointer(&in.SSHAuthorizedKeys))
	return nil
}

// Convert_v1alpha4_User_To_v1beta2_User is an autogenerated conversion function.
func Convert_v1alpha4_User_To_v1beta2_User(in *User, out *v1beta2.User, s conversion.Scope) error {
	return autoConvert_v1alpha4_User_To_v1beta2_User(in, out, s)
}

func autoConvert_v1beta2_User_To_v1alpha4_User(in *v1beta2.User, out *User, s conversion.Scope) error {
	out.Name = in.Name
	if err := v1.Convert_string_To_Pointer_string(&in.Gecos, &out.Gecos, s); err != nil {
		return err
	}
	if err := v1.Convert_string_To_Pointer_string(&in.Groups, &out.Groups, s); err != nil {
		return err
	}
	if err := v1.Convert_string_To_Pointer_string(&in.HomeDir, &out.HomeDir, s); err != nil {
		return err
	}
	out.Inactive = (*bool)(unsafe.Pointer(in.Inactive))
	if err := v1.Convert_string_To_Pointer_string(&in.Shell, &out.Shell, s); err != nil {
		return err
	}
	if err := v1.Convert_string_To_Pointer_string(&in.Passwd, &out.Passwd, s); err != nil {
		return err
	}
	// WARNING: in.PasswdFrom requires manual conversion: does not exist in peer-type
	if err := v1.Convert_string_To_Pointer_string(&in.PrimaryGroup, &out.PrimaryGroup, s); err != nil {
		return err
	}
	out.LockPassword = (*bool)(unsafe.Pointer(in.LockPassword))
	if err := v1.Convert_string_To_Pointer_string(&in.Sudo, &out.Sudo, s); err != nil {
		return err
	}
	out.SSHAuthorizedKeys = *(*[]string)(unsafe.Pointer(&in.SSHAuthorizedKeys))
	return nil
}
