---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: "my-second-cluster"
  namespace: default
  labels:
    cni: kindnet
spec:
  clusterNetwork:
    services:
      cidrBlocks: ["10.128.0.0/12"]
    pods:
      cidrBlocks: ["192.168.0.0/16"]
    serviceDomain: "cluster.local"
  controlPlaneEndpoint:
    host: 172.19.0.4
    port: 6443
  controlPlaneRef:
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    kind: KubeadmControlPlane
    name: my-second-cluster-fwbpf
    namespace: default
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: DockerCluster
    name: my-second-cluster-zrq96
    namespace: default
  topology:
    class: my-cluster-class
    version: v1.21.2
    controlPlane:
      metadata: {}
      replicas: 1
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: DockerCluster
metadata:
  annotations:
    cluster.x-k8s.io/cloned-from-groupkind: DockerClusterTemplate.infrastructure.cluster.x-k8s.io
    cluster.x-k8s.io/cloned-from-name: my-cluster
  finalizers:
    - dockercluster.infrastructure.cluster.x-k8s.io
  labels:
    cluster.x-k8s.io/cluster-name: my-cluster
    topology.cluster.x-k8s.io/owned: ""
  name: my-second-cluster-zrq96
  namespace: default
spec:
  controlPlaneEndpoint:
    host: 172.19.0.4
    port: 6443
  loadBalancer: {}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  annotations:
    cluster.x-k8s.io/cloned-from-groupkind: KubeadmControlPlaneTemplate.controlplane.cluster.x-k8s.io
    cluster.x-k8s.io/cloned-from-name: control-plane
  finalizers:
    - kubeadm.controlplane.cluster.x-k8s.io
  labels:
    cluster.x-k8s.io/cluster-name: my-cluster
    topology.cluster.x-k8s.io/owned: ""
  name: my-second-cluster-fwbpf
  namespace: default
  ownerReferences:
    - apiVersion: cluster.x-k8s.io/v1beta1
      blockOwnerDeletion: true
      controller: true
      kind: Cluster
      name: my-second-cluster
      uid: 3ba5ce4f-d279-4edb-8ade-62a2381d11a9
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        certSANs:
          - localhost
          - 127.0.0.1
      dns: {}
      etcd: {}
      networking: {}
      scheduler: {}
    initConfiguration:
      localAPIEndpoint: {}
      nodeRegistration: {} # node registration parameters are automatically injected by CAPD according to the kindest/node image in use.
    joinConfiguration:
      discovery: {}
      nodeRegistration: {} # node registration parameters are automatically injected by CAPD according to the kindest/node image in use.
  machineTemplate:
    infrastructureRef:
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      kind: DockerMachineTemplate
      name: my-cluster-control-plane-44cd4
      namespace: default
    metadata:
      labels:
        cluster.x-k8s.io/cluster-name: my-cluster
        topology.cluster.x-k8s.io/owned: ""
    nodeDrainTimeout: 1s
  replicas: 1
  rolloutStrategy:
    rollingUpdate:
      maxSurge: 1
    type: RollingUpdate
  version: v1.21.2
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: DockerMachineTemplate
metadata:
  annotations:
    cluster.x-k8s.io/cloned-from-groupkind: DockerMachineTemplate.infrastructure.cluster.x-k8s.io
    cluster.x-k8s.io/cloned-from-name: control-plane
  labels:
    cluster.x-k8s.io/cluster-name: my-cluster
    topology.cluster.x-k8s.io/owned: ""
  name: my-second-cluster-control-plane-44cd4
  namespace: default
  ownerReferences:
    - apiVersion: cluster.x-k8s.io/v1beta1
      kind: Cluster
      name: my-second-cluster
      uid: 3ba5ce4f-d279-4edb-8ade-62a2381d11a9
spec:
  template:
    spec:
      extraMounts:
        - containerPath: /var/run/docker.sock
          hostPath: /var/run/docker.sock
