---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: clusters.cluster.x-k8s.io
spec:
  group: cluster.x-k8s.io
  names:
    categories:
    - cluster-api
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    shortNames:
    - cl
    singular: cluster
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: Cluster status such as Pending/Provisioning/Provisioned/Deleting/Failed
      jsonPath: .status.phase
      name: Phase
      type: string
    deprecated: true
    name: v1alpha3
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec is the desired state of Cluster.
            properties:
              clusterNetwork:
                description: clusterNetwork is the cluster network configuration.
                properties:
                  apiServerPort:
                    description: |-
                      apiServerPort specifies the port the API Server should bind to.
                      Defaults to 6443.
                    format: int32
                    type: integer
                  pods:
                    description: pods is the network ranges from which Pod networks
                      are allocated.
                    properties:
                      cidrBlocks:
                        description: cidrBlocks is a list of CIDR blocks.
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                  serviceDomain:
                    description: serviceDomain is the domain name for services.
                    type: string
                  services:
                    description: services is the network ranges from which service
                      VIPs are allocated.
                    properties:
                      cidrBlocks:
                        description: cidrBlocks is a list of CIDR blocks.
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                type: object
              controlPlaneEndpoint:
                description: controlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: host is the hostname on which the API server is serving.
                    type: string
                  port:
                    description: port is the port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              controlPlaneRef:
                description: |-
                  controlPlaneRef is an optional reference to a provider-specific resource that holds
                  the details for provisioning the Control Plane for a Cluster.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              infrastructureRef:
                description: |-
                  infrastructureRef is a reference to a provider-specific resource that holds the details
                  for provisioning infrastructure for a cluster in said provider.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              paused:
                description: paused can be used to prevent controllers from processing
                  the Cluster and all its associated objects.
                type: boolean
            type: object
          status:
            description: status is the observed state of Cluster.
            properties:
              conditions:
                description: conditions defines current service state of the cluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              controlPlaneInitialized:
                description: controlPlaneInitialized defines if the control plane
                  has been initialized.
                type: boolean
              controlPlaneReady:
                description: controlPlaneReady defines if the control plane is ready.
                type: boolean
              failureDomains:
                additionalProperties:
                  description: |-
                    FailureDomainSpec is the Schema for Cluster API failure domains.
                    It allows controllers to understand how many failure domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: controlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: failureDomains is a slice of failure domain objects synced
                  from the infrastructure provider.
                type: object
              failureMessage:
                description: |-
                  failureMessage indicates that there is a fatal problem reconciling the
                  state, and will be set to a descriptive error message.
                type: string
              failureReason:
                description: |-
                  failureReason indicates that there is a fatal problem reconciling the
                  state, and will be set to a token value suitable for
                  programmatic interpretation.
                type: string
              infrastructureReady:
                description: infrastructureReady is the state of the infrastructure
                  provider.
                type: boolean
              observedGeneration:
                description: observedGeneration is the latest generation observed
                  by the controller.
                format: int64
                type: integer
              phase:
                description: |-
                  phase represents the current phase of cluster actuation.
                  E.g. Pending, Running, Terminating, Failed etc.
                type: string
            type: object
        type: object
    served: false
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: Time duration since creation of Cluster
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Cluster status such as Pending/Provisioning/Provisioned/Deleting/Failed
      jsonPath: .status.phase
      name: Phase
      type: string
    deprecated: true
    name: v1alpha4
    schema:
      openAPIV3Schema:
        description: |-
          Cluster is the Schema for the clusters API.

          Deprecated: This type will be removed in one of the next releases.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec is the desired state of Cluster.
            properties:
              clusterNetwork:
                description: clusterNetwork is the cluster network configuration.
                properties:
                  apiServerPort:
                    description: |-
                      apiServerPort specifies the port the API Server should bind to.
                      Defaults to 6443.
                    format: int32
                    type: integer
                  pods:
                    description: pods is the network ranges from which Pod networks
                      are allocated.
                    properties:
                      cidrBlocks:
                        description: cidrBlocks is a list of CIDR blocks.
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                  serviceDomain:
                    description: serviceDomain is the domain name for services.
                    type: string
                  services:
                    description: services is the network ranges from which service
                      VIPs are allocated.
                    properties:
                      cidrBlocks:
                        description: cidrBlocks is a list of CIDR blocks.
                        items:
                          type: string
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                type: object
              controlPlaneEndpoint:
                description: controlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: host is the hostname on which the API server is serving.
                    type: string
                  port:
                    description: port is the port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              controlPlaneRef:
                description: |-
                  controlPlaneRef is an optional reference to a provider-specific resource that holds
                  the details for provisioning the Control Plane for a Cluster.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              infrastructureRef:
                description: |-
                  infrastructureRef is a reference to a provider-specific resource that holds the details
                  for provisioning infrastructure for a cluster in said provider.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              paused:
                description: paused can be used to prevent controllers from processing
                  the Cluster and all its associated objects.
                type: boolean
              topology:
                description: |-
                  topology encapsulates the topology for the cluster.
                  NOTE: It is required to enable the ClusterTopology
                  feature gate flag to activate managed topologies support;
                  this feature is highly experimental, and parts of it might still be not implemented.
                properties:
                  class:
                    description: class is the name of the ClusterClass object to create
                      the topology.
                    type: string
                  controlPlane:
                    description: controlPlane describes the cluster control plane.
                    properties:
                      metadata:
                        description: |-
                          metadata is the metadata applied to the machines of the ControlPlane.
                          At runtime this metadata is merged with the corresponding metadata from the ClusterClass.

                          This field is supported if and only if the control plane provider template
                          referenced in the ClusterClass is Machine based.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata. They are not
                              queryable and should be preserved when modifying objects.
                              More info: http://kubernetes.io/docs/user-guide/annotations
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              labels is a map of string keys and values that can be used to organize and categorize
                              (scope and select) objects. May match selectors of replication controllers
                              and services.
                              More info: http://kubernetes.io/docs/user-guide/labels
                            type: object
                        type: object
                      replicas:
                        description: |-
                          replicas is the number of control plane nodes.
                          If the value is nil, the ControlPlane object is created without the number of Replicas
                          and it's assumed that the control plane controller does not implement support for this field.
                          When specified against a control plane provider that lacks support for this field, this value will be ignored.
                        format: int32
                        type: integer
                    type: object
                  rolloutAfter:
                    description: |-
                      rolloutAfter performs a rollout of the entire cluster one component at a time,
                      control plane first and then machine deployments.
                    format: date-time
                    type: string
                  version:
                    description: version is the Kubernetes version of the cluster.
                    type: string
                  workers:
                    description: |-
                      workers encapsulates the different constructs that form the worker nodes
                      for the cluster.
                    properties:
                      machineDeployments:
                        description: machineDeployments is a list of machine deployments
                          in the cluster.
                        items:
                          description: |-
                            MachineDeploymentTopology specifies the different parameters for a set of worker nodes in the topology.
                            This set of nodes is managed by a MachineDeployment object whose lifecycle is managed by the Cluster controller.
                          properties:
                            class:
                              description: |-
                                class is the name of the MachineDeploymentClass used to create the set of worker nodes.
                                This should match one of the deployment classes defined in the ClusterClass object
                                mentioned in the `Cluster.Spec.Class` field.
                              type: string
                            metadata:
                              description: |-
                                metadata is the metadata applied to the machines of the MachineDeployment.
                                At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    annotations is an unstructured key value map stored with a resource that may be
                                    set by external tools to store and retrieve arbitrary metadata. They are not
                                    queryable and should be preserved when modifying objects.
                                    More info: http://kubernetes.io/docs/user-guide/annotations
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    labels is a map of string keys and values that can be used to organize and categorize
                                    (scope and select) objects. May match selectors of replication controllers
                                    and services.
                                    More info: http://kubernetes.io/docs/user-guide/labels
                                  type: object
                              type: object
                            name:
                              description: |-
                                name is the unique identifier for this MachineDeploymentTopology.
                                The value is used with other unique identifiers to create a MachineDeployment's Name
                                (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length,
                                the values are hashed together.
                              type: string
                            replicas:
                              description: |-
                                replicas is the number of worker nodes belonging to this set.
                                If the value is nil, the MachineDeployment is created without the number of Replicas (defaulting to zero)
                                and it's assumed that an external entity (like cluster autoscaler) is responsible for the management
                                of this value.
                              format: int32
                              type: integer
                          required:
                          - class
                          - name
                          type: object
                        type: array
                    type: object
                required:
                - class
                - version
                type: object
            type: object
          status:
            description: status is the observed state of Cluster.
            properties:
              conditions:
                description: conditions defines current service state of the cluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              controlPlaneReady:
                description: controlPlaneReady defines if the control plane is ready.
                type: boolean
              failureDomains:
                additionalProperties:
                  description: |-
                    FailureDomainSpec is the Schema for Cluster API failure domains.
                    It allows controllers to understand how many failure domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: controlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: failureDomains is a slice of failure domain objects synced
                  from the infrastructure provider.
                type: object
              failureMessage:
                description: |-
                  failureMessage indicates that there is a fatal problem reconciling the
                  state, and will be set to a descriptive error message.
                type: string
              failureReason:
                description: |-
                  failureReason indicates that there is a fatal problem reconciling the
                  state, and will be set to a token value suitable for
                  programmatic interpretation.
                type: string
              infrastructureReady:
                description: infrastructureReady is the state of the infrastructure
                  provider.
                type: boolean
              observedGeneration:
                description: observedGeneration is the latest generation observed
                  by the controller.
                format: int64
                type: integer
              phase:
                description: |-
                  phase represents the current phase of cluster actuation.
                  E.g. Pending, Running, Terminating, Failed etc.
                type: string
            type: object
        type: object
    served: false
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: ClusterClass of this Cluster, empty if the Cluster is not using
        a ClusterClass
      jsonPath: .spec.topology.class
      name: ClusterClass
      type: string
    - description: Cluster status such as Pending/Provisioning/Provisioned/Deleting/Failed
      jsonPath: .status.phase
      name: Phase
      type: string
    - description: Time duration since creation of Cluster
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Kubernetes version associated with this Cluster
      jsonPath: .spec.topology.version
      name: Version
      type: string
    deprecated: true
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec is the desired state of Cluster.
            properties:
              availabilityGates:
                description: |-
                  availabilityGates specifies additional conditions to include when evaluating Cluster Available condition.

                  If this field is not defined and the Cluster implements a managed topology, availabilityGates
                  from the corresponding ClusterClass will be used, if any.

                  NOTE: this field is considered only for computing v1beta2 conditions.
                items:
                  description: ClusterAvailabilityGate contains the type of a Cluster
                    condition to be used as availability gate.
                  properties:
                    conditionType:
                      description: |-
                        conditionType refers to a condition with matching type in the Cluster's condition list.
                        If the conditions doesn't exist, it will be treated as unknown.
                        Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as availability gates.
                      maxLength: 316
                      minLength: 1
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                    polarity:
                      description: |-
                        polarity of the conditionType specified in this availabilityGate.
                        Valid values are Positive, Negative and omitted.
                        When omitted, the default behaviour will be Positive.
                        A positive polarity means that the condition should report a true status under normal conditions.
                        A negative polarity means that the condition should report a false status under normal conditions.
                      enum:
                      - Positive
                      - Negative
                      type: string
                  required:
                  - conditionType
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-list-map-keys:
                - conditionType
                x-kubernetes-list-type: map
              clusterNetwork:
                description: clusterNetwork represents the cluster network configuration.
                properties:
                  apiServerPort:
                    description: |-
                      apiServerPort specifies the port the API Server should bind to.
                      Defaults to 6443.
                    format: int32
                    type: integer
                  pods:
                    description: pods is the network ranges from which Pod networks
                      are allocated.
                    properties:
                      cidrBlocks:
                        description: cidrBlocks is a list of CIDR blocks.
                        items:
                          maxLength: 43
                          minLength: 1
                          type: string
                        maxItems: 100
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                  serviceDomain:
                    description: serviceDomain is the domain name for services.
                    maxLength: 253
                    minLength: 1
                    type: string
                  services:
                    description: services is the network ranges from which service
                      VIPs are allocated.
                    properties:
                      cidrBlocks:
                        description: cidrBlocks is a list of CIDR blocks.
                        items:
                          maxLength: 43
                          minLength: 1
                          type: string
                        maxItems: 100
                        type: array
                    required:
                    - cidrBlocks
                    type: object
                type: object
              controlPlaneEndpoint:
                description: controlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                properties:
                  host:
                    description: host is the hostname on which the API server is serving.
                    maxLength: 512
                    type: string
                  port:
                    description: port is the port on which the API server is serving.
                    format: int32
                    type: integer
                required:
                - host
                - port
                type: object
              controlPlaneRef:
                description: |-
                  controlPlaneRef is an optional reference to a provider-specific resource that holds
                  the details for provisioning the Control Plane for a Cluster.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              infrastructureRef:
                description: |-
                  infrastructureRef is a reference to a provider-specific resource that holds the details
                  for provisioning infrastructure for a cluster in said provider.
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              paused:
                description: paused can be used to prevent controllers from processing
                  the Cluster and all its associated objects.
                type: boolean
              topology:
                description: |-
                  topology encapsulates the topology for the cluster.
                  NOTE: It is required to enable the ClusterTopology
                  feature gate flag to activate managed topologies support;
                  this feature is highly experimental, and parts of it might still be not implemented.
                properties:
                  class:
                    description: class is the name of the ClusterClass object to create
                      the topology.
                    maxLength: 253
                    minLength: 1
                    type: string
                  classNamespace:
                    description: |-
                      classNamespace is the namespace of the ClusterClass that should be used for the topology.
                      If classNamespace is empty or not set, it is defaulted to the namespace of the Cluster object.
                      classNamespace must be a valid namespace name and because of that be at most 63 characters in length
                      and it must consist only of lower case alphanumeric characters or hyphens (-), and must start
                      and end with an alphanumeric character.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                    type: string
                  controlPlane:
                    description: controlPlane describes the cluster control plane.
                    properties:
                      machineHealthCheck:
                        description: |-
                          machineHealthCheck allows to enable, disable and override
                          the MachineHealthCheck configuration in the ClusterClass for this control plane.
                        properties:
                          enable:
                            description: |-
                              enable controls if a MachineHealthCheck should be created for the target machines.

                              If false: No MachineHealthCheck will be created.

                              If not set(default): A MachineHealthCheck will be created if it is defined here or
                               in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.

                              If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will
                              block if `enable` is true and no MachineHealthCheck definition is available.
                            type: boolean
                          maxUnhealthy:
                            anyOf:
                            - type: integer
                            - type: string
                            description: |-
                              maxUnhealthy specifies the maximum number of unhealthy machines allowed.
                              Any further remediation is only allowed if at most "maxUnhealthy" machines selected by
                              "selector" are not healthy.
                            x-kubernetes-int-or-string: true
                          nodeStartupTimeout:
                            description: |-
                              nodeStartupTimeout allows to set the maximum time for MachineHealthCheck
                              to consider a Machine unhealthy if a corresponding Node isn't associated
                              through a `Spec.ProviderID` field.

                              The duration set in this field is compared to the greatest of:
                              - Cluster's infrastructure ready condition timestamp (if and when available)
                              - Control Plane's initialized condition timestamp (if and when available)
                              - Machine's infrastructure ready condition timestamp (if and when available)
                              - Machine's metadata creation timestamp

                              Defaults to 10 minutes.
                              If you wish to disable this feature, set the value explicitly to 0.
                            type: string
                          remediationTemplate:
                            description: |-
                              remediationTemplate is a reference to a remediation template
                              provided by an infrastructure provider.

                              This field is completely optional, when filled, the MachineHealthCheck controller
                              creates a new object from the template referenced and hands off remediation of the machine to
                              a controller that lives outside of Cluster API.
                            properties:
                              apiVersion:
                                description: API version of the referent.
                                type: string
                              fieldPath:
                                description: |-
                                  If referring to a piece of an object instead of an entire object, this string
                                  should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                  For example, if the object reference is to a container within a pod, this would take on a value like:
                                  "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                  the event) or if no container name is specified "spec.containers[2]" (container with
                                  index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                  referencing a part of an object.
                                type: string
                              kind:
                                description: |-
                                  Kind of the referent.
                                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                type: string
                              name:
                                description: |-
                                  Name of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                type: string
                              namespace:
                                description: |-
                                  Namespace of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                type: string
                              resourceVersion:
                                description: |-
                                  Specific resourceVersion to which this reference is made, if any.
                                  More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                type: string
                              uid:
                                description: |-
                                  UID of the referent.
                                  More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                type: string
                            type: object
                            x-kubernetes-map-type: atomic
                          unhealthyConditions:
                            description: |-
                              unhealthyConditions contains a list of the conditions that determine
                              whether a node is considered unhealthy. The conditions are combined in a
                              logical OR, i.e. if any of the conditions is met, the node is unhealthy.
                            items:
                              description: |-
                                UnhealthyCondition represents a Node condition type and value with a timeout
                                specified as a duration.  When the named condition has been in the given
                                status for at least the timeout value, a node is considered unhealthy.
                              properties:
                                status:
                                  description: status of the condition, one of True,
                                    False, Unknown.
                                  minLength: 1
                                  type: string
                                timeout:
                                  description: |-
                                    timeout is the duration that a node must be in a given status for,
                                    after which the node is considered unhealthy.
                                    For example, with a value of "1h", the node must match the status
                                    for at least 1 hour before being considered unhealthy.
                                  type: string
                                type:
                                  description: type of Node condition
                                  minLength: 1
                                  type: string
                              required:
                              - status
                              - timeout
                              - type
                              type: object
                            maxItems: 100
                            type: array
                          unhealthyRange:
                            description: |-
                              unhealthyRange specifies the range of unhealthy machines allowed.
                              Any further remediation is only allowed if the number of machines selected by "selector" as not healthy
                              is within the range of "unhealthyRange". Takes precedence over maxUnhealthy.
                              Eg. "[3-5]" - This means that remediation will be allowed only when:
                              (a) there are at least 3 unhealthy machines (and)
                              (b) there are at most 5 unhealthy machines
                            maxLength: 32
                            minLength: 1
                            pattern: ^\[[0-9]+-[0-9]+\]$
                            type: string
                        type: object
                      metadata:
                        description: |-
                          metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane
                          if the ControlPlaneTemplate referenced by the ClusterClass is machine based. If not, it
                          is applied only to the ControlPlane.
                          At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata. They are not
                              queryable and should be preserved when modifying objects.
                              More info: http://kubernetes.io/docs/user-guide/annotations
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              labels is a map of string keys and values that can be used to organize and categorize
                              (scope and select) objects. May match selectors of replication controllers
                              and services.
                              More info: http://kubernetes.io/docs/user-guide/labels
                            type: object
                        type: object
                      nodeDeletionTimeout:
                        description: |-
                          nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                          hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                          Defaults to 10 seconds.
                        type: string
                      nodeDrainTimeout:
                        description: |-
                          nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                          The default value is 0, meaning that the node can be drained without any time limitations.
                          NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                        type: string
                      nodeVolumeDetachTimeout:
                        description: |-
                          nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                          to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                        type: string
                      readinessGates:
                        description: |-
                          readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                          This field can be used e.g. to instruct the machine controller to include in the computation for Machine's ready
                          computation a condition, managed by an external controllers, reporting the status of special software/hardware installed on the Machine.

                          If this field is not defined, readinessGates from the corresponding ControlPlaneClass will be used, if any.

                          NOTE: This field is considered only for computing v1beta2 conditions.
                          NOTE: Specific control plane provider implementations might automatically extend the list of readinessGates;
                          e.g. the kubeadm control provider adds ReadinessGates for the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.
                        items:
                          description: MachineReadinessGate contains the type of a
                            Machine condition to be used as a readiness gate.
                          properties:
                            conditionType:
                              description: |-
                                conditionType refers to a condition with matching type in the Machine's condition list.
                                If the conditions doesn't exist, it will be treated as unknown.
                                Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                              maxLength: 316
                              minLength: 1
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                            polarity:
                              description: |-
                                polarity of the conditionType specified in this readinessGate.
                                Valid values are Positive, Negative and omitted.
                                When omitted, the default behaviour will be Positive.
                                A positive polarity means that the condition should report a true status under normal conditions.
                                A negative polarity means that the condition should report a false status under normal conditions.
                              enum:
                              - Positive
                              - Negative
                              type: string
                          required:
                          - conditionType
                          type: object
                        maxItems: 32
                        type: array
                        x-kubernetes-list-map-keys:
                        - conditionType
                        x-kubernetes-list-type: map
                      replicas:
                        description: |-
                          replicas is the number of control plane nodes.
                          If the value is nil, the ControlPlane object is created without the number of Replicas
                          and it's assumed that the control plane controller does not implement support for this field.
                          When specified against a control plane provider that lacks support for this field, this value will be ignored.
                        format: int32
                        type: integer
                      variables:
                        description: variables can be used to customize the ControlPlane
                          through patches.
                        properties:
                          overrides:
                            description: overrides can be used to override Cluster
                              level variables.
                            items:
                              description: |-
                                ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a
                                Variable definition in the ClusterClass `status` variables.
                              properties:
                                definitionFrom:
                                  description: |-
                                    definitionFrom specifies where the definition of this Variable is from.

                                    Deprecated: This field is deprecated, must not be set anymore and is going to be removed in the next apiVersion.
                                  maxLength: 256
                                  type: string
                                name:
                                  description: name of the variable.
                                  maxLength: 256
                                  minLength: 1
                                  type: string
                                value:
                                  description: |-
                                    value of the variable.
                                    Note: the value will be validated against the schema of the corresponding ClusterClassVariable
                                    from the ClusterClass.
                                    Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a
                                    hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,
                                    i.e. it is not possible to have no type field.
                                    Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                                  x-kubernetes-preserve-unknown-fields: true
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 1000
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                    type: object
                  rolloutAfter:
                    description: |-
                      rolloutAfter performs a rollout of the entire cluster one component at a time,
                      control plane first and then machine deployments.

                      Deprecated: This field has no function and is going to be removed in the next apiVersion.
                    format: date-time
                    type: string
                  variables:
                    description: |-
                      variables can be used to customize the Cluster through
                      patches. They must comply to the corresponding
                      VariableClasses defined in the ClusterClass.
                    items:
                      description: |-
                        ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a
                        Variable definition in the ClusterClass `status` variables.
                      properties:
                        definitionFrom:
                          description: |-
                            definitionFrom specifies where the definition of this Variable is from.

                            Deprecated: This field is deprecated, must not be set anymore and is going to be removed in the next apiVersion.
                          maxLength: 256
                          type: string
                        name:
                          description: name of the variable.
                          maxLength: 256
                          minLength: 1
                          type: string
                        value:
                          description: |-
                            value of the variable.
                            Note: the value will be validated against the schema of the corresponding ClusterClassVariable
                            from the ClusterClass.
                            Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a
                            hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,
                            i.e. it is not possible to have no type field.
                            Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - name
                      - value
                      type: object
                    maxItems: 1000
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  version:
                    description: version is the Kubernetes version of the cluster.
                    maxLength: 256
                    minLength: 1
                    type: string
                  workers:
                    description: |-
                      workers encapsulates the different constructs that form the worker nodes
                      for the cluster.
                    properties:
                      machineDeployments:
                        description: machineDeployments is a list of machine deployments
                          in the cluster.
                        items:
                          description: |-
                            MachineDeploymentTopology specifies the different parameters for a set of worker nodes in the topology.
                            This set of nodes is managed by a MachineDeployment object whose lifecycle is managed by the Cluster controller.
                          properties:
                            class:
                              description: |-
                                class is the name of the MachineDeploymentClass used to create the set of worker nodes.
                                This should match one of the deployment classes defined in the ClusterClass object
                                mentioned in the `Cluster.Spec.Class` field.
                              maxLength: 256
                              minLength: 1
                              type: string
                            failureDomain:
                              description: |-
                                failureDomain is the failure domain the machines will be created in.
                                Must match a key in the FailureDomains map stored on the cluster object.
                              maxLength: 256
                              minLength: 1
                              type: string
                            machineHealthCheck:
                              description: |-
                                machineHealthCheck allows to enable, disable and override
                                the MachineHealthCheck configuration in the ClusterClass for this MachineDeployment.
                              properties:
                                enable:
                                  description: |-
                                    enable controls if a MachineHealthCheck should be created for the target machines.

                                    If false: No MachineHealthCheck will be created.

                                    If not set(default): A MachineHealthCheck will be created if it is defined here or
                                     in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.

                                    If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will
                                    block if `enable` is true and no MachineHealthCheck definition is available.
                                  type: boolean
                                maxUnhealthy:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: |-
                                    maxUnhealthy specifies the maximum number of unhealthy machines allowed.
                                    Any further remediation is only allowed if at most "maxUnhealthy" machines selected by
                                    "selector" are not healthy.
                                  x-kubernetes-int-or-string: true
                                nodeStartupTimeout:
                                  description: |-
                                    nodeStartupTimeout allows to set the maximum time for MachineHealthCheck
                                    to consider a Machine unhealthy if a corresponding Node isn't associated
                                    through a `Spec.ProviderID` field.

                                    The duration set in this field is compared to the greatest of:
                                    - Cluster's infrastructure ready condition timestamp (if and when available)
                                    - Control Plane's initialized condition timestamp (if and when available)
                                    - Machine's infrastructure ready condition timestamp (if and when available)
                                    - Machine's metadata creation timestamp

                                    Defaults to 10 minutes.
                                    If you wish to disable this feature, set the value explicitly to 0.
                                  type: string
                                remediationTemplate:
                                  description: |-
                                    remediationTemplate is a reference to a remediation template
                                    provided by an infrastructure provider.

                                    This field is completely optional, when filled, the MachineHealthCheck controller
                                    creates a new object from the template referenced and hands off remediation of the machine to
                                    a controller that lives outside of Cluster API.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    fieldPath:
                                      description: |-
                                        If referring to a piece of an object instead of an entire object, this string
                                        should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                                        For example, if the object reference is to a container within a pod, this would take on a value like:
                                        "spec.containers{name}" (where "name" refers to the name of the container that triggered
                                        the event) or if no container name is specified "spec.containers[2]" (container with
                                        index 2 in this pod). This syntax is chosen only to have some well-defined way of
                                        referencing a part of an object.
                                      type: string
                                    kind:
                                      description: |-
                                        Kind of the referent.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                                      type: string
                                    name:
                                      description: |-
                                        Name of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      type: string
                                    namespace:
                                      description: |-
                                        Namespace of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                                      type: string
                                    resourceVersion:
                                      description: |-
                                        Specific resourceVersion to which this reference is made, if any.
                                        More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                                      type: string
                                    uid:
                                      description: |-
                                        UID of the referent.
                                        More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                                      type: string
                                  type: object
                                  x-kubernetes-map-type: atomic
                                unhealthyConditions:
                                  description: |-
                                    unhealthyConditions contains a list of the conditions that determine
                                    whether a node is considered unhealthy. The conditions are combined in a
                                    logical OR, i.e. if any of the conditions is met, the node is unhealthy.
                                  items:
                                    description: |-
                                      UnhealthyCondition represents a Node condition type and value with a timeout
                                      specified as a duration.  When the named condition has been in the given
                                      status for at least the timeout value, a node is considered unhealthy.
                                    properties:
                                      status:
                                        description: status of the condition, one
                                          of True, False, Unknown.
                                        minLength: 1
                                        type: string
                                      timeout:
                                        description: |-
                                          timeout is the duration that a node must be in a given status for,
                                          after which the node is considered unhealthy.
                                          For example, with a value of "1h", the node must match the status
                                          for at least 1 hour before being considered unhealthy.
                                        type: string
                                      type:
                                        description: type of Node condition
                                        minLength: 1
                                        type: string
                                    required:
                                    - status
                                    - timeout
                                    - type
                                    type: object
                                  maxItems: 100
                                  type: array
                                unhealthyRange:
                                  description: |-
                                    unhealthyRange specifies the range of unhealthy machines allowed.
                                    Any further remediation is only allowed if the number of machines selected by "selector" as not healthy
                                    is within the range of "unhealthyRange". Takes precedence over maxUnhealthy.
                                    Eg. "[3-5]" - This means that remediation will be allowed only when:
                                    (a) there are at least 3 unhealthy machines (and)
                                    (b) there are at most 5 unhealthy machines
                                  maxLength: 32
                                  minLength: 1
                                  pattern: ^\[[0-9]+-[0-9]+\]$
                                  type: string
                              type: object
                            metadata:
                              description: |-
                                metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment.
                                At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    annotations is an unstructured key value map stored with a resource that may be
                                    set by external tools to store and retrieve arbitrary metadata. They are not
                                    queryable and should be preserved when modifying objects.
                                    More info: http://kubernetes.io/docs/user-guide/annotations
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    labels is a map of string keys and values that can be used to organize and categorize
                                    (scope and select) objects. May match selectors of replication controllers
                                    and services.
                                    More info: http://kubernetes.io/docs/user-guide/labels
                                  type: object
                              type: object
                            minReadySeconds:
                              description: |-
                                minReadySeconds is the minimum number of seconds for which a newly created machine should
                                be ready.
                                Defaults to 0 (machine will be considered available as soon as it
                                is ready)
                              format: int32
                              type: integer
                            name:
                              description: |-
                                name is the unique identifier for this MachineDeploymentTopology.
                                The value is used with other unique identifiers to create a MachineDeployment's Name
                                (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length,
                                the values are hashed together.
                              maxLength: 63
                              minLength: 1
                              type: string
                            nodeDeletionTimeout:
                              description: |-
                                nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the Machine
                                hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                                Defaults to 10 seconds.
                              type: string
                            nodeDrainTimeout:
                              description: |-
                                nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                                The default value is 0, meaning that the node can be drained without any time limitations.
                                NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                              type: string
                            nodeVolumeDetachTimeout:
                              description: |-
                                nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                                to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                              type: string
                            readinessGates:
                              description: |-
                                readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                                This field can be used e.g. to instruct the machine controller to include in the computation for Machine's ready
                                computation a condition, managed by an external controllers, reporting the status of special software/hardware installed on the Machine.

                                If this field is not defined, readinessGates from the corresponding MachineDeploymentClass will be used, if any.

                                NOTE: This field is considered only for computing v1beta2 conditions.
                              items:
                                description: MachineReadinessGate contains the type
                                  of a Machine condition to be used as a readiness
                                  gate.
                                properties:
                                  conditionType:
                                    description: |-
                                      conditionType refers to a condition with matching type in the Machine's condition list.
                                      If the conditions doesn't exist, it will be treated as unknown.
                                      Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                                    maxLength: 316
                                    minLength: 1
                                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                    type: string
                                  polarity:
                                    description: |-
                                      polarity of the conditionType specified in this readinessGate.
                                      Valid values are Positive, Negative and omitted.
                                      When omitted, the default behaviour will be Positive.
                                      A positive polarity means that the condition should report a true status under normal conditions.
                                      A negative polarity means that the condition should report a false status under normal conditions.
                                    enum:
                                    - Positive
                                    - Negative
                                    type: string
                                required:
                                - conditionType
                                type: object
                              maxItems: 32
                              type: array
                              x-kubernetes-list-map-keys:
                              - conditionType
                              x-kubernetes-list-type: map
                            replicas:
                              description: |-
                                replicas is the number of worker nodes belonging to this set.
                                If the value is nil, the MachineDeployment is created without the number of Replicas (defaulting to 1)
                                and it's assumed that an external entity (like cluster autoscaler) is responsible for the management
                                of this value.
                              format: int32
                              type: integer
                            strategy:
                              description: |-
                                strategy is the deployment strategy to use to replace existing machines with
                                new ones.
                              properties:
                                remediation:
                                  description: |-
                                    remediation controls the strategy of remediating unhealthy machines
                                    and how remediating operations should occur during the lifecycle of the dependant MachineSets.
                                  properties:
                                    maxInFlight:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        maxInFlight determines how many in flight remediations should happen at the same time.

                                        Remediation only happens on the MachineSet with the most current revision, while
                                        older MachineSets (usually present during rollout operations) aren't allowed to remediate.

                                        Note: In general (independent of remediations), unhealthy machines are always
                                        prioritized during scale down operations over healthy ones.

                                        MaxInFlight can be set to a fixed number or a percentage.
                                        Example: when this is set to 20%, the MachineSet controller deletes at most 20% of
                                        the desired replicas.

                                        If not set, remediation is limited to all machines (bounded by replicas)
                                        under the active MachineSet's management.
                                      x-kubernetes-int-or-string: true
                                  type: object
                                rollingUpdate:
                                  description: |-
                                    rollingUpdate is the rolling update config params. Present only if
                                    MachineDeploymentStrategyType = RollingUpdate.
                                  properties:
                                    deletePolicy:
                                      description: |-
                                        deletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling.
                                        Valid values are "Random, "Newest", "Oldest"
                                        When no value is supplied, the default DeletePolicy of MachineSet is used
                                      enum:
                                      - Random
                                      - Newest
                                      - Oldest
                                      type: string
                                    maxSurge:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        maxSurge is the maximum number of machines that can be scheduled above the
                                        desired number of machines.
                                        Value can be an absolute number (ex: 5) or a percentage of
                                        desired machines (ex: 10%).
                                        This can not be 0 if MaxUnavailable is 0.
                                        Absolute number is calculated from percentage by rounding up.
                                        Defaults to 1.
                                        Example: when this is set to 30%, the new MachineSet can be scaled
                                        up immediately when the rolling update starts, such that the total
                                        number of old and new machines do not exceed 130% of desired
                                        machines. Once old machines have been killed, new MachineSet can
                                        be scaled up further, ensuring that total number of machines running
                                        at any time during the update is at most 130% of desired machines.
                                      x-kubernetes-int-or-string: true
                                    maxUnavailable:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        maxUnavailable is the maximum number of machines that can be unavailable during the update.
                                        Value can be an absolute number (ex: 5) or a percentage of desired
                                        machines (ex: 10%).
                                        Absolute number is calculated from percentage by rounding down.
                                        This can not be 0 if MaxSurge is 0.
                                        Defaults to 0.
                                        Example: when this is set to 30%, the old MachineSet can be scaled
                                        down to 70% of desired machines immediately when the rolling update
                                        starts. Once new machines are ready, old MachineSet can be scaled
                                        down further, followed by scaling up the new MachineSet, ensuring
                                        that the total number of machines available at all times
                                        during the update is at least 70% of desired machines.
                                      x-kubernetes-int-or-string: true
                                  type: object
                                type:
                                  description: |-
                                    type of deployment. Allowed values are RollingUpdate and OnDelete.
                                    The default is RollingUpdate.
                                  enum:
                                  - RollingUpdate
                                  - OnDelete
                                  type: string
                              type: object
                            variables:
                              description: variables can be used to customize the
                                MachineDeployment through patches.
                              properties:
                                overrides:
                                  description: overrides can be used to override Cluster
                                    level variables.
                                  items:
                                    description: |-
                                      ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a
                                      Variable definition in the ClusterClass `status` variables.
                                    properties:
                                      definitionFrom:
                                        description: |-
                                          definitionFrom specifies where the definition of this Variable is from.

                                          Deprecated: This field is deprecated, must not be set anymore and is going to be removed in the next apiVersion.
                                        maxLength: 256
                                        type: string
                                      name:
                                        description: name of the variable.
                                        maxLength: 256
                                        minLength: 1
                                        type: string
                                      value:
                                        description: |-
                                          value of the variable.
                                          Note: the value will be validated against the schema of the corresponding ClusterClassVariable
                                          from the ClusterClass.
                                          Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a
                                          hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,
                                          i.e. it is not possible to have no type field.
                                          Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 1000
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                              type: object
                          required:
                          - class
                          - name
                          type: object
                        maxItems: 2000
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      machinePools:
                        description: machinePools is a list of machine pools in the
                          cluster.
                        items:
                          description: |-
                            MachinePoolTopology specifies the different parameters for a pool of worker nodes in the topology.
                            This pool of nodes is managed by a MachinePool object whose lifecycle is managed by the Cluster controller.
                          properties:
                            class:
                              description: |-
                                class is the name of the MachinePoolClass used to create the pool of worker nodes.
                                This should match one of the deployment classes defined in the ClusterClass object
                                mentioned in the `Cluster.Spec.Class` field.
                              maxLength: 256
                              minLength: 1
                              type: string
                            failureDomains:
                              description: |-
                                failureDomains is the list of failure domains the machine pool will be created in.
                                Must match a key in the FailureDomains map stored on the cluster object.
                              items:
                                maxLength: 256
                                minLength: 1
                                type: string
                              maxItems: 100
                              type: array
                            metadata:
                              description: |-
                                metadata is the metadata applied to the MachinePool.
                                At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    annotations is an unstructured key value map stored with a resource that may be
                                    set by external tools to store and retrieve arbitrary metadata. They are not
                                    queryable and should be preserved when modifying objects.
                                    More info: http://kubernetes.io/docs/user-guide/annotations
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    labels is a map of string keys and values that can be used to organize and categorize
                                    (scope and select) objects. May match selectors of replication controllers
                                    and services.
                                    More info: http://kubernetes.io/docs/user-guide/labels
                                  type: object
                              type: object
                            minReadySeconds:
                              description: |-
                                minReadySeconds is the minimum number of seconds for which a newly created machine pool should
                                be ready.
                                Defaults to 0 (machine will be considered available as soon as it
                                is ready)
                              format: int32
                              type: integer
                            name:
                              description: |-
                                name is the unique identifier for this MachinePoolTopology.
                                The value is used with other unique identifiers to create a MachinePool's Name
                                (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length,
                                the values are hashed together.
                              maxLength: 63
                              minLength: 1
                              type: string
                            nodeDeletionTimeout:
                              description: |-
                                nodeDeletionTimeout defines how long the controller will attempt to delete the Node that the MachinePool
                                hosts after the MachinePool is marked for deletion. A duration of 0 will retry deletion indefinitely.
                                Defaults to 10 seconds.
                              type: string
                            nodeDrainTimeout:
                              description: |-
                                nodeDrainTimeout is the total amount of time that the controller will spend on draining a node.
                                The default value is 0, meaning that the node can be drained without any time limitations.
                                NOTE: NodeDrainTimeout is different from `kubectl drain --timeout`
                              type: string
                            nodeVolumeDetachTimeout:
                              description: |-
                                nodeVolumeDetachTimeout is the total amount of time that the controller will spend on waiting for all volumes
                                to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                              type: string
                            replicas:
                              description: |-
                                replicas is the number of nodes belonging to this pool.
                                If the value is nil, the MachinePool is created without the number of Replicas (defaulting to 1)
                                and it's assumed that an external entity (like cluster autoscaler) is responsible for the management
                                of this value.
                              format: int32
                              type: integer
                            variables:
                              description: variables can be used to customize the
                                MachinePool through patches.
                              properties:
                                overrides:
                                  description: overrides can be used to override Cluster
                                    level variables.
                                  items:
                                    description: |-
                                      ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a
                                      Variable definition in the ClusterClass `status` variables.
                                    properties:
                                      definitionFrom:
                                        description: |-
                                          definitionFrom specifies where the definition of this Variable is from.

                                          Deprecated: This field is deprecated, must not be set anymore and is going to be removed in the next apiVersion.
                                        maxLength: 256
                                        type: string
                                      name:
                                        description: name of the variable.
                                        maxLength: 256
                                        minLength: 1
                                        type: string
                                      value:
                                        description: |-
                                          value of the variable.
                                          Note: the value will be validated against the schema of the corresponding ClusterClassVariable
                                          from the ClusterClass.
                                          Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a
                                          hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,
                                          i.e. it is not possible to have no type field.
                                          Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 1000
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                              type: object
                          required:
                          - class
                          - name
                          type: object
                        maxItems: 2000
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    type: object
                required:
                - class
                - version
                type: object
            type: object
          status:
            description: status is the observed state of Cluster.
            properties:
              conditions:
                description: conditions defines current service state of the cluster.
                items:
                  description: Condition defines an observation of a Cluster API resource
                    operational state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This field may be empty.
                      maxLength: 10240
                      minLength: 1
                      type: string
                    reason:
                      description: |-
                        reason is the reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may be empty.
                      maxLength: 256
                      minLength: 1
                      type: string
                    severity:
                      description: |-
                        severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      maxLength: 32
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              controlPlaneReady:
                description: |-
                  controlPlaneReady denotes if the control plane became ready during initial provisioning
                  to receive requests.
                  NOTE: this field is part of the Cluster API contract and it is used to orchestrate provisioning.
                  The value of this field is never updated after provisioning is completed. Please use conditions
                  to check the operational state of the control plane.
                type: boolean
              failureDomains:
                additionalProperties:
                  description: |-
                    FailureDomainSpec is the Schema for Cluster API failure domains.
                    It allows controllers to understand how many failure domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: controlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                  type: object
                description: failureDomains is a slice of failure domain objects synced
                  from the infrastructure provider.
                type: object
              failureMessage:
                description: |-
                  failureMessage indicates that there is a fatal problem reconciling the
                  state, and will be set to a descriptive error message.

                  Deprecated: This field is deprecated and is going to be removed when support for v1beta1 will be dropped. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                maxLength: 10240
                minLength: 1
                type: string
              failureReason:
                description: |-
                  failureReason indicates that there is a fatal problem reconciling the
                  state, and will be set to a token value suitable for
                  programmatic interpretation.

                  Deprecated: This field is deprecated and is going to be removed when support for v1beta1 will be dropped. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                type: string
              infrastructureReady:
                description: infrastructureReady is the state of the infrastructure
                  provider.
                type: boolean
              observedGeneration:
                description: observedGeneration is the latest generation observed
                  by the controller.
                format: int64
                type: integer
              phase:
                description: phase represents the current phase of cluster actuation.
                enum:
                - Pending
                - Provisioning
                - Provisioned
                - Deleting
                - Failed
                - Unknown
                type: string
              v1beta2:
                description: v1beta2 groups all the fields that will be added or modified
                  in Cluster's status with the V1Beta2 version.
                properties:
                  conditions:
                    description: |-
                      conditions represents the observations of a Cluster's current state.
                      Known condition types are Available, InfrastructureReady, ControlPlaneInitialized, ControlPlaneAvailable, WorkersAvailable, MachinesReady
                      MachinesUpToDate, RemoteConnectionProbe, ScalingUp, ScalingDown, Remediating, Deleting, Paused.
                      Additionally, a TopologyReconciled condition will be added in case the Cluster is referencing a ClusterClass / defining a managed Topology.
                    items:
                      description: Condition contains details for one aspect of the
                        current state of this API Resource.
                      properties:
                        lastTransitionTime:
                          description: |-
                            lastTransitionTime is the last time the condition transitioned from one status to another.
                            This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                          format: date-time
                          type: string
                        message:
                          description: |-
                            message is a human readable message indicating details about the transition.
                            This may be an empty string.
                          maxLength: 32768
                          type: string
                        observedGeneration:
                          description: |-
                            observedGeneration represents the .metadata.generation that the condition was set based upon.
                            For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                            with respect to the current state of the instance.
                          format: int64
                          minimum: 0
                          type: integer
                        reason:
                          description: |-
                            reason contains a programmatic identifier indicating the reason for the condition's last transition.
                            Producers of specific condition types may define expected values and meanings for this field,
                            and whether the values are considered a guaranteed API.
                            The value should be a CamelCase string.
                            This field may not be empty.
                          maxLength: 1024
                          minLength: 1
                          pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                          type: string
                        status:
                          description: status of the condition, one of True, False,
                            Unknown.
                          enum:
                          - "True"
                          - "False"
                          - Unknown
                          type: string
                        type:
                          description: type of condition in CamelCase or in foo.example.com/CamelCase.
                          maxLength: 316
                          pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                          type: string
                      required:
                      - lastTransitionTime
                      - message
                      - reason
                      - status
                      - type
                      type: object
                    maxItems: 32
                    type: array
                    x-kubernetes-list-map-keys:
                    - type
                    x-kubernetes-list-type: map
                  controlPlane:
                    description: controlPlane groups all the observations about Cluster's
                      ControlPlane current state.
                    properties:
                      availableReplicas:
                        description: availableReplicas is the total number of available
                          control plane machines in this cluster. A machine is considered
                          available when Machine's Available condition is true.
                        format: int32
                        type: integer
                      desiredReplicas:
                        description: desiredReplicas is the total number of desired
                          control plane machines in this cluster.
                        format: int32
                        type: integer
                      readyReplicas:
                        description: readyReplicas is the total number of ready control
                          plane machines in this cluster. A machine is considered
                          ready when Machine's Ready condition is true.
                        format: int32
                        type: integer
                      replicas:
                        description: |-
                          replicas is the total number of control plane machines in this cluster.
                          NOTE: replicas also includes machines still being provisioned or being deleted.
                        format: int32
                        type: integer
                      upToDateReplicas:
                        description: upToDateReplicas is the number of up-to-date
                          control plane machines in this cluster. A machine is considered
                          up-to-date when Machine's UpToDate condition is true.
                        format: int32
                        type: integer
                    type: object
                  workers:
                    description: workers groups all the observations about Cluster's
                      Workers current state.
                    properties:
                      availableReplicas:
                        description: availableReplicas is the total number of available
                          worker machines in this cluster. A machine is considered
                          available when Machine's Available condition is true.
                        format: int32
                        type: integer
                      desiredReplicas:
                        description: desiredReplicas is the total number of desired
                          worker machines in this cluster.
                        format: int32
                        type: integer
                      readyReplicas:
                        description: readyReplicas is the total number of ready worker
                          machines in this cluster. A machine is considered ready
                          when Machine's Ready condition is true.
                        format: int32
                        type: integer
                      replicas:
                        description: |-
                          replicas is the total number of worker machines in this cluster.
                          NOTE: replicas also includes machines still being provisioned or being deleted.
                        format: int32
                        type: integer
                      upToDateReplicas:
                        description: upToDateReplicas is the number of up-to-date
                          worker machines in this cluster. A machine is considered
                          up-to-date when Machine's UpToDate condition is true.
                        format: int32
                        type: integer
                    type: object
                type: object
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - description: ClusterClass of this Cluster, empty if the Cluster is not using
        a ClusterClass
      jsonPath: .spec.topology.classRef.name
      name: ClusterClass
      type: string
    - description: Cluster status such as Pending/Provisioning/Provisioned/Deleting/Failed
      jsonPath: .status.phase
      name: Phase
      type: string
    - description: Time duration since creation of Cluster
      jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    - description: Kubernetes version associated with this Cluster
      jsonPath: .spec.topology.version
      name: Version
      type: string
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: Cluster is the Schema for the clusters API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: spec is the desired state of Cluster.
            minProperties: 1
            properties:
              availabilityGates:
                description: |-
                  availabilityGates specifies additional conditions to include when evaluating Cluster Available condition.

                  If this field is not defined and the Cluster implements a managed topology, availabilityGates
                  from the corresponding ClusterClass will be used, if any.
                items:
                  description: ClusterAvailabilityGate contains the type of a Cluster
                    condition to be used as availability gate.
                  properties:
                    conditionType:
                      description: |-
                        conditionType refers to a condition with matching type in the Cluster's condition list.
                        If the conditions doesn't exist, it will be treated as unknown.
                        Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as availability gates.
                      maxLength: 316
                      minLength: 1
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                    polarity:
                      description: |-
                        polarity of the conditionType specified in this availabilityGate.
                        Valid values are Positive, Negative and omitted.
                        When omitted, the default behaviour will be Positive.
                        A positive polarity means that the condition should report a true status under normal conditions.
                        A negative polarity means that the condition should report a false status under normal conditions.
                      enum:
                      - Positive
                      - Negative
                      type: string
                  required:
                  - conditionType
                  type: object
                maxItems: 32
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - conditionType
                x-kubernetes-list-type: map
              clusterNetwork:
                description: clusterNetwork represents the cluster network configuration.
                minProperties: 1
                properties:
                  apiServerPort:
                    description: |-
                      apiServerPort specifies the port the API Server should bind to.
                      Defaults to 6443.
                    format: int32
                    maximum: 65535
                    minimum: 1
                    type: integer
                  pods:
                    description: pods is the network ranges from which Pod networks
                      are allocated.
                    properties:
                      cidrBlocks:
                        description: cidrBlocks is a list of CIDR blocks.
                        items:
                          maxLength: 43
                          minLength: 1
                          type: string
                        maxItems: 100
                        type: array
                        x-kubernetes-list-type: atomic
                    required:
                    - cidrBlocks
                    type: object
                  serviceDomain:
                    description: serviceDomain is the domain name for services.
                    maxLength: 253
                    minLength: 1
                    type: string
                  services:
                    description: services is the network ranges from which service
                      VIPs are allocated.
                    properties:
                      cidrBlocks:
                        description: cidrBlocks is a list of CIDR blocks.
                        items:
                          maxLength: 43
                          minLength: 1
                          type: string
                        maxItems: 100
                        type: array
                        x-kubernetes-list-type: atomic
                    required:
                    - cidrBlocks
                    type: object
                type: object
              controlPlaneEndpoint:
                description: controlPlaneEndpoint represents the endpoint used to
                  communicate with the control plane.
                minProperties: 1
                properties:
                  host:
                    description: host is the hostname on which the API server is serving.
                    maxLength: 512
                    minLength: 1
                    type: string
                  port:
                    description: port is the port on which the API server is serving.
                    format: int32
                    maximum: 65535
                    minimum: 1
                    type: integer
                type: object
              controlPlaneRef:
                description: |-
                  controlPlaneRef is an optional reference to a provider-specific resource that holds
                  the details for provisioning the Control Plane for a Cluster.
                properties:
                  apiGroup:
                    description: |-
                      apiGroup is the group of the resource being referenced.
                      apiGroup must be fully qualified domain name.
                      The corresponding version for this reference will be looked up from the contract
                      labels of the corresponding CRD of the resource being referenced.
                    maxLength: 253
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: |-
                      kind of the resource being referenced.
                      kind must consist of alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: |-
                      name of the resource being referenced.
                      name must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character.
                    maxLength: 253
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                required:
                - apiGroup
                - kind
                - name
                type: object
              infrastructureRef:
                description: |-
                  infrastructureRef is a reference to a provider-specific resource that holds the details
                  for provisioning infrastructure for a cluster in said provider.
                properties:
                  apiGroup:
                    description: |-
                      apiGroup is the group of the resource being referenced.
                      apiGroup must be fully qualified domain name.
                      The corresponding version for this reference will be looked up from the contract
                      labels of the corresponding CRD of the resource being referenced.
                    maxLength: 253
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                  kind:
                    description: |-
                      kind of the resource being referenced.
                      kind must consist of alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character.
                    maxLength: 63
                    minLength: 1
                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                    type: string
                  name:
                    description: |-
                      name of the resource being referenced.
                      name must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character.
                    maxLength: 253
                    minLength: 1
                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                    type: string
                required:
                - apiGroup
                - kind
                - name
                type: object
              paused:
                description: paused can be used to prevent controllers from processing
                  the Cluster and all its associated objects.
                type: boolean
              topology:
                description: |-
                  topology encapsulates the topology for the cluster.
                  NOTE: It is required to enable the ClusterTopology
                  feature gate flag to activate managed topologies support;
                  this feature is highly experimental, and parts of it might still be not implemented.
                properties:
                  classRef:
                    description: classRef is the ref to the ClusterClass that should
                      be used for the topology.
                    properties:
                      name:
                        description: |-
                          name is the name of the ClusterClass that should be used for the topology.
                          name must be a valid ClusterClass name and because of that be at most 253 characters in length
                          and it must consist only of lower case alphanumeric characters, hyphens (-) and periods (.), and must start
                          and end with an alphanumeric character.
                        maxLength: 253
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      namespace:
                        description: |-
                          namespace is the namespace of the ClusterClass that should be used for the topology.
                          If namespace is empty or not set, it is defaulted to the namespace of the Cluster object.
                          namespace must be a valid namespace name and because of that be at most 63 characters in length
                          and it must consist only of lower case alphanumeric characters or hyphens (-), and must start
                          and end with an alphanumeric character.
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                        type: string
                    required:
                    - name
                    type: object
                  controlPlane:
                    description: controlPlane describes the cluster control plane.
                    minProperties: 1
                    properties:
                      deletion:
                        description: deletion contains configuration options for Machine
                          deletion.
                        minProperties: 1
                        properties:
                          nodeDeletionTimeoutSeconds:
                            description: |-
                              nodeDeletionTimeoutSeconds defines how long the controller will attempt to delete the Node that the Machine
                              hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                              Defaults to 10 seconds.
                            format: int32
                            minimum: 0
                            type: integer
                          nodeDrainTimeoutSeconds:
                            description: |-
                              nodeDrainTimeoutSeconds is the total amount of time that the controller will spend on draining a node.
                              The default value is 0, meaning that the node can be drained without any time limitations.
                              NOTE: nodeDrainTimeoutSeconds is different from `kubectl drain --timeout`
                            format: int32
                            minimum: 0
                            type: integer
                          nodeVolumeDetachTimeoutSeconds:
                            description: |-
                              nodeVolumeDetachTimeoutSeconds is the total amount of time that the controller will spend on waiting for all volumes
                              to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                            format: int32
                            minimum: 0
                            type: integer
                        type: object
                      healthCheck:
                        description: |-
                          healthCheck allows to enable, disable and override control plane health check
                          configuration from the ClusterClass for this control plane.
                        minProperties: 1
                        properties:
                          checks:
                            description: |-
                              checks are the checks that are used to evaluate if a Machine is healthy.

                              If one of checks and remediation fields are set, the system assumes that an healthCheck override is defined,
                              and as a consequence the checks and remediation fields from Cluster will be used instead of the
                              corresponding fields in ClusterClass.

                              Independent of this configuration the MachineHealthCheck controller will always
                              flag Machines with `cluster.x-k8s.io/remediate-machine` annotation and
                              Machines with deleted Nodes as unhealthy.

                              Furthermore, if checks.nodeStartupTimeoutSeconds is not set it
                              is defaulted to 10 minutes and evaluated accordingly.
                            minProperties: 1
                            properties:
                              nodeStartupTimeoutSeconds:
                                description: |-
                                  nodeStartupTimeoutSeconds allows to set the maximum time for MachineHealthCheck
                                  to consider a Machine unhealthy if a corresponding Node isn't associated
                                  through a `Spec.ProviderID` field.

                                  The duration set in this field is compared to the greatest of:
                                  - Cluster's infrastructure ready condition timestamp (if and when available)
                                  - Control Plane's initialized condition timestamp (if and when available)
                                  - Machine's infrastructure ready condition timestamp (if and when available)
                                  - Machine's metadata creation timestamp

                                  Defaults to 10 minutes.
                                  If you wish to disable this feature, set the value explicitly to 0.
                                format: int32
                                minimum: 0
                                type: integer
                              unhealthyNodeConditions:
                                description: |-
                                  unhealthyNodeConditions contains a list of conditions that determine
                                  whether a node is considered unhealthy. The conditions are combined in a
                                  logical OR, i.e. if any of the conditions is met, the node is unhealthy.
                                items:
                                  description: |-
                                    UnhealthyNodeCondition represents a Node condition type and value with a timeout
                                    specified as a duration.  When the named condition has been in the given
                                    status for at least the timeout value, a node is considered unhealthy.
                                  properties:
                                    status:
                                      description: status of the condition, one of
                                        True, False, Unknown.
                                      minLength: 1
                                      type: string
                                    timeoutSeconds:
                                      description: |-
                                        timeoutSeconds is the duration that a node must be in a given status for,
                                        after which the node is considered unhealthy.
                                        For example, with a value of "1h", the node must match the status
                                        for at least 1 hour before being considered unhealthy.
                                      format: int32
                                      minimum: 0
                                      type: integer
                                    type:
                                      description: type of Node condition
                                      minLength: 1
                                      type: string
                                  required:
                                  - status
                                  - timeoutSeconds
                                  - type
                                  type: object
                                maxItems: 100
                                minItems: 1
                                type: array
                                x-kubernetes-list-type: atomic
                            type: object
                          enabled:
                            description: |-
                              enabled controls if a MachineHealthCheck should be created for the target machines.

                              If false: No MachineHealthCheck will be created.

                              If not set(default): A MachineHealthCheck will be created if it is defined here or
                               in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.

                              If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will
                              block if `enable` is true and no MachineHealthCheck definition is available.
                            type: boolean
                          remediation:
                            description: |-
                              remediation configures if and how remediations are triggered if a Machine is unhealthy.

                              If one of checks and remediation fields are set, the system assumes that an healthCheck override is defined,
                              and as a consequence the checks and remediation fields from cluster will be used instead of the
                              corresponding fields in ClusterClass.

                              If an health check override is defined and remediation or remediation.triggerIf is not set,
                              remediation will always be triggered for unhealthy Machines.

                              If an health check override is defined and remediation or remediation.templateRef is not set,
                              the OwnerRemediated condition will be set on unhealthy Machines to trigger remediation via
                              the owner of the Machines, for example a MachineSet or a KubeadmControlPlane.
                            minProperties: 1
                            properties:
                              templateRef:
                                description: |-
                                  templateRef is a reference to a remediation template
                                  provided by an infrastructure provider.

                                  This field is completely optional, when filled, the MachineHealthCheck controller
                                  creates a new object from the template referenced and hands off remediation of the machine to
                                  a controller that lives outside of Cluster API.
                                properties:
                                  apiVersion:
                                    description: |-
                                      apiVersion of the remediation template.
                                      apiVersion must be fully qualified domain name followed by / and a version.
                                      NOTE: This field must be kept in sync with the APIVersion of the remediation template.
                                    maxLength: 317
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[a-z]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  kind:
                                    description: |-
                                      kind of the remediation template.
                                      kind must consist of alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character.
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: |-
                                      name of the remediation template.
                                      name must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character.
                                    maxLength: 253
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                required:
                                - apiVersion
                                - kind
                                - name
                                type: object
                              triggerIf:
                                description: |-
                                  triggerIf configures if remediations are triggered.
                                  If this field is not set, remediations are always triggered.
                                minProperties: 1
                                properties:
                                  unhealthyInRange:
                                    description: |-
                                      unhealthyInRange specifies that remediations are only triggered if the number of
                                      unhealthy Machines is in the configured range.
                                      Takes precedence over unhealthyLessThanOrEqualTo.
                                      Eg. "[3-5]" - This means that remediation will be allowed only when:
                                      (a) there are at least 3 unhealthy Machines (and)
                                      (b) there are at most 5 unhealthy Machines
                                    maxLength: 32
                                    minLength: 1
                                    pattern: ^\[[0-9]+-[0-9]+\]$
                                    type: string
                                  unhealthyLessThanOrEqualTo:
                                    anyOf:
                                    - type: integer
                                    - type: string
                                    description: |-
                                      unhealthyLessThanOrEqualTo specifies that remediations are only triggered if the number of
                                      unhealthy Machines is less than or equal to the configured value.
                                      unhealthyInRange takes precedence if set.
                                    x-kubernetes-int-or-string: true
                                type: object
                            type: object
                        type: object
                      metadata:
                        description: |-
                          metadata is the metadata applied to the ControlPlane and the Machines of the ControlPlane
                          if the ControlPlaneTemplate referenced by the ClusterClass is machine based. If not, it
                          is applied only to the ControlPlane.
                          At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
                        minProperties: 1
                        properties:
                          annotations:
                            additionalProperties:
                              type: string
                            description: |-
                              annotations is an unstructured key value map stored with a resource that may be
                              set by external tools to store and retrieve arbitrary metadata. They are not
                              queryable and should be preserved when modifying objects.
                              More info: http://kubernetes.io/docs/user-guide/annotations
                            type: object
                          labels:
                            additionalProperties:
                              type: string
                            description: |-
                              labels is a map of string keys and values that can be used to organize and categorize
                              (scope and select) objects. May match selectors of replication controllers
                              and services.
                              More info: http://kubernetes.io/docs/user-guide/labels
                            type: object
                        type: object
                      readinessGates:
                        description: |-
                          readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                          This field can be used e.g. to instruct the machine controller to include in the computation for Machine's ready
                          computation a condition, managed by an external controllers, reporting the status of special software/hardware installed on the Machine.

                          If this field is not defined, readinessGates from the corresponding ControlPlaneClass will be used, if any.

                          NOTE: Specific control plane provider implementations might automatically extend the list of readinessGates;
                          e.g. the kubeadm control provider adds ReadinessGates for the APIServerPodHealthy, SchedulerPodHealthy conditions, etc.
                        items:
                          description: MachineReadinessGate contains the type of a
                            Machine condition to be used as a readiness gate.
                          properties:
                            conditionType:
                              description: |-
                                conditionType refers to a condition with matching type in the Machine's condition list.
                                If the conditions doesn't exist, it will be treated as unknown.
                                Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                              maxLength: 316
                              minLength: 1
                              pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                              type: string
                            polarity:
                              description: |-
                                polarity of the conditionType specified in this readinessGate.
                                Valid values are Positive, Negative and omitted.
                                When omitted, the default behaviour will be Positive.
                                A positive polarity means that the condition should report a true status under normal conditions.
                                A negative polarity means that the condition should report a false status under normal conditions.
                              enum:
                              - Positive
                              - Negative
                              type: string
                          required:
                          - conditionType
                          type: object
                        maxItems: 32
                        minItems: 1
                        type: array
                        x-kubernetes-list-map-keys:
                        - conditionType
                        x-kubernetes-list-type: map
                      replicas:
                        description: |-
                          replicas is the number of control plane nodes.
                          If the value is not set, the ControlPlane object is created without the number of Replicas
                          and it's assumed that the control plane controller does not implement support for this field.
                          When specified against a control plane provider that lacks support for this field, this value will be ignored.
                        format: int32
                        type: integer
                      variables:
                        description: variables can be used to customize the ControlPlane
                          through patches.
                        minProperties: 1
                        properties:
                          overrides:
                            description: overrides can be used to override Cluster
                              level variables.
                            items:
                              description: |-
                                ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a
                                Variable definition in the ClusterClass `status` variables.
                              properties:
                                name:
                                  description: name of the variable.
                                  maxLength: 256
                                  minLength: 1
                                  type: string
                                value:
                                  description: |-
                                    value of the variable.
                                    Note: the value will be validated against the schema of the corresponding ClusterClassVariable
                                    from the ClusterClass.
                                    Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a
                                    hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,
                                    i.e. it is not possible to have no type field.
                                    Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                                  x-kubernetes-preserve-unknown-fields: true
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 1000
                            minItems: 1
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                    type: object
                  variables:
                    description: |-
                      variables can be used to customize the Cluster through
                      patches. They must comply to the corresponding
                      VariableClasses defined in the ClusterClass.
                    items:
                      description: |-
                        ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a
                        Variable definition in the ClusterClass `status` variables.
                      properties:
                        name:
                          description: name of the variable.
                          maxLength: 256
                          minLength: 1
                          type: string
                        value:
                          description: |-
                            value of the variable.
                            Note: the value will be validated against the schema of the corresponding ClusterClassVariable
                            from the ClusterClass.
                            Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a
                            hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,
                            i.e. it is not possible to have no type field.
                            Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                          x-kubernetes-preserve-unknown-fields: true
                      required:
                      - name
                      - value
                      type: object
                    maxItems: 1000
                    minItems: 1
                    type: array
                    x-kubernetes-list-map-keys:
                    - name
                    x-kubernetes-list-type: map
                  version:
                    description: version is the Kubernetes version of the cluster.
                    maxLength: 256
                    minLength: 1
                    type: string
                  workers:
                    description: |-
                      workers encapsulates the different constructs that form the worker nodes
                      for the cluster.
                    minProperties: 1
                    properties:
                      machineDeployments:
                        description: machineDeployments is a list of machine deployments
                          in the cluster.
                        items:
                          description: |-
                            MachineDeploymentTopology specifies the different parameters for a set of worker nodes in the topology.
                            This set of nodes is managed by a MachineDeployment object whose lifecycle is managed by the Cluster controller.
                          properties:
                            class:
                              description: |-
                                class is the name of the MachineDeploymentClass used to create the set of worker nodes.
                                This should match one of the deployment classes defined in the ClusterClass object
                                mentioned in the `Cluster.Spec.Class` field.
                              maxLength: 256
                              minLength: 1
                              type: string
                            deletion:
                              description: deletion contains configuration options
                                for Machine deletion.
                              minProperties: 1
                              properties:
                                nodeDeletionTimeoutSeconds:
                                  description: |-
                                    nodeDeletionTimeoutSeconds defines how long the controller will attempt to delete the Node that the Machine
                                    hosts after the Machine is marked for deletion. A duration of 0 will retry deletion indefinitely.
                                    Defaults to 10 seconds.
                                  format: int32
                                  minimum: 0
                                  type: integer
                                nodeDrainTimeoutSeconds:
                                  description: |-
                                    nodeDrainTimeoutSeconds is the total amount of time that the controller will spend on draining a node.
                                    The default value is 0, meaning that the node can be drained without any time limitations.
                                    NOTE: nodeDrainTimeoutSeconds is different from `kubectl drain --timeout`
                                  format: int32
                                  minimum: 0
                                  type: integer
                                nodeVolumeDetachTimeoutSeconds:
                                  description: |-
                                    nodeVolumeDetachTimeoutSeconds is the total amount of time that the controller will spend on waiting for all volumes
                                    to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                                  format: int32
                                  minimum: 0
                                  type: integer
                              type: object
                            failureDomain:
                              description: |-
                                failureDomain is the failure domain the machines will be created in.
                                Must match a key in the FailureDomains map stored on the cluster object.
                              maxLength: 256
                              minLength: 1
                              type: string
                            healthCheck:
                              description: |-
                                healthCheck allows to enable, disable and override MachineDeployment health check
                                configuration from the ClusterClass for this MachineDeployment.
                              minProperties: 1
                              properties:
                                checks:
                                  description: |-
                                    checks are the checks that are used to evaluate if a Machine is healthy.

                                    If one of checks and remediation fields are set, the system assumes that an healthCheck override is defined,
                                    and as a consequence the checks and remediation fields from Cluster will be used instead of the
                                    corresponding fields in ClusterClass.

                                    Independent of this configuration the MachineHealthCheck controller will always
                                    flag Machines with `cluster.x-k8s.io/remediate-machine` annotation and
                                    Machines with deleted Nodes as unhealthy.

                                    Furthermore, if checks.nodeStartupTimeoutSeconds is not set it
                                    is defaulted to 10 minutes and evaluated accordingly.
                                  minProperties: 1
                                  properties:
                                    nodeStartupTimeoutSeconds:
                                      description: |-
                                        nodeStartupTimeoutSeconds allows to set the maximum time for MachineHealthCheck
                                        to consider a Machine unhealthy if a corresponding Node isn't associated
                                        through a `Spec.ProviderID` field.

                                        The duration set in this field is compared to the greatest of:
                                        - Cluster's infrastructure ready condition timestamp (if and when available)
                                        - Control Plane's initialized condition timestamp (if and when available)
                                        - Machine's infrastructure ready condition timestamp (if and when available)
                                        - Machine's metadata creation timestamp

                                        Defaults to 10 minutes.
                                        If you wish to disable this feature, set the value explicitly to 0.
                                      format: int32
                                      minimum: 0
                                      type: integer
                                    unhealthyNodeConditions:
                                      description: |-
                                        unhealthyNodeConditions contains a list of conditions that determine
                                        whether a node is considered unhealthy. The conditions are combined in a
                                        logical OR, i.e. if any of the conditions is met, the node is unhealthy.
                                      items:
                                        description: |-
                                          UnhealthyNodeCondition represents a Node condition type and value with a timeout
                                          specified as a duration.  When the named condition has been in the given
                                          status for at least the timeout value, a node is considered unhealthy.
                                        properties:
                                          status:
                                            description: status of the condition,
                                              one of True, False, Unknown.
                                            minLength: 1
                                            type: string
                                          timeoutSeconds:
                                            description: |-
                                              timeoutSeconds is the duration that a node must be in a given status for,
                                              after which the node is considered unhealthy.
                                              For example, with a value of "1h", the node must match the status
                                              for at least 1 hour before being considered unhealthy.
                                            format: int32
                                            minimum: 0
                                            type: integer
                                          type:
                                            description: type of Node condition
                                            minLength: 1
                                            type: string
                                        required:
                                        - status
                                        - timeoutSeconds
                                        - type
                                        type: object
                                      maxItems: 100
                                      minItems: 1
                                      type: array
                                      x-kubernetes-list-type: atomic
                                  type: object
                                enabled:
                                  description: |-
                                    enabled controls if a MachineHealthCheck should be created for the target machines.

                                    If false: No MachineHealthCheck will be created.

                                    If not set(default): A MachineHealthCheck will be created if it is defined here or
                                     in the associated ClusterClass. If no MachineHealthCheck is defined then none will be created.

                                    If true: A MachineHealthCheck is guaranteed to be created. Cluster validation will
                                    block if `enable` is true and no MachineHealthCheck definition is available.
                                  type: boolean
                                remediation:
                                  description: |-
                                    remediation configures if and how remediations are triggered if a Machine is unhealthy.

                                    If one of checks and remediation fields are set, the system assumes that an healthCheck override is defined,
                                    and as a consequence the checks and remediation fields from cluster will be used instead of the
                                    corresponding fields in ClusterClass.

                                    If an health check override is defined and remediation or remediation.triggerIf is not set,
                                    remediation will always be triggered for unhealthy Machines.

                                    If an health check override is defined and remediation or remediation.templateRef is not set,
                                    the OwnerRemediated condition will be set on unhealthy Machines to trigger remediation via
                                    the owner of the Machines, for example a MachineSet or a KubeadmControlPlane.
                                  minProperties: 1
                                  properties:
                                    templateRef:
                                      description: |-
                                        templateRef is a reference to a remediation template
                                        provided by an infrastructure provider.

                                        This field is completely optional, when filled, the MachineHealthCheck controller
                                        creates a new object from the template referenced and hands off remediation of the machine to
                                        a controller that lives outside of Cluster API.
                                      properties:
                                        apiVersion:
                                          description: |-
                                            apiVersion of the remediation template.
                                            apiVersion must be fully qualified domain name followed by / and a version.
                                            NOTE: This field must be kept in sync with the APIVersion of the remediation template.
                                          maxLength: 317
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[a-z]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        kind:
                                          description: |-
                                            kind of the remediation template.
                                            kind must consist of alphanumeric characters or '-', start with an alphabetic character, and end with an alphanumeric character.
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: |-
                                            name of the remediation template.
                                            name must consist of lower case alphanumeric characters, '-' or '.', and must start and end with an alphanumeric character.
                                          maxLength: 253
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                      required:
                                      - apiVersion
                                      - kind
                                      - name
                                      type: object
                                    triggerIf:
                                      description: |-
                                        triggerIf configures if remediations are triggered.
                                        If this field is not set, remediations are always triggered.
                                      minProperties: 1
                                      properties:
                                        unhealthyInRange:
                                          description: |-
                                            unhealthyInRange specifies that remediations are only triggered if the number of
                                            unhealthy Machines is in the configured range.
                                            Takes precedence over unhealthyLessThanOrEqualTo.
                                            Eg. "[3-5]" - This means that remediation will be allowed only when:
                                            (a) there are at least 3 unhealthy Machines (and)
                                            (b) there are at most 5 unhealthy Machines
                                          maxLength: 32
                                          minLength: 1
                                          pattern: ^\[[0-9]+-[0-9]+\]$
                                          type: string
                                        unhealthyLessThanOrEqualTo:
                                          anyOf:
                                          - type: integer
                                          - type: string
                                          description: |-
                                            unhealthyLessThanOrEqualTo specifies that remediations are only triggered if the number of
                                            unhealthy Machines is less than or equal to the configured value.
                                            unhealthyInRange takes precedence if set.
                                          x-kubernetes-int-or-string: true
                                      type: object
                                  type: object
                              type: object
                            metadata:
                              description: |-
                                metadata is the metadata applied to the MachineDeployment and the machines of the MachineDeployment.
                                At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
                              minProperties: 1
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    annotations is an unstructured key value map stored with a resource that may be
                                    set by external tools to store and retrieve arbitrary metadata. They are not
                                    queryable and should be preserved when modifying objects.
                                    More info: http://kubernetes.io/docs/user-guide/annotations
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    labels is a map of string keys and values that can be used to organize and categorize
                                    (scope and select) objects. May match selectors of replication controllers
                                    and services.
                                    More info: http://kubernetes.io/docs/user-guide/labels
                                  type: object
                              type: object
                            minReadySeconds:
                              description: |-
                                minReadySeconds is the minimum number of seconds for which a newly created machine should
                                be ready.
                                Defaults to 0 (machine will be considered available as soon as it
                                is ready)
                              format: int32
                              minimum: 0
                              type: integer
                            name:
                              description: |-
                                name is the unique identifier for this MachineDeploymentTopology.
                                The value is used with other unique identifiers to create a MachineDeployment's Name
                                (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length,
                                the values are hashed together.
                              maxLength: 63
                              minLength: 1
                              type: string
                            readinessGates:
                              description: |-
                                readinessGates specifies additional conditions to include when evaluating Machine Ready condition.

                                This field can be used e.g. to instruct the machine controller to include in the computation for Machine's ready
                                computation a condition, managed by an external controllers, reporting the status of special software/hardware installed on the Machine.

                                If this field is not defined, readinessGates from the corresponding MachineDeploymentClass will be used, if any.
                              items:
                                description: MachineReadinessGate contains the type
                                  of a Machine condition to be used as a readiness
                                  gate.
                                properties:
                                  conditionType:
                                    description: |-
                                      conditionType refers to a condition with matching type in the Machine's condition list.
                                      If the conditions doesn't exist, it will be treated as unknown.
                                      Note: Both Cluster API conditions or conditions added by 3rd party controllers can be used as readiness gates.
                                    maxLength: 316
                                    minLength: 1
                                    pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                                    type: string
                                  polarity:
                                    description: |-
                                      polarity of the conditionType specified in this readinessGate.
                                      Valid values are Positive, Negative and omitted.
                                      When omitted, the default behaviour will be Positive.
                                      A positive polarity means that the condition should report a true status under normal conditions.
                                      A negative polarity means that the condition should report a false status under normal conditions.
                                    enum:
                                    - Positive
                                    - Negative
                                    type: string
                                required:
                                - conditionType
                                type: object
                              maxItems: 32
                              minItems: 1
                              type: array
                              x-kubernetes-list-map-keys:
                              - conditionType
                              x-kubernetes-list-type: map
                            replicas:
                              description: |-
                                replicas is the number of worker nodes belonging to this set.
                                If the value is nil, the MachineDeployment is created without the number of Replicas (defaulting to 1)
                                and it's assumed that an external entity (like cluster autoscaler) is responsible for the management
                                of this value.
                              format: int32
                              type: integer
                            strategy:
                              description: |-
                                strategy is the deployment strategy to use to replace existing machines with
                                new ones.
                              minProperties: 1
                              properties:
                                remediation:
                                  description: |-
                                    remediation controls the strategy of remediating unhealthy machines
                                    and how remediating operations should occur during the lifecycle of the dependant MachineSets.
                                  minProperties: 1
                                  properties:
                                    maxInFlight:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        maxInFlight determines how many in flight remediations should happen at the same time.

                                        Remediation only happens on the MachineSet with the most current revision, while
                                        older MachineSets (usually present during rollout operations) aren't allowed to remediate.

                                        Note: In general (independent of remediations), unhealthy machines are always
                                        prioritized during scale down operations over healthy ones.

                                        MaxInFlight can be set to a fixed number or a percentage.
                                        Example: when this is set to 20%, the MachineSet controller deletes at most 20% of
                                        the desired replicas.

                                        If not set, remediation is limited to all machines (bounded by replicas)
                                        under the active MachineSet's management.
                                      x-kubernetes-int-or-string: true
                                  type: object
                                rollingUpdate:
                                  description: |-
                                    rollingUpdate is the rolling update config params. Present only if
                                    MachineDeploymentStrategyType = RollingUpdate.
                                  minProperties: 1
                                  properties:
                                    deletePolicy:
                                      description: |-
                                        deletePolicy defines the policy used by the MachineDeployment to identify nodes to delete when downscaling.
                                        Valid values are "Random, "Newest", "Oldest"
                                        When no value is supplied, the default DeletePolicy of MachineSet is used
                                      enum:
                                      - Random
                                      - Newest
                                      - Oldest
                                      type: string
                                    maxSurge:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        maxSurge is the maximum number of machines that can be scheduled above the
                                        desired number of machines.
                                        Value can be an absolute number (ex: 5) or a percentage of
                                        desired machines (ex: 10%).
                                        This can not be 0 if MaxUnavailable is 0.
                                        Absolute number is calculated from percentage by rounding up.
                                        Defaults to 1.
                                        Example: when this is set to 30%, the new MachineSet can be scaled
                                        up immediately when the rolling update starts, such that the total
                                        number of old and new machines do not exceed 130% of desired
                                        machines. Once old machines have been killed, new MachineSet can
                                        be scaled up further, ensuring that total number of machines running
                                        at any time during the update is at most 130% of desired machines.
                                      x-kubernetes-int-or-string: true
                                    maxUnavailable:
                                      anyOf:
                                      - type: integer
                                      - type: string
                                      description: |-
                                        maxUnavailable is the maximum number of machines that can be unavailable during the update.
                                        Value can be an absolute number (ex: 5) or a percentage of desired
                                        machines (ex: 10%).
                                        Absolute number is calculated from percentage by rounding down.
                                        This can not be 0 if MaxSurge is 0.
                                        Defaults to 0.
                                        Example: when this is set to 30%, the old MachineSet can be scaled
                                        down to 70% of desired machines immediately when the rolling update
                                        starts. Once new machines are ready, old MachineSet can be scaled
                                        down further, followed by scaling up the new MachineSet, ensuring
                                        that the total number of machines available at all times
                                        during the update is at least 70% of desired machines.
                                      x-kubernetes-int-or-string: true
                                  type: object
                                type:
                                  description: |-
                                    type of deployment. Allowed values are RollingUpdate and OnDelete.
                                    The default is RollingUpdate.
                                  enum:
                                  - RollingUpdate
                                  - OnDelete
                                  type: string
                              type: object
                            variables:
                              description: variables can be used to customize the
                                MachineDeployment through patches.
                              minProperties: 1
                              properties:
                                overrides:
                                  description: overrides can be used to override Cluster
                                    level variables.
                                  items:
                                    description: |-
                                      ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a
                                      Variable definition in the ClusterClass `status` variables.
                                    properties:
                                      name:
                                        description: name of the variable.
                                        maxLength: 256
                                        minLength: 1
                                        type: string
                                      value:
                                        description: |-
                                          value of the variable.
                                          Note: the value will be validated against the schema of the corresponding ClusterClassVariable
                                          from the ClusterClass.
                                          Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a
                                          hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,
                                          i.e. it is not possible to have no type field.
                                          Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 1000
                                  minItems: 1
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                              type: object
                          required:
                          - class
                          - name
                          type: object
                        maxItems: 2000
                        minItems: 1
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                      machinePools:
                        description: machinePools is a list of machine pools in the
                          cluster.
                        items:
                          description: |-
                            MachinePoolTopology specifies the different parameters for a pool of worker nodes in the topology.
                            This pool of nodes is managed by a MachinePool object whose lifecycle is managed by the Cluster controller.
                          properties:
                            class:
                              description: |-
                                class is the name of the MachinePoolClass used to create the pool of worker nodes.
                                This should match one of the deployment classes defined in the ClusterClass object
                                mentioned in the `Cluster.Spec.Class` field.
                              maxLength: 256
                              minLength: 1
                              type: string
                            deletion:
                              description: deletion contains configuration options
                                for Machine deletion.
                              minProperties: 1
                              properties:
                                nodeDeletionTimeoutSeconds:
                                  description: |-
                                    nodeDeletionTimeoutSeconds defines how long the controller will attempt to delete the Node that the MachinePool
                                    hosts after the MachinePool is marked for deletion. A duration of 0 will retry deletion indefinitely.
                                    Defaults to 10 seconds.
                                  format: int32
                                  minimum: 0
                                  type: integer
                                nodeDrainTimeoutSeconds:
                                  description: |-
                                    nodeDrainTimeoutSeconds is the total amount of time that the controller will spend on draining a node.
                                    The default value is 0, meaning that the node can be drained without any time limitations.
                                    NOTE: nodeDrainTimeoutSeconds is different from `kubectl drain --timeout`
                                  format: int32
                                  minimum: 0
                                  type: integer
                                nodeVolumeDetachTimeoutSeconds:
                                  description: |-
                                    nodeVolumeDetachTimeoutSeconds is the total amount of time that the controller will spend on waiting for all volumes
                                    to be detached. The default value is 0, meaning that the volumes can be detached without any time limitations.
                                  format: int32
                                  minimum: 0
                                  type: integer
                              type: object
                            failureDomains:
                              description: |-
                                failureDomains is the list of failure domains the machine pool will be created in.
                                Must match a key in the FailureDomains map stored on the cluster object.
                              items:
                                maxLength: 256
                                minLength: 1
                                type: string
                              maxItems: 100
                              minItems: 1
                              type: array
                              x-kubernetes-list-type: atomic
                            metadata:
                              description: |-
                                metadata is the metadata applied to the MachinePool.
                                At runtime this metadata is merged with the corresponding metadata from the ClusterClass.
                              minProperties: 1
                              properties:
                                annotations:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    annotations is an unstructured key value map stored with a resource that may be
                                    set by external tools to store and retrieve arbitrary metadata. They are not
                                    queryable and should be preserved when modifying objects.
                                    More info: http://kubernetes.io/docs/user-guide/annotations
                                  type: object
                                labels:
                                  additionalProperties:
                                    type: string
                                  description: |-
                                    labels is a map of string keys and values that can be used to organize and categorize
                                    (scope and select) objects. May match selectors of replication controllers
                                    and services.
                                    More info: http://kubernetes.io/docs/user-guide/labels
                                  type: object
                              type: object
                            minReadySeconds:
                              description: |-
                                minReadySeconds is the minimum number of seconds for which a newly created machine pool should
                                be ready.
                                Defaults to 0 (machine will be considered available as soon as it
                                is ready)
                              format: int32
                              minimum: 0
                              type: integer
                            name:
                              description: |-
                                name is the unique identifier for this MachinePoolTopology.
                                The value is used with other unique identifiers to create a MachinePool's Name
                                (e.g. cluster's name, etc). In case the name is greater than the allowed maximum length,
                                the values are hashed together.
                              maxLength: 63
                              minLength: 1
                              type: string
                            replicas:
                              description: |-
                                replicas is the number of nodes belonging to this pool.
                                If the value is nil, the MachinePool is created without the number of Replicas (defaulting to 1)
                                and it's assumed that an external entity (like cluster autoscaler) is responsible for the management
                                of this value.
                              format: int32
                              type: integer
                            variables:
                              description: variables can be used to customize the
                                MachinePool through patches.
                              minProperties: 1
                              properties:
                                overrides:
                                  description: overrides can be used to override Cluster
                                    level variables.
                                  items:
                                    description: |-
                                      ClusterVariable can be used to customize the Cluster through patches. Each ClusterVariable is associated with a
                                      Variable definition in the ClusterClass `status` variables.
                                    properties:
                                      name:
                                        description: name of the variable.
                                        maxLength: 256
                                        minLength: 1
                                        type: string
                                      value:
                                        description: |-
                                          value of the variable.
                                          Note: the value will be validated against the schema of the corresponding ClusterClassVariable
                                          from the ClusterClass.
                                          Note: We have to use apiextensionsv1.JSON instead of a custom JSON type, because controller-tools has a
                                          hard-coded schema for apiextensionsv1.JSON which cannot be produced by another type via controller-tools,
                                          i.e. it is not possible to have no type field.
                                          Ref: https://github.com/kubernetes-sigs/controller-tools/blob/d0e03a142d0ecdd5491593e941ee1d6b5d91dba6/pkg/crd/known_types.go#L106-L111
                                        x-kubernetes-preserve-unknown-fields: true
                                    required:
                                    - name
                                    - value
                                    type: object
                                  maxItems: 1000
                                  minItems: 1
                                  type: array
                                  x-kubernetes-list-map-keys:
                                  - name
                                  x-kubernetes-list-type: map
                              type: object
                          required:
                          - class
                          - name
                          type: object
                        maxItems: 2000
                        minItems: 1
                        type: array
                        x-kubernetes-list-map-keys:
                        - name
                        x-kubernetes-list-type: map
                    type: object
                required:
                - classRef
                - version
                type: object
            type: object
          status:
            description: status is the observed state of Cluster.
            minProperties: 1
            properties:
              conditions:
                description: |-
                  conditions represents the observations of a Cluster's current state.
                  Known condition types are Available, InfrastructureReady, ControlPlaneInitialized, ControlPlaneAvailable, WorkersAvailable, MachinesReady
                  MachinesUpToDate, RemoteConnectionProbe, ScalingUp, ScalingDown, Remediating, Deleting, Paused.
                  Additionally, a TopologyReconciled condition will be added in case the Cluster is referencing a ClusterClass / defining a managed Topology.
                items:
                  description: Condition contains details for one aspect of the current
                    state of this API Resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        lastTransitionTime is the last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        message is a human readable message indicating details about the transition.
                        This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: |-
                        observedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: |-
                        reason contains a programmatic identifier indicating the reason for the condition's last transition.
                        Producers of specific condition types may define expected values and meanings for this field,
                        and whether the values are considered a guaranteed API.
                        The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              controlPlane:
                description: controlPlane groups all the observations about Cluster's
                  ControlPlane current state.
                properties:
                  availableReplicas:
                    description: availableReplicas is the total number of available
                      control plane machines in this cluster. A machine is considered
                      available when Machine's Available condition is true.
                    format: int32
                    type: integer
                  desiredReplicas:
                    description: desiredReplicas is the total number of desired control
                      plane machines in this cluster.
                    format: int32
                    type: integer
                  readyReplicas:
                    description: readyReplicas is the total number of ready control
                      plane machines in this cluster. A machine is considered ready
                      when Machine's Ready condition is true.
                    format: int32
                    type: integer
                  replicas:
                    description: |-
                      replicas is the total number of control plane machines in this cluster.
                      NOTE: replicas also includes machines still being provisioned or being deleted.
                    format: int32
                    type: integer
                  upToDateReplicas:
                    description: upToDateReplicas is the number of up-to-date control
                      plane machines in this cluster. A machine is considered up-to-date
                      when Machine's UpToDate condition is true.
                    format: int32
                    type: integer
                type: object
              deprecated:
                description: deprecated groups all the status fields that are deprecated
                  and will be removed when all the nested field are removed.
                properties:
                  v1beta1:
                    description: v1beta1 groups all the status fields that are deprecated
                      and will be removed when support for v1beta1 will be dropped.
                    properties:
                      conditions:
                        description: |-
                          conditions defines current service state of the cluster.

                          Deprecated: This field is deprecated and is going to be removed when support for v1beta1 will be dropped. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                        items:
                          description: Condition defines an observation of a Cluster
                            API resource operational state.
                          properties:
                            lastTransitionTime:
                              description: |-
                                lastTransitionTime is the last time the condition transitioned from one status to another.
                                This should be when the underlying condition changed. If that is not known, then using the time when
                                the API field changed is acceptable.
                              format: date-time
                              type: string
                            message:
                              description: |-
                                message is a human readable message indicating details about the transition.
                                This field may be empty.
                              maxLength: 10240
                              minLength: 1
                              type: string
                            reason:
                              description: |-
                                reason is the reason for the condition's last transition in CamelCase.
                                The specific API may choose whether or not this field is considered a guaranteed API.
                                This field may be empty.
                              maxLength: 256
                              minLength: 1
                              type: string
                            severity:
                              description: |-
                                severity provides an explicit classification of Reason code, so the users or machines can immediately
                                understand the current situation and act accordingly.
                                The Severity field MUST be set only when Status=False.
                              maxLength: 32
                              type: string
                            status:
                              description: status of the condition, one of True, False,
                                Unknown.
                              type: string
                            type:
                              description: |-
                                type of condition in CamelCase or in foo.example.com/CamelCase.
                                Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                                can be useful (see .node.status.conditions), the ability to deconflict is important.
                              maxLength: 256
                              minLength: 1
                              type: string
                          required:
                          - lastTransitionTime
                          - status
                          - type
                          type: object
                        type: array
                      failureMessage:
                        description: |-
                          failureMessage indicates that there is a fatal problem reconciling the
                          state, and will be set to a descriptive error message.

                          Deprecated: This field is deprecated and is going to be removed when support for v1beta1 will be dropped. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                        maxLength: 10240
                        minLength: 1
                        type: string
                      failureReason:
                        description: |-
                          failureReason indicates that there is a fatal problem reconciling the
                          state, and will be set to a token value suitable for
                          programmatic interpretation.

                          Deprecated: This field is deprecated and is going to be removed when support for v1beta1 will be dropped. Please see https://github.com/kubernetes-sigs/cluster-api/blob/main/docs/proposals/20240916-improve-status-in-CAPI-resources.md for more details.
                        type: string
                    type: object
                type: object
              failureDomains:
                description: failureDomains is a slice of failure domain objects synced
                  from the infrastructure provider.
                items:
                  description: |-
                    FailureDomain is the Schema for Cluster API failure domains.
                    It allows controllers to understand how many failure domains a cluster can optionally span across.
                  properties:
                    attributes:
                      additionalProperties:
                        type: string
                      description: attributes is a free form map of attributes an
                        infrastructure provider might use or require.
                      type: object
                    controlPlane:
                      description: controlPlane determines if this failure domain
                        is suitable for use by control plane machines.
                      type: boolean
                    name:
                      description: name is the name of the failure domain.
                      maxLength: 256
                      minLength: 1
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 100
                minItems: 1
                type: array
                x-kubernetes-list-map-keys:
                - name
                x-kubernetes-list-type: map
              initialization:
                description: |-
                  initialization provides observations of the Cluster initialization process.
                  NOTE: Fields in this struct are part of the Cluster API contract and are used to orchestrate initial Cluster provisioning.
                minProperties: 1
                properties:
                  controlPlaneInitialized:
                    description: |-
                      controlPlaneInitialized denotes when the control plane is functional enough to accept requests.
                      This information is usually used as a signal for starting all the provisioning operations that depends on
                      a functional API server, but do not require a full HA control plane to exists, like e.g. join worker Machines,
                      install core addons like CNI, CPI, CSI etc.
                      NOTE: this field is part of the Cluster API contract, and it is used to orchestrate provisioning.
                      The value of this field is never updated after initialization is completed.
                    type: boolean
                  infrastructureProvisioned:
                    description: |-
                      infrastructureProvisioned is true when the infrastructure provider reports that Cluster's infrastructure is fully provisioned.
                      NOTE: this field is part of the Cluster API contract, and it is used to orchestrate provisioning.
                      The value of this field is never updated after provisioning is completed.
                    type: boolean
                type: object
              observedGeneration:
                description: observedGeneration is the latest generation observed
                  by the controller.
                format: int64
                minimum: 1
                type: integer
              phase:
                description: phase represents the current phase of cluster actuation.
                enum:
                - Pending
                - Provisioning
                - Provisioned
                - Deleting
                - Failed
                - Unknown
                type: string
              workers:
                description: workers groups all the observations about Cluster's Workers
                  current state.
                properties:
                  availableReplicas:
                    description: availableReplicas is the total number of available
                      worker machines in this cluster. A machine is considered available
                      when Machine's Available condition is true.
                    format: int32
                    type: integer
                  desiredReplicas:
                    description: desiredReplicas is the total number of desired worker
                      machines in this cluster.
                    format: int32
                    type: integer
                  readyReplicas:
                    description: readyReplicas is the total number of ready worker
                      machines in this cluster. A machine is considered ready when
                      Machine's Ready condition is true.
                    format: int32
                    type: integer
                  replicas:
                    description: |-
                      replicas is the total number of worker machines in this cluster.
                      NOTE: replicas also includes machines still being provisioned or being deleted.
                    format: int32
                    type: integer
                  upToDateReplicas:
                    description: upToDateReplicas is the number of up-to-date worker
                      machines in this cluster. A machine is considered up-to-date
                      when Machine's UpToDate condition is true.
                    format: int32
                    type: integer
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
