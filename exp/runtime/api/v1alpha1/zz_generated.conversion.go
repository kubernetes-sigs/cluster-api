//go:build !ignore_autogenerated
// +build !ignore_autogenerated

/*
Copyright The Kubernetes Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1alpha1

import (
	unsafe "unsafe"

	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	v1beta1 "sigs.k8s.io/cluster-api/api/v1beta1"
	v1beta2 "sigs.k8s.io/cluster-api/exp/runtime/api/v1beta2"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*ClientConfig)(nil), (*v1beta2.ClientConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ClientConfig_To_v1beta2_ClientConfig(a.(*ClientConfig), b.(*v1beta2.ClientConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.ClientConfig)(nil), (*ClientConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ClientConfig_To_v1alpha1_ClientConfig(a.(*v1beta2.ClientConfig), b.(*ClientConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ExtensionConfig)(nil), (*v1beta2.ExtensionConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ExtensionConfig_To_v1beta2_ExtensionConfig(a.(*ExtensionConfig), b.(*v1beta2.ExtensionConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.ExtensionConfig)(nil), (*ExtensionConfig)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ExtensionConfig_To_v1alpha1_ExtensionConfig(a.(*v1beta2.ExtensionConfig), b.(*ExtensionConfig), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ExtensionConfigList)(nil), (*v1beta2.ExtensionConfigList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ExtensionConfigList_To_v1beta2_ExtensionConfigList(a.(*ExtensionConfigList), b.(*v1beta2.ExtensionConfigList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.ExtensionConfigList)(nil), (*ExtensionConfigList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ExtensionConfigList_To_v1alpha1_ExtensionConfigList(a.(*v1beta2.ExtensionConfigList), b.(*ExtensionConfigList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ExtensionConfigSpec)(nil), (*v1beta2.ExtensionConfigSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ExtensionConfigSpec_To_v1beta2_ExtensionConfigSpec(a.(*ExtensionConfigSpec), b.(*v1beta2.ExtensionConfigSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.ExtensionConfigSpec)(nil), (*ExtensionConfigSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ExtensionConfigSpec_To_v1alpha1_ExtensionConfigSpec(a.(*v1beta2.ExtensionConfigSpec), b.(*ExtensionConfigSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ExtensionHandler)(nil), (*v1beta2.ExtensionHandler)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ExtensionHandler_To_v1beta2_ExtensionHandler(a.(*ExtensionHandler), b.(*v1beta2.ExtensionHandler), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.ExtensionHandler)(nil), (*ExtensionHandler)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ExtensionHandler_To_v1alpha1_ExtensionHandler(a.(*v1beta2.ExtensionHandler), b.(*ExtensionHandler), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*GroupVersionHook)(nil), (*v1beta2.GroupVersionHook)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_GroupVersionHook_To_v1beta2_GroupVersionHook(a.(*GroupVersionHook), b.(*v1beta2.GroupVersionHook), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.GroupVersionHook)(nil), (*GroupVersionHook)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_GroupVersionHook_To_v1alpha1_GroupVersionHook(a.(*v1beta2.GroupVersionHook), b.(*GroupVersionHook), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ServiceReference)(nil), (*v1beta2.ServiceReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ServiceReference_To_v1beta2_ServiceReference(a.(*ServiceReference), b.(*v1beta2.ServiceReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*v1beta2.ServiceReference)(nil), (*ServiceReference)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ServiceReference_To_v1alpha1_ServiceReference(a.(*v1beta2.ServiceReference), b.(*ServiceReference), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1.Condition)(nil), (*v1beta1.Condition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_Condition_To_v1beta1_Condition(a.(*v1.Condition), b.(*v1beta1.Condition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ExtensionConfigStatus)(nil), (*v1beta2.ExtensionConfigStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1alpha1_ExtensionConfigStatus_To_v1beta2_ExtensionConfigStatus(a.(*ExtensionConfigStatus), b.(*v1beta2.ExtensionConfigStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta1.Condition)(nil), (*v1.Condition)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Condition_To_v1_Condition(a.(*v1beta1.Condition), b.(*v1.Condition), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*v1beta2.ExtensionConfigStatus)(nil), (*ExtensionConfigStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta2_ExtensionConfigStatus_To_v1alpha1_ExtensionConfigStatus(a.(*v1beta2.ExtensionConfigStatus), b.(*ExtensionConfigStatus), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1alpha1_ClientConfig_To_v1beta2_ClientConfig(in *ClientConfig, out *v1beta2.ClientConfig, s conversion.Scope) error {
	out.URL = (*string)(unsafe.Pointer(in.URL))
	out.Service = (*v1beta2.ServiceReference)(unsafe.Pointer(in.Service))
	out.CABundle = *(*[]byte)(unsafe.Pointer(&in.CABundle))
	return nil
}

// Convert_v1alpha1_ClientConfig_To_v1beta2_ClientConfig is an autogenerated conversion function.
func Convert_v1alpha1_ClientConfig_To_v1beta2_ClientConfig(in *ClientConfig, out *v1beta2.ClientConfig, s conversion.Scope) error {
	return autoConvert_v1alpha1_ClientConfig_To_v1beta2_ClientConfig(in, out, s)
}

func autoConvert_v1beta2_ClientConfig_To_v1alpha1_ClientConfig(in *v1beta2.ClientConfig, out *ClientConfig, s conversion.Scope) error {
	out.URL = (*string)(unsafe.Pointer(in.URL))
	out.Service = (*ServiceReference)(unsafe.Pointer(in.Service))
	out.CABundle = *(*[]byte)(unsafe.Pointer(&in.CABundle))
	return nil
}

// Convert_v1beta2_ClientConfig_To_v1alpha1_ClientConfig is an autogenerated conversion function.
func Convert_v1beta2_ClientConfig_To_v1alpha1_ClientConfig(in *v1beta2.ClientConfig, out *ClientConfig, s conversion.Scope) error {
	return autoConvert_v1beta2_ClientConfig_To_v1alpha1_ClientConfig(in, out, s)
}

func autoConvert_v1alpha1_ExtensionConfig_To_v1beta2_ExtensionConfig(in *ExtensionConfig, out *v1beta2.ExtensionConfig, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1alpha1_ExtensionConfigSpec_To_v1beta2_ExtensionConfigSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1alpha1_ExtensionConfigStatus_To_v1beta2_ExtensionConfigStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1alpha1_ExtensionConfig_To_v1beta2_ExtensionConfig is an autogenerated conversion function.
func Convert_v1alpha1_ExtensionConfig_To_v1beta2_ExtensionConfig(in *ExtensionConfig, out *v1beta2.ExtensionConfig, s conversion.Scope) error {
	return autoConvert_v1alpha1_ExtensionConfig_To_v1beta2_ExtensionConfig(in, out, s)
}

func autoConvert_v1beta2_ExtensionConfig_To_v1alpha1_ExtensionConfig(in *v1beta2.ExtensionConfig, out *ExtensionConfig, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta2_ExtensionConfigSpec_To_v1alpha1_ExtensionConfigSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta2_ExtensionConfigStatus_To_v1alpha1_ExtensionConfigStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta2_ExtensionConfig_To_v1alpha1_ExtensionConfig is an autogenerated conversion function.
func Convert_v1beta2_ExtensionConfig_To_v1alpha1_ExtensionConfig(in *v1beta2.ExtensionConfig, out *ExtensionConfig, s conversion.Scope) error {
	return autoConvert_v1beta2_ExtensionConfig_To_v1alpha1_ExtensionConfig(in, out, s)
}

func autoConvert_v1alpha1_ExtensionConfigList_To_v1beta2_ExtensionConfigList(in *ExtensionConfigList, out *v1beta2.ExtensionConfigList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]v1beta2.ExtensionConfig, len(*in))
		for i := range *in {
			if err := Convert_v1alpha1_ExtensionConfig_To_v1beta2_ExtensionConfig(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1alpha1_ExtensionConfigList_To_v1beta2_ExtensionConfigList is an autogenerated conversion function.
func Convert_v1alpha1_ExtensionConfigList_To_v1beta2_ExtensionConfigList(in *ExtensionConfigList, out *v1beta2.ExtensionConfigList, s conversion.Scope) error {
	return autoConvert_v1alpha1_ExtensionConfigList_To_v1beta2_ExtensionConfigList(in, out, s)
}

func autoConvert_v1beta2_ExtensionConfigList_To_v1alpha1_ExtensionConfigList(in *v1beta2.ExtensionConfigList, out *ExtensionConfigList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ExtensionConfig, len(*in))
		for i := range *in {
			if err := Convert_v1beta2_ExtensionConfig_To_v1alpha1_ExtensionConfig(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta2_ExtensionConfigList_To_v1alpha1_ExtensionConfigList is an autogenerated conversion function.
func Convert_v1beta2_ExtensionConfigList_To_v1alpha1_ExtensionConfigList(in *v1beta2.ExtensionConfigList, out *ExtensionConfigList, s conversion.Scope) error {
	return autoConvert_v1beta2_ExtensionConfigList_To_v1alpha1_ExtensionConfigList(in, out, s)
}

func autoConvert_v1alpha1_ExtensionConfigSpec_To_v1beta2_ExtensionConfigSpec(in *ExtensionConfigSpec, out *v1beta2.ExtensionConfigSpec, s conversion.Scope) error {
	if err := Convert_v1alpha1_ClientConfig_To_v1beta2_ClientConfig(&in.ClientConfig, &out.ClientConfig, s); err != nil {
		return err
	}
	out.NamespaceSelector = (*v1.LabelSelector)(unsafe.Pointer(in.NamespaceSelector))
	out.Settings = *(*map[string]string)(unsafe.Pointer(&in.Settings))
	return nil
}

// Convert_v1alpha1_ExtensionConfigSpec_To_v1beta2_ExtensionConfigSpec is an autogenerated conversion function.
func Convert_v1alpha1_ExtensionConfigSpec_To_v1beta2_ExtensionConfigSpec(in *ExtensionConfigSpec, out *v1beta2.ExtensionConfigSpec, s conversion.Scope) error {
	return autoConvert_v1alpha1_ExtensionConfigSpec_To_v1beta2_ExtensionConfigSpec(in, out, s)
}

func autoConvert_v1beta2_ExtensionConfigSpec_To_v1alpha1_ExtensionConfigSpec(in *v1beta2.ExtensionConfigSpec, out *ExtensionConfigSpec, s conversion.Scope) error {
	if err := Convert_v1beta2_ClientConfig_To_v1alpha1_ClientConfig(&in.ClientConfig, &out.ClientConfig, s); err != nil {
		return err
	}
	out.NamespaceSelector = (*v1.LabelSelector)(unsafe.Pointer(in.NamespaceSelector))
	out.Settings = *(*map[string]string)(unsafe.Pointer(&in.Settings))
	return nil
}

// Convert_v1beta2_ExtensionConfigSpec_To_v1alpha1_ExtensionConfigSpec is an autogenerated conversion function.
func Convert_v1beta2_ExtensionConfigSpec_To_v1alpha1_ExtensionConfigSpec(in *v1beta2.ExtensionConfigSpec, out *ExtensionConfigSpec, s conversion.Scope) error {
	return autoConvert_v1beta2_ExtensionConfigSpec_To_v1alpha1_ExtensionConfigSpec(in, out, s)
}

func autoConvert_v1alpha1_ExtensionConfigStatus_To_v1beta2_ExtensionConfigStatus(in *ExtensionConfigStatus, out *v1beta2.ExtensionConfigStatus, s conversion.Scope) error {
	out.Handlers = *(*[]v1beta2.ExtensionHandler)(unsafe.Pointer(&in.Handlers))
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_Condition_To_v1_Condition(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Conditions = nil
	}
	// WARNING: in.V1Beta2 requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta2_ExtensionConfigStatus_To_v1alpha1_ExtensionConfigStatus(in *v1beta2.ExtensionConfigStatus, out *ExtensionConfigStatus, s conversion.Scope) error {
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make(v1beta1.Conditions, len(*in))
		for i := range *in {
			if err := Convert_v1_Condition_To_v1beta1_Condition(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Conditions = nil
	}
	out.Handlers = *(*[]ExtensionHandler)(unsafe.Pointer(&in.Handlers))
	// WARNING: in.Deprecated requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1alpha1_ExtensionHandler_To_v1beta2_ExtensionHandler(in *ExtensionHandler, out *v1beta2.ExtensionHandler, s conversion.Scope) error {
	out.Name = in.Name
	if err := Convert_v1alpha1_GroupVersionHook_To_v1beta2_GroupVersionHook(&in.RequestHook, &out.RequestHook, s); err != nil {
		return err
	}
	out.TimeoutSeconds = (*int32)(unsafe.Pointer(in.TimeoutSeconds))
	out.FailurePolicy = (*v1beta2.FailurePolicy)(unsafe.Pointer(in.FailurePolicy))
	return nil
}

// Convert_v1alpha1_ExtensionHandler_To_v1beta2_ExtensionHandler is an autogenerated conversion function.
func Convert_v1alpha1_ExtensionHandler_To_v1beta2_ExtensionHandler(in *ExtensionHandler, out *v1beta2.ExtensionHandler, s conversion.Scope) error {
	return autoConvert_v1alpha1_ExtensionHandler_To_v1beta2_ExtensionHandler(in, out, s)
}

func autoConvert_v1beta2_ExtensionHandler_To_v1alpha1_ExtensionHandler(in *v1beta2.ExtensionHandler, out *ExtensionHandler, s conversion.Scope) error {
	out.Name = in.Name
	if err := Convert_v1beta2_GroupVersionHook_To_v1alpha1_GroupVersionHook(&in.RequestHook, &out.RequestHook, s); err != nil {
		return err
	}
	out.TimeoutSeconds = (*int32)(unsafe.Pointer(in.TimeoutSeconds))
	out.FailurePolicy = (*FailurePolicy)(unsafe.Pointer(in.FailurePolicy))
	return nil
}

// Convert_v1beta2_ExtensionHandler_To_v1alpha1_ExtensionHandler is an autogenerated conversion function.
func Convert_v1beta2_ExtensionHandler_To_v1alpha1_ExtensionHandler(in *v1beta2.ExtensionHandler, out *ExtensionHandler, s conversion.Scope) error {
	return autoConvert_v1beta2_ExtensionHandler_To_v1alpha1_ExtensionHandler(in, out, s)
}

func autoConvert_v1alpha1_GroupVersionHook_To_v1beta2_GroupVersionHook(in *GroupVersionHook, out *v1beta2.GroupVersionHook, s conversion.Scope) error {
	out.APIVersion = in.APIVersion
	out.Hook = in.Hook
	return nil
}

// Convert_v1alpha1_GroupVersionHook_To_v1beta2_GroupVersionHook is an autogenerated conversion function.
func Convert_v1alpha1_GroupVersionHook_To_v1beta2_GroupVersionHook(in *GroupVersionHook, out *v1beta2.GroupVersionHook, s conversion.Scope) error {
	return autoConvert_v1alpha1_GroupVersionHook_To_v1beta2_GroupVersionHook(in, out, s)
}

func autoConvert_v1beta2_GroupVersionHook_To_v1alpha1_GroupVersionHook(in *v1beta2.GroupVersionHook, out *GroupVersionHook, s conversion.Scope) error {
	out.APIVersion = in.APIVersion
	out.Hook = in.Hook
	return nil
}

// Convert_v1beta2_GroupVersionHook_To_v1alpha1_GroupVersionHook is an autogenerated conversion function.
func Convert_v1beta2_GroupVersionHook_To_v1alpha1_GroupVersionHook(in *v1beta2.GroupVersionHook, out *GroupVersionHook, s conversion.Scope) error {
	return autoConvert_v1beta2_GroupVersionHook_To_v1alpha1_GroupVersionHook(in, out, s)
}

func autoConvert_v1alpha1_ServiceReference_To_v1beta2_ServiceReference(in *ServiceReference, out *v1beta2.ServiceReference, s conversion.Scope) error {
	out.Namespace = in.Namespace
	out.Name = in.Name
	out.Path = (*string)(unsafe.Pointer(in.Path))
	out.Port = (*int32)(unsafe.Pointer(in.Port))
	return nil
}

// Convert_v1alpha1_ServiceReference_To_v1beta2_ServiceReference is an autogenerated conversion function.
func Convert_v1alpha1_ServiceReference_To_v1beta2_ServiceReference(in *ServiceReference, out *v1beta2.ServiceReference, s conversion.Scope) error {
	return autoConvert_v1alpha1_ServiceReference_To_v1beta2_ServiceReference(in, out, s)
}

func autoConvert_v1beta2_ServiceReference_To_v1alpha1_ServiceReference(in *v1beta2.ServiceReference, out *ServiceReference, s conversion.Scope) error {
	out.Namespace = in.Namespace
	out.Name = in.Name
	out.Path = (*string)(unsafe.Pointer(in.Path))
	out.Port = (*int32)(unsafe.Pointer(in.Port))
	return nil
}

// Convert_v1beta2_ServiceReference_To_v1alpha1_ServiceReference is an autogenerated conversion function.
func Convert_v1beta2_ServiceReference_To_v1alpha1_ServiceReference(in *v1beta2.ServiceReference, out *ServiceReference, s conversion.Scope) error {
	return autoConvert_v1beta2_ServiceReference_To_v1alpha1_ServiceReference(in, out, s)
}
