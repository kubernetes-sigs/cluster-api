---
# DockerCluster object referenced by the Cluster object
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: DockerCluster
metadata:
  name: '${CLUSTER_NAME}'
spec:
  failureDomains:
    - name: fd1
      controlPlane: true
    - name: fd2
      controlPlane: true
    - name: fd3
      controlPlane: true
    - name: fd4
      controlPlane: false
    - name: fd5
      controlPlane: false
    - name: fd6
      controlPlane: false
    - name: fd7
      controlPlane: false
    - name: fd8
      controlPlane: false
---
# Cluster object with
# - Reference to the KubeadmControlPlane object
# - the label cni=${CLUSTER_NAME}-crs-0, so the cluster can be selected by the ClusterResourceSet.
apiVersion: cluster.x-k8s.io/v1beta2
kind: Cluster
metadata:
  name: '${CLUSTER_NAME}'
  labels:
    cni: "${CLUSTER_NAME}-crs-0"
spec:
  clusterNetwork:
    services:
      cidrBlocks: ['${DOCKER_SERVICE_CIDRS}']
    pods:
      cidrBlocks: ['${DOCKER_POD_CIDRS}']
    serviceDomain: '${DOCKER_SERVICE_DOMAIN}'
  infrastructureRef:
    apiGroup: infrastructure.cluster.x-k8s.io
    kind: DockerCluster
    name: '${CLUSTER_NAME}'
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiGroup: controlplane.cluster.x-k8s.io
    name: "${CLUSTER_NAME}-control-plane"
---
# DockerMachineTemplate object referenced by the KubeadmControlPlane object
apiVersion: infrastructure.cluster.x-k8s.io/v1beta2
kind: DockerMachineTemplate
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  template:
    spec:
      extraMounts:
        - containerPath: "/var/run/docker.sock"
          hostPath: "/var/run/docker.sock"
      # The DOCKER_PRELOAD_IMAGES variable gets set in self-hosted E2E tests to the list of images of the E2E configuration.
      preLoadImages: ${DOCKER_PRELOAD_IMAGES:-[]}
---
# KubeadmControlPlane referenced by the Cluster object with
# - the label kcp-adoption.step2, because it should be created in the second step of the kcp-adoption test.
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta2
metadata:
  name: "${CLUSTER_NAME}-control-plane"
  labels:
    kcp-adoption.step2: ""
spec:
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  machineTemplate:
    spec:
      infrastructureRef:
        kind: DockerMachineTemplate
        apiGroup: infrastructure.cluster.x-k8s.io
        name: "${CLUSTER_NAME}-control-plane"
  kubeadmConfigSpec:
    clusterConfiguration:
      apiServer:
        # host.docker.internal is required by kubetest when running on MacOS because of the way ports are proxied.
        certSANs: [localhost, 127.0.0.1, 0.0.0.0, host.docker.internal]
  version: "${KUBERNETES_VERSION}"
